<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AutoMapper.3.2.1.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:AutoMapper.Fakes.ShimAliasedMember">
            <summary>AutoMapper.AliasedMember 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAliasedMember.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAliasedMember.#ctor(AutoMapper.AliasedMember)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAliasedMember.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAliasedMember.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAliasedMember.AliasGet">
            <summary>设置 AliasedMember.get_Alias() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAliasedMember.AliasSetString">
            <summary>设置 AliasedMember.set_Alias(String value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAliasedMember.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAliasedMember.ConstructorStringString">
            <summary>设置 AliasedMember.AliasedMember(String member, String alias) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAliasedMember.EqualsAliasedMember">
            <summary>设置 AliasedMember.Equals(AliasedMember other) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAliasedMember.EqualsObject">
            <summary>设置 AliasedMember.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAliasedMember.GetHashCode">
            <summary>设置 AliasedMember.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAliasedMember.MemberGet">
            <summary>设置 AliasedMember.get_Member() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAliasedMember.MemberSetString">
            <summary>设置 AliasedMember.set_Member(String value) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimAliasedMember.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAliasedMember.AllInstances.AliasGet">
            <summary>设置 AliasedMember.get_Alias() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAliasedMember.AllInstances.AliasSetString">
            <summary>设置 AliasedMember.set_Alias(String value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAliasedMember.AllInstances.EqualsAliasedMember">
            <summary>设置 AliasedMember.Equals(AliasedMember other) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAliasedMember.AllInstances.EqualsObject">
            <summary>设置 AliasedMember.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAliasedMember.AllInstances.GetHashCode01">
            <summary>设置 AliasedMember.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAliasedMember.AllInstances.MemberGet">
            <summary>设置 AliasedMember.get_Member() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAliasedMember.AllInstances.MemberSetString">
            <summary>设置 AliasedMember.set_Member(String value) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimAutoMapperConfigurationException">
            <summary>AutoMapper.AutoMapperConfigurationException 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAutoMapperConfigurationException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAutoMapperConfigurationException.#ctor(AutoMapper.AutoMapperConfigurationException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAutoMapperConfigurationException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAutoMapperConfigurationException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAutoMapperConfigurationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ConstructorAutoMapperConfigurationExceptionTypeMapConfigErrorsArray">
            <summary>设置 AutoMapperConfigurationException.AutoMapperConfigurationException(TypeMapConfigErrors[] errors) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ConstructorResolutionContext">
            <summary>设置 AutoMapperConfigurationException.AutoMapperConfigurationException(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ConstructorString">
            <summary>设置 AutoMapperConfigurationException.AutoMapperConfigurationException(String message) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ConstructorStringException">
            <summary>设置 AutoMapperConfigurationException.AutoMapperConfigurationException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ContextGet">
            <summary>设置 AutoMapperConfigurationException.get_Context() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ContextSetResolutionContext">
            <summary>设置 AutoMapperConfigurationException.set_Context(ResolutionContext value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ErrorsGet">
            <summary>设置 AutoMapperConfigurationException.get_Errors() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ErrorsSetAutoMapperConfigurationExceptionTypeMapConfigErrorsArray">
            <summary>设置 AutoMapperConfigurationException.set_Errors(TypeMapConfigErrors[] value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.MessageGet">
            <summary>设置 AutoMapperConfigurationException.get_Message() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.StackTraceGet">
            <summary>设置 AutoMapperConfigurationException.get_StackTrace() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException._get_StackTraceb__0String">
            <summary>设置 AutoMapperConfigurationException.&lt;get_StackTrace&gt;b__0(String str) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimAutoMapperConfigurationException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.AllInstances.ContextGet">
            <summary>设置 AutoMapperConfigurationException.get_Context() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.AllInstances.ContextSetResolutionContext">
            <summary>设置 AutoMapperConfigurationException.set_Context(ResolutionContext value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.AllInstances.ErrorsGet">
            <summary>设置 AutoMapperConfigurationException.get_Errors() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.AllInstances.ErrorsSetAutoMapperConfigurationExceptionTypeMapConfigErrorsArray">
            <summary>设置 AutoMapperConfigurationException.set_Errors(TypeMapConfigErrors[] value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.AllInstances.MessageGet">
            <summary>设置 AutoMapperConfigurationException.get_Message() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.AllInstances.StackTraceGet">
            <summary>设置 AutoMapperConfigurationException.get_StackTrace() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ShimTypeMapConfigErrors">
            <summary>AutoMapper.AutoMapperConfigurationException+TypeMapConfigErrors 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ShimTypeMapConfigErrors.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ShimTypeMapConfigErrors.#ctor(AutoMapper.AutoMapperConfigurationException.TypeMapConfigErrors)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ShimTypeMapConfigErrors.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ShimTypeMapConfigErrors.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ShimTypeMapConfigErrors.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ShimTypeMapConfigErrors.ConstructorTypeMapStringArray">
            <summary>设置 TypeMapConfigErrors.TypeMapConfigErrors(TypeMap typeMap, String[] unmappedPropertyNames) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ShimTypeMapConfigErrors.TypeMapGet">
            <summary>设置 TypeMapConfigErrors.get_TypeMap() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ShimTypeMapConfigErrors.TypeMapSetTypeMap">
            <summary>设置 TypeMapConfigErrors.set_TypeMap(TypeMap value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ShimTypeMapConfigErrors.UnmappedPropertyNamesGet">
            <summary>设置 TypeMapConfigErrors.get_UnmappedPropertyNames() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ShimTypeMapConfigErrors.UnmappedPropertyNamesSetStringArray">
            <summary>设置 TypeMapConfigErrors.set_UnmappedPropertyNames(String[] value) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ShimTypeMapConfigErrors.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ShimTypeMapConfigErrors.AllInstances.TypeMapGet">
            <summary>设置 TypeMapConfigErrors.get_TypeMap() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ShimTypeMapConfigErrors.AllInstances.TypeMapSetTypeMap">
            <summary>设置 TypeMapConfigErrors.set_TypeMap(TypeMap value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ShimTypeMapConfigErrors.AllInstances.UnmappedPropertyNamesGet">
            <summary>设置 TypeMapConfigErrors.get_UnmappedPropertyNames() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperConfigurationException.ShimTypeMapConfigErrors.AllInstances.UnmappedPropertyNamesSetStringArray">
            <summary>设置 TypeMapConfigErrors.set_UnmappedPropertyNames(String[] value) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimAutoMapperMappingException">
            <summary>AutoMapper.AutoMapperMappingException 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAutoMapperMappingException.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAutoMapperMappingException.#ctor(AutoMapper.AutoMapperMappingException)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAutoMapperMappingException.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAutoMapperMappingException.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimAutoMapperMappingException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException.Constructor">
            <summary>设置 AutoMapperMappingException.AutoMapperMappingException() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException.ConstructorResolutionContext">
            <summary>设置 AutoMapperMappingException.AutoMapperMappingException(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException.ConstructorResolutionContextException">
            <summary>设置 AutoMapperMappingException.AutoMapperMappingException(ResolutionContext context, Exception inner) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException.ConstructorResolutionContextString">
            <summary>设置 AutoMapperMappingException.AutoMapperMappingException(ResolutionContext context, String message) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException.ConstructorString">
            <summary>设置 AutoMapperMappingException.AutoMapperMappingException(String message) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException.ConstructorStringException">
            <summary>设置 AutoMapperMappingException.AutoMapperMappingException(String message, Exception inner) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException.ContextGet">
            <summary>设置 AutoMapperMappingException.get_Context() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException.ContextSetResolutionContext">
            <summary>设置 AutoMapperMappingException.set_Context(ResolutionContext value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException.GetContextsResolutionContext">
            <summary>设置 AutoMapperMappingException.GetContexts(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException.GetDestPathResolutionContext">
            <summary>设置 AutoMapperMappingException.GetDestPath(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException.MessageGet">
            <summary>设置 AutoMapperMappingException.get_Message() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException.StackTraceGet">
            <summary>设置 AutoMapperMappingException.get_StackTrace() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException._get_StackTraceb__3String">
            <summary>设置 AutoMapperMappingException.&lt;get_StackTrace&gt;b__3(String str) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimAutoMapperMappingException.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException.AllInstances.ContextGet">
            <summary>设置 AutoMapperMappingException.get_Context() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException.AllInstances.ContextSetResolutionContext">
            <summary>设置 AutoMapperMappingException.set_Context(ResolutionContext value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException.AllInstances.GetDestPathResolutionContext">
            <summary>设置 AutoMapperMappingException.GetDestPath(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException.AllInstances.MessageGet">
            <summary>设置 AutoMapperMappingException.get_Message() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimAutoMapperMappingException.AllInstances.StackTraceGet">
            <summary>设置 AutoMapperMappingException.get_StackTrace() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimConfigurationStore">
            <summary>AutoMapper.ConfigurationStore 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.#ctor(AutoMapper.ConfigurationStore)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.AddFormatterOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IFormatterCtorExpression{``0}})">
            <summary>设置 ConfigurationStore.AddFormatter() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.AddProfileOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>设置 ConfigurationStore.AddProfile() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.AssertConfigurationIsValidOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>设置 ConfigurationStore.AssertConfigurationIsValid() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.Bind(AutoMapper.IConfiguration)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.Bind(AutoMapper.IConfigurationProvider)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.Bind(AutoMapper.IFormatterExpression)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.Bind(AutoMapper.IMappingOptions)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.Bind(AutoMapper.IProfileConfiguration)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.Bind(AutoMapper.IProfileExpression)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.CreateMapOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IMappingExpression{``0,``1}})">
            <summary>设置 ConfigurationStore.CreateMap() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.CreateMapOf2MemberList``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MemberList,AutoMapper.IMappingExpression{``0,``1}})">
            <summary>设置 ConfigurationStore.CreateMap(MemberList memberList) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.CreateMapOf2String``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,AutoMapper.IMappingExpression{``0,``1}})">
            <summary>设置 ConfigurationStore.CreateMap(String profileName) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.CreateMapOf2StringMemberList``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,AutoMapper.MemberList,AutoMapper.IMappingExpression{``0,``1}})">
            <summary>设置 ConfigurationStore.CreateMap(String profileName, MemberList memberList) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.CreateMappingExpressionOf2TypeMap``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.TypeMap,AutoMapper.IMappingExpression{``0,``1}})">
            <summary>设置 ConfigurationStore.CreateMappingExpression(TypeMap typeMap) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.ForSourceTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IFormatterExpression})">
            <summary>设置 ConfigurationStore.ForSourceType() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.SkipFormatterOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>设置 ConfigurationStore.SkipFormatter() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore._CreateMappingExpressionb__1fOf2Object``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Boolean})">
            <summary>设置 ConfigurationStore.&lt;CreateMappingExpression&gt;b__1f(Object x) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore._CreateMappingExpressionb__20Of2IMemberConfigurationExpressionOfM0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{AutoMapper.IMemberConfigurationExpression{``0}})">
            <summary>设置 ConfigurationStore.&lt;CreateMappingExpression&gt;b__20(IMemberConfigurationExpression`1&lt;!!0&gt; y) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AddFormatExpressionFuncOfResolutionContextString">
            <summary>设置 ConfigurationStore.AddFormatExpression(Func`2&lt;ResolutionContext,String&gt; formatExpression) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AddFormatterIValueFormatter">
            <summary>设置 ConfigurationStore.AddFormatter(IValueFormatter formatter) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AddFormatterType">
            <summary>设置 ConfigurationStore.AddFormatter(Type valueFormatterType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AddGlobalIgnoreString">
            <summary>设置 ConfigurationStore.AddGlobalIgnore(String startingwith) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AddProfileProfile">
            <summary>设置 ConfigurationStore.AddProfile(Profile profile) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AliasesGet">
            <summary>设置 ConfigurationStore.get_Aliases() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllowNullCollectionsGet">
            <summary>设置 ConfigurationStore.get_AllowNullCollections() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllowNullCollectionsSetBoolean">
            <summary>设置 ConfigurationStore.set_AllowNullCollections(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllowNullDestinationValuesGet">
            <summary>设置 ConfigurationStore.get_AllowNullDestinationValues() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllowNullDestinationValuesSetBoolean">
            <summary>设置 ConfigurationStore.set_AllowNullDestinationValues(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AssertConfigurationIsValid">
            <summary>设置 ConfigurationStore.AssertConfigurationIsValid() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AssertConfigurationIsValidIEnumerableOfTypeMap">
            <summary>设置 ConfigurationStore.AssertConfigurationIsValid(IEnumerable`1&lt;TypeMap&gt; typeMaps) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AssertConfigurationIsValidString">
            <summary>设置 ConfigurationStore.AssertConfigurationIsValid(String profileName) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AssertConfigurationIsValidTypeMap">
            <summary>设置 ConfigurationStore.AssertConfigurationIsValid(TypeMap typeMap) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.ConstructServicesUsingFuncOfTypeObject">
            <summary>设置 ConfigurationStore.ConstructServicesUsing(Func`2&lt;Type,Object&gt; constructor) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.ConstructorITypeMapFactoryIEnumerableOfIObjectMapper">
            <summary>设置 ConfigurationStore.ConfigurationStore(ITypeMapFactory typeMapFactory, IEnumerable`1&lt;IObjectMapper&gt; mappers) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.ConstructorMappingEnabledGet">
            <summary>设置 ConfigurationStore.get_ConstructorMappingEnabled() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.CreateMapTypeType">
            <summary>设置 ConfigurationStore.CreateMap(Type sourceType, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.CreateMapTypeTypeMemberList">
            <summary>设置 ConfigurationStore.CreateMap(Type sourceType, Type destinationType, MemberList memberList) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.CreateMapTypeTypeMemberListString">
            <summary>设置 ConfigurationStore.CreateMap(Type sourceType, Type destinationType, MemberList memberList, String profileName) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.CreateMappingExpressionTypeMapType">
            <summary>设置 ConfigurationStore.CreateMappingExpression(TypeMap typeMap, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.CreateProfileString">
            <summary>设置 ConfigurationStore.CreateProfile(String profileName) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.CreateProfileStringActionOfIProfileExpression">
            <summary>设置 ConfigurationStore.CreateProfile(String profileName, Action`1&lt;IProfileExpression&gt; profileConfiguration) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.CreateTypeMapTypeType">
            <summary>设置 ConfigurationStore.CreateTypeMap(Type source, Type destination) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.CreateTypeMapTypeTypeStringMemberList">
            <summary>设置 ConfigurationStore.CreateTypeMap(Type source, Type destination, String profileName, MemberList memberList) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.DataReaderMapperYieldReturnEnabledGet">
            <summary>设置 ConfigurationStore.get_DataReaderMapperYieldReturnEnabled() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.DestinationMemberNamingConventionGet">
            <summary>设置 ConfigurationStore.get_DestinationMemberNamingConvention() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.DestinationMemberNamingConventionSetINamingConvention">
            <summary>设置 ConfigurationStore.set_DestinationMemberNamingConvention(INamingConvention value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.DestinationPostfixesGet">
            <summary>设置 ConfigurationStore.get_DestinationPostfixes() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.DestinationPrefixesGet">
            <summary>设置 ConfigurationStore.get_DestinationPrefixes() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.DisableConstructorMapping">
            <summary>设置 ConfigurationStore.DisableConstructorMapping() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.DryRunTypeMapICollectionOfTypeMapResolutionContext">
            <summary>设置 ConfigurationStore.DryRunTypeMap(ICollection`1&lt;TypeMap&gt; typeMapsChecked, ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.EnableYieldReturnForDataReaderMapper">
            <summary>设置 ConfigurationStore.EnableYieldReturnForDataReaderMapper() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.FindExplicitlyDefinedTypeMapTypeType">
            <summary>设置 ConfigurationStore.FindExplicitlyDefinedTypeMap(Type sourceType, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.FindTypeMapForObjectObjectTypeType">
            <summary>设置 ConfigurationStore.FindTypeMapFor(Object source, Object destination, Type sourceType, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.FindTypeMapForResolutionResultType">
            <summary>设置 ConfigurationStore.FindTypeMapFor(ResolutionResult resolutionResult, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.FindTypeMapForTypeType">
            <summary>设置 ConfigurationStore.FindTypeMapFor(Type sourceType, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.FindTypeMapObjectObjectTypeTypeString">
            <summary>设置 ConfigurationStore.FindTypeMap(Object source, Object destination, Type sourceType, Type destinationType, String profileName) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.GetAllTypeMaps">
            <summary>设置 ConfigurationStore.GetAllTypeMaps() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.GetInheritanceDepthType">
            <summary>设置 ConfigurationStore.GetInheritanceDepth(Type type) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.GetMappers">
            <summary>设置 ConfigurationStore.GetMappers() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.GetProfileConfigurationString">
            <summary>设置 ConfigurationStore.GetProfileConfiguration(String profileName) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.GetProfileString">
            <summary>设置 ConfigurationStore.GetProfile(String profileName) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.IncludeBaseMappingsTypeTypeTypeMap">
            <summary>设置 ConfigurationStore.IncludeBaseMappings(Type source, Type destination, TypeMap typeMap) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.IncludeSourceExtensionMethodsAssembly">
            <summary>设置 ConfigurationStore.IncludeSourceExtensionMethods(Assembly assembly) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.InheritanceTreeType">
            <summary>设置 ConfigurationStore.InheritanceTree(Type type) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.MapNullSourceCollectionsAsNullAutoMapperIProfileConfigurationget">
            <summary>设置 ConfigurationStore.AutoMapper.IProfileConfiguration.get_MapNullSourceCollectionsAsNull() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.MapNullSourceValuesAsNullAutoMapperIProfileConfigurationget">
            <summary>设置 ConfigurationStore.AutoMapper.IProfileConfiguration.get_MapNullSourceValuesAsNull() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.OnTypeMapCreatedTypeMap">
            <summary>设置 ConfigurationStore.OnTypeMapCreated(TypeMap typeMap) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.PostfixesGet">
            <summary>设置 ConfigurationStore.get_Postfixes() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.PrefixesGet">
            <summary>设置 ConfigurationStore.get_Prefixes() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.RecognizeAliasStringString">
            <summary>设置 ConfigurationStore.RecognizeAlias(String original, String alias) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.RecognizeDestinationPostfixesStringArray">
            <summary>设置 ConfigurationStore.RecognizeDestinationPostfixes(String[] postfixes) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.RecognizeDestinationPrefixesStringArray">
            <summary>设置 ConfigurationStore.RecognizeDestinationPrefixes(String[] prefixes) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.RecognizePostfixesStringArray">
            <summary>设置 ConfigurationStore.RecognizePostfixes(String[] postfixes) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.RecognizePrefixesStringArray">
            <summary>设置 ConfigurationStore.RecognizePrefixes(String[] prefixes) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.Seal">
            <summary>设置 ConfigurationStore.Seal() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.ServiceCtorGet">
            <summary>设置 ConfigurationStore.get_ServiceCtor() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.ShouldCheckMapTypeMap">
            <summary>设置 ConfigurationStore.ShouldCheckMap(TypeMap typeMap) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.SourceExtensionMethodsGet">
            <summary>设置 ConfigurationStore.get_SourceExtensionMethods() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.SourceMemberNamingConventionGet">
            <summary>设置 ConfigurationStore.get_SourceMemberNamingConvention() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.SourceMemberNamingConventionSetINamingConvention">
            <summary>设置 ConfigurationStore.set_SourceMemberNamingConvention(INamingConvention value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.StaticConstructor">
            <summary>设置 ConfigurationStore.ConfigurationStore() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.TypeMapCreatedAddEventHandlerOfTypeMapCreatedEventArgs">
            <summary>设置 ConfigurationStore.add_TypeMapCreated(EventHandler`1&lt;TypeMapCreatedEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.TypeMapCreatedRemoveEventHandlerOfTypeMapCreatedEventArgs">
            <summary>设置 ConfigurationStore.remove_TypeMapCreated(EventHandler`1&lt;TypeMapCreatedEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore._AssertConfigurationIsValidb__28TypeMap">
            <summary>设置 ConfigurationStore.&lt;AssertConfigurationIsValid&gt;b__28(TypeMap typeMap) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore._CreateMappingExpressionb__23Object">
            <summary>设置 ConfigurationStore.&lt;CreateMappingExpression&gt;b__23(Object x) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore._CreateMappingExpressionb__24IMemberConfigurationExpression">
            <summary>设置 ConfigurationStore.&lt;CreateMappingExpression&gt;b__24(IMemberConfigurationExpression y) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore._FindTypeMapForb__10TypeMap">
            <summary>设置 ConfigurationStore.&lt;FindTypeMapFor&gt;b__10(TypeMap t) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore._FindTypeMapForb__12TypeMap">
            <summary>设置 ConfigurationStore.&lt;FindTypeMapFor&gt;b__12(TypeMap t) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore._GetProfileb__43String">
            <summary>设置 ConfigurationStore.&lt;GetProfile&gt;b__43(String name) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore._GetProfileb__44Type">
            <summary>设置 ConfigurationStore.&lt;GetProfile&gt;b__44(Type t) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore._IncludeBaseMappingsb__7PropertyMap">
            <summary>设置 ConfigurationStore.&lt;IncludeBaseMappings&gt;b__7(PropertyMap m) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore._Sealb__0TypeMap">
            <summary>设置 ConfigurationStore.&lt;Seal&gt;b__0(TypeMap typeMap) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimConfigurationStore.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.AddFormatterOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.ConfigurationStore,AutoMapper.IFormatterCtorExpression{``0}})">
            <summary>设置 ConfigurationStore.AddFormatter() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.AddProfileOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{AutoMapper.ConfigurationStore})">
            <summary>设置 ConfigurationStore.AddProfile() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.AssertConfigurationIsValidOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{AutoMapper.ConfigurationStore})">
            <summary>设置 ConfigurationStore.AssertConfigurationIsValid() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.CreateMapOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.ConfigurationStore,AutoMapper.IMappingExpression{``0,``1}})">
            <summary>设置 ConfigurationStore.CreateMap() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.CreateMapOf2MemberList``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.ConfigurationStore,AutoMapper.MemberList,AutoMapper.IMappingExpression{``0,``1}})">
            <summary>设置 ConfigurationStore.CreateMap(MemberList memberList) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.CreateMapOf2String``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.ConfigurationStore,System.String,AutoMapper.IMappingExpression{``0,``1}})">
            <summary>设置 ConfigurationStore.CreateMap(String profileName) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.CreateMapOf2StringMemberList``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.ConfigurationStore,System.String,AutoMapper.MemberList,AutoMapper.IMappingExpression{``0,``1}})">
            <summary>设置 ConfigurationStore.CreateMap(String profileName, MemberList memberList) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.CreateMappingExpressionOf2TypeMap``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.ConfigurationStore,AutoMapper.TypeMap,AutoMapper.IMappingExpression{``0,``1}})">
            <summary>设置 ConfigurationStore.CreateMappingExpression(TypeMap typeMap) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.ForSourceTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.ConfigurationStore,AutoMapper.IFormatterExpression})">
            <summary>设置 ConfigurationStore.ForSourceType() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.SkipFormatterOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{AutoMapper.ConfigurationStore})">
            <summary>设置 ConfigurationStore.SkipFormatter() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.AddFormatExpressionFuncOfResolutionContextString">
            <summary>设置 ConfigurationStore.AddFormatExpression(Func`2&lt;ResolutionContext,String&gt; formatExpression) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.AddFormatterIValueFormatter">
            <summary>设置 ConfigurationStore.AddFormatter(IValueFormatter formatter) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.AddFormatterType">
            <summary>设置 ConfigurationStore.AddFormatter(Type valueFormatterType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.AddGlobalIgnoreString">
            <summary>设置 ConfigurationStore.AddGlobalIgnore(String startingwith) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.AddProfileProfile">
            <summary>设置 ConfigurationStore.AddProfile(Profile profile) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.AliasesGet">
            <summary>设置 ConfigurationStore.get_Aliases() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.AllowNullCollectionsGet">
            <summary>设置 ConfigurationStore.get_AllowNullCollections() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.AllowNullCollectionsSetBoolean">
            <summary>设置 ConfigurationStore.set_AllowNullCollections(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.AllowNullDestinationValuesGet">
            <summary>设置 ConfigurationStore.get_AllowNullDestinationValues() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.AllowNullDestinationValuesSetBoolean">
            <summary>设置 ConfigurationStore.set_AllowNullDestinationValues(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.AssertConfigurationIsValid">
            <summary>设置 ConfigurationStore.AssertConfigurationIsValid() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.AssertConfigurationIsValidIEnumerableOfTypeMap">
            <summary>设置 ConfigurationStore.AssertConfigurationIsValid(IEnumerable`1&lt;TypeMap&gt; typeMaps) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.AssertConfigurationIsValidString">
            <summary>设置 ConfigurationStore.AssertConfigurationIsValid(String profileName) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.AssertConfigurationIsValidTypeMap">
            <summary>设置 ConfigurationStore.AssertConfigurationIsValid(TypeMap typeMap) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.ConstructServicesUsingFuncOfTypeObject">
            <summary>设置 ConfigurationStore.ConstructServicesUsing(Func`2&lt;Type,Object&gt; constructor) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.ConstructorMappingEnabledGet">
            <summary>设置 ConfigurationStore.get_ConstructorMappingEnabled() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.CreateMapTypeType">
            <summary>设置 ConfigurationStore.CreateMap(Type sourceType, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.CreateMapTypeTypeMemberList">
            <summary>设置 ConfigurationStore.CreateMap(Type sourceType, Type destinationType, MemberList memberList) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.CreateMapTypeTypeMemberListString">
            <summary>设置 ConfigurationStore.CreateMap(Type sourceType, Type destinationType, MemberList memberList, String profileName) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.CreateMappingExpressionTypeMapType">
            <summary>设置 ConfigurationStore.CreateMappingExpression(TypeMap typeMap, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.CreateProfileString">
            <summary>设置 ConfigurationStore.CreateProfile(String profileName) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.CreateProfileStringActionOfIProfileExpression">
            <summary>设置 ConfigurationStore.CreateProfile(String profileName, Action`1&lt;IProfileExpression&gt; profileConfiguration) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.CreateTypeMapTypeType">
            <summary>设置 ConfigurationStore.CreateTypeMap(Type source, Type destination) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.CreateTypeMapTypeTypeStringMemberList">
            <summary>设置 ConfigurationStore.CreateTypeMap(Type source, Type destination, String profileName, MemberList memberList) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.DataReaderMapperYieldReturnEnabledGet">
            <summary>设置 ConfigurationStore.get_DataReaderMapperYieldReturnEnabled() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.DestinationMemberNamingConventionGet">
            <summary>设置 ConfigurationStore.get_DestinationMemberNamingConvention() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.DestinationMemberNamingConventionSetINamingConvention">
            <summary>设置 ConfigurationStore.set_DestinationMemberNamingConvention(INamingConvention value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.DestinationPostfixesGet">
            <summary>设置 ConfigurationStore.get_DestinationPostfixes() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.DestinationPrefixesGet">
            <summary>设置 ConfigurationStore.get_DestinationPrefixes() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.DisableConstructorMapping">
            <summary>设置 ConfigurationStore.DisableConstructorMapping() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.DryRunTypeMapICollectionOfTypeMapResolutionContext">
            <summary>设置 ConfigurationStore.DryRunTypeMap(ICollection`1&lt;TypeMap&gt; typeMapsChecked, ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.EnableYieldReturnForDataReaderMapper">
            <summary>设置 ConfigurationStore.EnableYieldReturnForDataReaderMapper() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.FindExplicitlyDefinedTypeMapTypeType">
            <summary>设置 ConfigurationStore.FindExplicitlyDefinedTypeMap(Type sourceType, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.FindTypeMapForObjectObjectTypeType">
            <summary>设置 ConfigurationStore.FindTypeMapFor(Object source, Object destination, Type sourceType, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.FindTypeMapForResolutionResultType">
            <summary>设置 ConfigurationStore.FindTypeMapFor(ResolutionResult resolutionResult, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.FindTypeMapForTypeType">
            <summary>设置 ConfigurationStore.FindTypeMapFor(Type sourceType, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.FindTypeMapObjectObjectTypeTypeString">
            <summary>设置 ConfigurationStore.FindTypeMap(Object source, Object destination, Type sourceType, Type destinationType, String profileName) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.GetAllTypeMaps">
            <summary>设置 ConfigurationStore.GetAllTypeMaps() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.GetMappers">
            <summary>设置 ConfigurationStore.GetMappers() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.GetProfileConfigurationString">
            <summary>设置 ConfigurationStore.GetProfileConfiguration(String profileName) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.GetProfileString">
            <summary>设置 ConfigurationStore.GetProfile(String profileName) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.IncludeBaseMappingsTypeTypeTypeMap">
            <summary>设置 ConfigurationStore.IncludeBaseMappings(Type source, Type destination, TypeMap typeMap) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.IncludeSourceExtensionMethodsAssembly">
            <summary>设置 ConfigurationStore.IncludeSourceExtensionMethods(Assembly assembly) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.MapNullSourceCollectionsAsNullAutoMapperIProfileConfigurationget">
            <summary>设置 ConfigurationStore.AutoMapper.IProfileConfiguration.get_MapNullSourceCollectionsAsNull() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.MapNullSourceValuesAsNullAutoMapperIProfileConfigurationget">
            <summary>设置 ConfigurationStore.AutoMapper.IProfileConfiguration.get_MapNullSourceValuesAsNull() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.OnTypeMapCreatedTypeMap">
            <summary>设置 ConfigurationStore.OnTypeMapCreated(TypeMap typeMap) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.PostfixesGet">
            <summary>设置 ConfigurationStore.get_Postfixes() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.PrefixesGet">
            <summary>设置 ConfigurationStore.get_Prefixes() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.RecognizeAliasStringString">
            <summary>设置 ConfigurationStore.RecognizeAlias(String original, String alias) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.RecognizeDestinationPostfixesStringArray">
            <summary>设置 ConfigurationStore.RecognizeDestinationPostfixes(String[] postfixes) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.RecognizeDestinationPrefixesStringArray">
            <summary>设置 ConfigurationStore.RecognizeDestinationPrefixes(String[] prefixes) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.RecognizePostfixesStringArray">
            <summary>设置 ConfigurationStore.RecognizePostfixes(String[] postfixes) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.RecognizePrefixesStringArray">
            <summary>设置 ConfigurationStore.RecognizePrefixes(String[] prefixes) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.Seal">
            <summary>设置 ConfigurationStore.Seal() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.ServiceCtorGet">
            <summary>设置 ConfigurationStore.get_ServiceCtor() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.SourceExtensionMethodsGet">
            <summary>设置 ConfigurationStore.get_SourceExtensionMethods() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.SourceMemberNamingConventionGet">
            <summary>设置 ConfigurationStore.get_SourceMemberNamingConvention() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.SourceMemberNamingConventionSetINamingConvention">
            <summary>设置 ConfigurationStore.set_SourceMemberNamingConvention(INamingConvention value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.TypeMapCreatedAddEventHandlerOfTypeMapCreatedEventArgs">
            <summary>设置 ConfigurationStore.add_TypeMapCreated(EventHandler`1&lt;TypeMapCreatedEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances.TypeMapCreatedRemoveEventHandlerOfTypeMapCreatedEventArgs">
            <summary>设置 ConfigurationStore.remove_TypeMapCreated(EventHandler`1&lt;TypeMapCreatedEventArgs&gt; value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances._GetProfileb__43String">
            <summary>设置 ConfigurationStore.&lt;GetProfile&gt;b__43(String name) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConfigurationStore.AllInstances._GetProfileb__44Type">
            <summary>设置 ConfigurationStore.&lt;GetProfile&gt;b__44(Type t) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimConstructorMap">
            <summary>AutoMapper.ConstructorMap 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConstructorMap.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConstructorMap.#ctor(AutoMapper.ConstructorMap)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConstructorMap.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConstructorMap.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorMap.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorMap.ConstructorConstructorInfoIEnumerableOfConstructorParameterMap">
            <summary>设置 ConstructorMap.ConstructorMap(ConstructorInfo ctor, IEnumerable`1&lt;ConstructorParameterMap&gt; ctorParams) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorMap.CtorGet">
            <summary>设置 ConstructorMap.get_Ctor() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorMap.CtorParamsGet">
            <summary>设置 ConstructorMap.get_CtorParams() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorMap.CtorParamsSetIEnumerableOfConstructorParameterMap">
            <summary>设置 ConstructorMap.set_CtorParams(IEnumerable`1&lt;ConstructorParameterMap&gt; value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorMap.CtorSetConstructorInfo">
            <summary>设置 ConstructorMap.set_Ctor(ConstructorInfo value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorMap.ResolveValueResolutionContextIMappingEngineRunner">
            <summary>设置 ConstructorMap.ResolveValue(ResolutionContext context, IMappingEngineRunner mappingEngine) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorMap.StaticConstructor">
            <summary>设置 ConstructorMap.ConstructorMap() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimConstructorMap.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorMap.AllInstances.CtorGet">
            <summary>设置 ConstructorMap.get_Ctor() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorMap.AllInstances.CtorParamsGet">
            <summary>设置 ConstructorMap.get_CtorParams() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorMap.AllInstances.CtorParamsSetIEnumerableOfConstructorParameterMap">
            <summary>设置 ConstructorMap.set_CtorParams(IEnumerable`1&lt;ConstructorParameterMap&gt; value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorMap.AllInstances.CtorSetConstructorInfo">
            <summary>设置 ConstructorMap.set_Ctor(ConstructorInfo value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorMap.AllInstances.ResolveValueResolutionContextIMappingEngineRunner">
            <summary>设置 ConstructorMap.ResolveValue(ResolutionContext context, IMappingEngineRunner mappingEngine) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimConstructorParameterMap">
            <summary>AutoMapper.ConstructorParameterMap 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConstructorParameterMap.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConstructorParameterMap.#ctor(AutoMapper.ConstructorParameterMap)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConstructorParameterMap.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimConstructorParameterMap.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorParameterMap.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorParameterMap.ConstructorParameterInfoIMemberGetterArray">
            <summary>设置 ConstructorParameterMap.ConstructorParameterMap(ParameterInfo parameter, IMemberGetter[] sourceResolvers) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorParameterMap.ParameterGet">
            <summary>设置 ConstructorParameterMap.get_Parameter() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorParameterMap.ParameterSetParameterInfo">
            <summary>设置 ConstructorParameterMap.set_Parameter(ParameterInfo value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorParameterMap.ResolveValueResolutionContext">
            <summary>设置 ConstructorParameterMap.ResolveValue(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorParameterMap.SourceResolversGet">
            <summary>设置 ConstructorParameterMap.get_SourceResolvers() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorParameterMap.SourceResolversSetIMemberGetterArray">
            <summary>设置 ConstructorParameterMap.set_SourceResolvers(IMemberGetter[] value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorParameterMap._ResolveValueb__0ResolutionResultIMemberGetter">
            <summary>设置 ConstructorParameterMap.&lt;ResolveValue&gt;b__0(ResolutionResult current, IMemberGetter resolver) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimConstructorParameterMap.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorParameterMap.AllInstances.ParameterGet">
            <summary>设置 ConstructorParameterMap.get_Parameter() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorParameterMap.AllInstances.ParameterSetParameterInfo">
            <summary>设置 ConstructorParameterMap.set_Parameter(ParameterInfo value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorParameterMap.AllInstances.ResolveValueResolutionContext">
            <summary>设置 ConstructorParameterMap.ResolveValue(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorParameterMap.AllInstances.SourceResolversGet">
            <summary>设置 ConstructorParameterMap.get_SourceResolvers() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimConstructorParameterMap.AllInstances.SourceResolversSetIMemberGetterArray">
            <summary>设置 ConstructorParameterMap.set_SourceResolvers(IMemberGetter[] value) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimDefaultResolver">
            <summary>AutoMapper.DefaultResolver 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDefaultResolver.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDefaultResolver.#ctor(AutoMapper.DefaultResolver)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDefaultResolver.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDefaultResolver.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDefaultResolver.Bind(AutoMapper.IValueResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDefaultResolver.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDefaultResolver.Constructor">
            <summary>设置 DefaultResolver.DefaultResolver() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDefaultResolver.ResolveResolutionResult">
            <summary>设置 DefaultResolver.Resolve(ResolutionResult source) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimDefaultResolver.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDefaultResolver.AllInstances.ResolveResolutionResult">
            <summary>设置 DefaultResolver.Resolve(ResolutionResult source) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimDeferredInstantiatedConverter">
            <summary>AutoMapper.DeferredInstantiatedConverter 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDeferredInstantiatedConverter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDeferredInstantiatedConverter.#ctor(AutoMapper.DeferredInstantiatedConverter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDeferredInstantiatedConverter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDeferredInstantiatedConverter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDeferredInstantiatedConverter.Bind(AutoMapper.ITypeConverter{System.Object,System.Object})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDeferredInstantiatedConverter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDeferredInstantiatedConverter.ConstructorTypeFuncOfResolutionContextObject">
            <summary>设置 DeferredInstantiatedConverter.DeferredInstantiatedConverter(Type typeConverterType, Func`2&lt;ResolutionContext,Object&gt; instantiator) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDeferredInstantiatedConverter.ConvertResolutionContext">
            <summary>设置 DeferredInstantiatedConverter.Convert(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimDeferredInstantiatedConverter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDeferredInstantiatedConverter.AllInstances.ConvertResolutionContext">
            <summary>设置 DeferredInstantiatedConverter.Convert(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimDeferredInstantiatedConverter`2">
            <summary>AutoMapper.DeferredInstantiatedConverter`2 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDeferredInstantiatedConverter`2.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDeferredInstantiatedConverter`2.#ctor(AutoMapper.DeferredInstantiatedConverter{`0,`1})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDeferredInstantiatedConverter`2.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDeferredInstantiatedConverter`2.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDeferredInstantiatedConverter`2.Bind(AutoMapper.ITypeConverter{`0,`1})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDeferredInstantiatedConverter`2.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDeferredInstantiatedConverter`2.ConstructorFuncOfResolutionContextITypeConverterOfT0T1">
            <summary>设置 DeferredInstantiatedConverter`2.DeferredInstantiatedConverter`2(Func`2&lt;ResolutionContext,ITypeConverter`2&lt;!0,!1&gt;&gt; instantiator) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDeferredInstantiatedConverter`2.ConvertResolutionContext">
            <summary>设置 DeferredInstantiatedConverter`2.Convert(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimDeferredInstantiatedConverter`2.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDeferredInstantiatedConverter`2.AllInstances.ConvertResolutionContext">
            <summary>设置 DeferredInstantiatedConverter`2.Convert(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimDeferredInstantiatedFormatter">
            <summary>AutoMapper.DeferredInstantiatedFormatter 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDeferredInstantiatedFormatter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDeferredInstantiatedFormatter.#ctor(AutoMapper.DeferredInstantiatedFormatter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDeferredInstantiatedFormatter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDeferredInstantiatedFormatter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDeferredInstantiatedFormatter.Bind(AutoMapper.IValueFormatter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDeferredInstantiatedFormatter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDeferredInstantiatedFormatter.ConstructorFuncOfResolutionContextIValueFormatter">
            <summary>设置 DeferredInstantiatedFormatter.DeferredInstantiatedFormatter(Func`2&lt;ResolutionContext,IValueFormatter&gt; instantiator) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDeferredInstantiatedFormatter.FormatValueResolutionContext">
            <summary>设置 DeferredInstantiatedFormatter.FormatValue(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDeferredInstantiatedFormatter.GetFormatterTypeResolutionContext">
            <summary>设置 DeferredInstantiatedFormatter.GetFormatterType(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimDeferredInstantiatedFormatter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDeferredInstantiatedFormatter.AllInstances.FormatValueResolutionContext">
            <summary>设置 DeferredInstantiatedFormatter.FormatValue(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDeferredInstantiatedFormatter.AllInstances.GetFormatterTypeResolutionContext">
            <summary>设置 DeferredInstantiatedFormatter.GetFormatterType(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimDeferredInstantiatedResolver">
            <summary>AutoMapper.DeferredInstantiatedResolver 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDeferredInstantiatedResolver.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDeferredInstantiatedResolver.#ctor(AutoMapper.DeferredInstantiatedResolver)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDeferredInstantiatedResolver.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDeferredInstantiatedResolver.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDeferredInstantiatedResolver.Bind(AutoMapper.IValueResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDeferredInstantiatedResolver.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDeferredInstantiatedResolver.ConstructorFuncOfResolutionContextIValueResolver">
            <summary>设置 DeferredInstantiatedResolver.DeferredInstantiatedResolver(Func`2&lt;ResolutionContext,IValueResolver&gt; constructor) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDeferredInstantiatedResolver.ResolveResolutionResult">
            <summary>设置 DeferredInstantiatedResolver.Resolve(ResolutionResult source) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimDeferredInstantiatedResolver.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDeferredInstantiatedResolver.AllInstances.ResolveResolutionResult">
            <summary>设置 DeferredInstantiatedResolver.Resolve(ResolutionResult source) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimDelegateBasedResolver`1">
            <summary>AutoMapper.DelegateBasedResolver`1 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDelegateBasedResolver`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDelegateBasedResolver`1.#ctor(AutoMapper.DelegateBasedResolver{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDelegateBasedResolver`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDelegateBasedResolver`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDelegateBasedResolver`1.Bind(AutoMapper.IValueResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDelegateBasedResolver`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDelegateBasedResolver`1.ConstructorFuncOfResolutionResultObject">
            <summary>设置 DelegateBasedResolver`1.DelegateBasedResolver`1(Func`2&lt;ResolutionResult,Object&gt; method) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDelegateBasedResolver`1.ResolveResolutionResult">
            <summary>设置 DelegateBasedResolver`1.Resolve(ResolutionResult source) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimDelegateBasedResolver`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDelegateBasedResolver`1.AllInstances.ResolveResolutionResult">
            <summary>设置 DelegateBasedResolver`1.Resolve(ResolutionResult source) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimDelegateBasedResolver`2">
            <summary>AutoMapper.DelegateBasedResolver`2 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDelegateBasedResolver`2.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDelegateBasedResolver`2.#ctor(AutoMapper.DelegateBasedResolver{`0,`1})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDelegateBasedResolver`2.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDelegateBasedResolver`2.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDelegateBasedResolver`2.Bind(AutoMapper.IMemberResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDelegateBasedResolver`2.Bind(AutoMapper.IValueResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDelegateBasedResolver`2.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDelegateBasedResolver`2.ConstructorFuncOfT0T1">
            <summary>设置 DelegateBasedResolver`2.DelegateBasedResolver`2(Func`2&lt;!0,!1&gt; method) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDelegateBasedResolver`2.MemberTypeGet">
            <summary>设置 DelegateBasedResolver`2.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDelegateBasedResolver`2.ResolveResolutionResult">
            <summary>设置 DelegateBasedResolver`2.Resolve(ResolutionResult source) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimDelegateBasedResolver`2.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDelegateBasedResolver`2.AllInstances.MemberTypeGet">
            <summary>设置 DelegateBasedResolver`2.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDelegateBasedResolver`2.AllInstances.ResolveResolutionResult">
            <summary>设置 DelegateBasedResolver`2.Resolve(ResolutionResult source) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimDelegateFactory">
            <summary>AutoMapper.DelegateFactory 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDelegateFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDelegateFactory.#ctor(AutoMapper.DelegateFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDelegateFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDelegateFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimDelegateFactory.Bind(AutoMapper.IDelegateFactory)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDelegateFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDelegateFactory.Constructor">
            <summary>设置 DelegateFactory.DelegateFactory() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDelegateFactory.CreateCtorConstructorInfoIEnumerableOfConstructorParameterMap">
            <summary>设置 DelegateFactory.CreateCtor(ConstructorInfo constructorInfo, IEnumerable`1&lt;ConstructorParameterMap&gt; ctorParams) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDelegateFactory.CreateCtorType">
            <summary>设置 DelegateFactory.CreateCtor(Type type) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDelegateFactory.CreateGetFieldInfo">
            <summary>设置 DelegateFactory.CreateGet(FieldInfo field) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDelegateFactory.CreateGetMethodInfo">
            <summary>设置 DelegateFactory.CreateGet(MethodInfo method) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDelegateFactory.CreateGetPropertyInfo">
            <summary>设置 DelegateFactory.CreateGet(PropertyInfo property) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDelegateFactory.CreateParameterExpressionsMethodInfoExpressionExpression">
            <summary>设置 DelegateFactory.CreateParameterExpressions(MethodInfo method, Expression instanceParameter, Expression argumentsParameter) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDelegateFactory.CreateSetFieldInfo">
            <summary>设置 DelegateFactory.CreateSet(FieldInfo field) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDelegateFactory.CreateSetPropertyInfo">
            <summary>设置 DelegateFactory.CreateSet(PropertyInfo property) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDelegateFactory.StaticConstructor">
            <summary>设置 DelegateFactory.DelegateFactory() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimDelegateFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDelegateFactory.AllInstances.CreateCtorConstructorInfoIEnumerableOfConstructorParameterMap">
            <summary>设置 DelegateFactory.CreateCtor(ConstructorInfo constructorInfo, IEnumerable`1&lt;ConstructorParameterMap&gt; ctorParams) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDelegateFactory.AllInstances.CreateCtorType">
            <summary>设置 DelegateFactory.CreateCtor(Type type) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDelegateFactory.AllInstances.CreateGetFieldInfo">
            <summary>设置 DelegateFactory.CreateGet(FieldInfo field) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDelegateFactory.AllInstances.CreateGetMethodInfo">
            <summary>设置 DelegateFactory.CreateGet(MethodInfo method) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDelegateFactory.AllInstances.CreateGetPropertyInfo">
            <summary>设置 DelegateFactory.CreateGet(PropertyInfo property) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDelegateFactory.AllInstances.CreateSetFieldInfo">
            <summary>设置 DelegateFactory.CreateSet(FieldInfo field) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimDelegateFactory.AllInstances.CreateSetPropertyInfo">
            <summary>设置 DelegateFactory.CreateSet(PropertyInfo property) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimEnumerableExtensions">
            <summary>AutoMapper.EnumerableExtensions 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimEnumerableExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimEnumerableExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimEnumerableExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimEnumerableExtensions.EachOf1IEnumerableOfM0ActionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.IEnumerable{``0},System.Action{``0}})">
            <summary>设置 EnumerableExtensions.Each(IEnumerable`1&lt;!!0&gt; items, Action`1&lt;!!0&gt; action) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimEnumerableExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimExpressionValueFormatter">
            <summary>AutoMapper.ExpressionValueFormatter 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimExpressionValueFormatter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimExpressionValueFormatter.#ctor(AutoMapper.ExpressionValueFormatter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimExpressionValueFormatter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimExpressionValueFormatter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimExpressionValueFormatter.Bind(AutoMapper.IValueFormatter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimExpressionValueFormatter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimExpressionValueFormatter.ConstructorFuncOfResolutionContextString">
            <summary>设置 ExpressionValueFormatter.ExpressionValueFormatter(Func`2&lt;ResolutionContext,String&gt; valueFormatterExpression) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimExpressionValueFormatter.FormatValueResolutionContext">
            <summary>设置 ExpressionValueFormatter.FormatValue(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimExpressionValueFormatter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimExpressionValueFormatter.AllInstances.FormatValueResolutionContext">
            <summary>设置 ExpressionValueFormatter.FormatValue(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimFormatterCtorExpression">
            <summary>AutoMapper.FormatterCtorExpression 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimFormatterCtorExpression.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimFormatterCtorExpression.#ctor(AutoMapper.FormatterCtorExpression)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimFormatterCtorExpression.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimFormatterCtorExpression.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimFormatterCtorExpression.Bind(AutoMapper.IFormatterCtorExpression)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterCtorExpression.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterCtorExpression.ConstructedByFuncOfIValueFormatter">
            <summary>设置 FormatterCtorExpression.ConstructedBy(Func`1&lt;IValueFormatter&gt; constructor) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterCtorExpression.ConstructorTypeIFormatterCtorConfigurator">
            <summary>设置 FormatterCtorExpression.FormatterCtorExpression(Type formatterType, IFormatterCtorConfigurator formatterCtorConfigurator) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimFormatterCtorExpression.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterCtorExpression.AllInstances.ConstructedByFuncOfIValueFormatter">
            <summary>设置 FormatterCtorExpression.ConstructedBy(Func`1&lt;IValueFormatter&gt; constructor) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimFormatterCtorExpression`1">
            <summary>AutoMapper.FormatterCtorExpression`1 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimFormatterCtorExpression`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimFormatterCtorExpression`1.#ctor(AutoMapper.FormatterCtorExpression{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimFormatterCtorExpression`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimFormatterCtorExpression`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimFormatterCtorExpression`1.Bind(AutoMapper.IFormatterCtorExpression{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterCtorExpression`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterCtorExpression`1.ConstructedByFuncOfT0">
            <summary>设置 FormatterCtorExpression`1.ConstructedBy(Func`1&lt;!0&gt; constructor) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterCtorExpression`1.ConstructorIFormatterCtorConfigurator">
            <summary>设置 FormatterCtorExpression`1.FormatterCtorExpression`1(IFormatterCtorConfigurator formatterCtorConfigurator) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimFormatterCtorExpression`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterCtorExpression`1.AllInstances.ConstructedByFuncOfT0">
            <summary>设置 FormatterCtorExpression`1.ConstructedBy(Func`1&lt;!0&gt; constructor) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimFormatterExpression">
            <summary>AutoMapper.FormatterExpression 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimFormatterExpression.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimFormatterExpression.#ctor(AutoMapper.FormatterExpression)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimFormatterExpression.AddFormatterOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IFormatterCtorExpression{``0}})">
            <summary>设置 FormatterExpression.AddFormatter() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimFormatterExpression.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimFormatterExpression.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimFormatterExpression.Bind(AutoMapper.IFormatterConfiguration)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimFormatterExpression.Bind(AutoMapper.IFormatterCtorConfigurator)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimFormatterExpression.Bind(AutoMapper.IFormatterExpression)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimFormatterExpression.Bind(AutoMapper.IMappingOptions)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimFormatterExpression.Bind(AutoMapper.IProfileConfiguration)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimFormatterExpression.ForSourceTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IFormatterExpression})">
            <summary>设置 FormatterExpression.ForSourceType() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimFormatterExpression.SkipFormatterOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>设置 FormatterExpression.SkipFormatter() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AddFormatExpressionFuncOfResolutionContextString">
            <summary>设置 FormatterExpression.AddFormatExpression(Func`2&lt;ResolutionContext,String&gt; formatExpression) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AddFormatterIValueFormatter">
            <summary>设置 FormatterExpression.AddFormatter(IValueFormatter valueFormatter) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AddFormatterType">
            <summary>设置 FormatterExpression.AddFormatter(Type valueFormatterType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AliasesGet">
            <summary>设置 FormatterExpression.get_Aliases() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllowNullCollectionsGet">
            <summary>设置 FormatterExpression.get_AllowNullCollections() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllowNullCollectionsSetBoolean">
            <summary>设置 FormatterExpression.set_AllowNullCollections(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllowNullDestinationValuesGet">
            <summary>设置 FormatterExpression.get_AllowNullDestinationValues() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllowNullDestinationValuesSetBoolean">
            <summary>设置 FormatterExpression.set_AllowNullDestinationValues(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.BuildCtorType">
            <summary>设置 FormatterExpression.BuildCtor(Type type) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.CheckPropertyMapSkipListResolutionContextType">
            <summary>设置 FormatterExpression.CheckPropertyMapSkipList(ResolutionContext context, Type formatterType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.CheckTypeSpecificSkipListIFormatterConfigurationType">
            <summary>设置 FormatterExpression.CheckTypeSpecificSkipList(IFormatterConfiguration valueFormatter, Type formatterType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.ConstructFormatterByTypeFuncOfIValueFormatter">
            <summary>设置 FormatterExpression.ConstructFormatterBy(Type formatterType, Func`1&lt;IValueFormatter&gt; instantiator) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.ConstructorFuncOfTypeIValueFormatter">
            <summary>设置 FormatterExpression.FormatterExpression(Func`2&lt;Type,IValueFormatter&gt; formatterCtor) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.ConstructorMappingEnabledGet">
            <summary>设置 FormatterExpression.get_ConstructorMappingEnabled() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.ConstructorMappingEnabledSetBoolean">
            <summary>设置 FormatterExpression.set_ConstructorMappingEnabled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.DataReaderMapperYieldReturnEnabledGet">
            <summary>设置 FormatterExpression.get_DataReaderMapperYieldReturnEnabled() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.DataReaderMapperYieldReturnEnabledSetBoolean">
            <summary>设置 FormatterExpression.set_DataReaderMapperYieldReturnEnabled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.DefaultAliasTransformerStringStringString">
            <summary>设置 FormatterExpression.DefaultAliasTransformer(String src, String original, String alias) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.DefaultPostfixTransformerStringString">
            <summary>设置 FormatterExpression.DefaultPostfixTransformer(String src, String postfix) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.DefaultPrefixTransformerStringString">
            <summary>设置 FormatterExpression.DefaultPrefixTransformer(String src, String prefix) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.DefaultSourceMemberNameTransformerString">
            <summary>设置 FormatterExpression.DefaultSourceMemberNameTransformer(String src) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.DestinationMemberNamingConventionGet">
            <summary>设置 FormatterExpression.get_DestinationMemberNamingConvention() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.DestinationMemberNamingConventionSetINamingConvention">
            <summary>设置 FormatterExpression.set_DestinationMemberNamingConvention(INamingConvention value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.DestinationPostfixesGet">
            <summary>设置 FormatterExpression.get_DestinationPostfixes() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.DestinationPrefixesGet">
            <summary>设置 FormatterExpression.get_DestinationPrefixes() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.GetFormatterTypeIValueFormatterResolutionContext">
            <summary>设置 FormatterExpression.GetFormatterType(IValueFormatter formatter, ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.GetFormatterTypesToSkip">
            <summary>设置 FormatterExpression.GetFormatterTypesToSkip() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.GetFormatters">
            <summary>设置 FormatterExpression.GetFormatters() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.GetFormattersResolutionContext">
            <summary>设置 FormatterExpression.GetFormatters(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.GetFormattersToApplyResolutionContext">
            <summary>设置 FormatterExpression.GetFormattersToApply(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.GetTypeSpecificFormatters">
            <summary>设置 FormatterExpression.GetTypeSpecificFormatters() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.IncludeSourceExtensionMethodsAssembly">
            <summary>设置 FormatterExpression.IncludeSourceExtensionMethods(Assembly assembly) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.MapNullSourceCollectionsAsNullGet">
            <summary>设置 FormatterExpression.get_MapNullSourceCollectionsAsNull() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.MapNullSourceValuesAsNullGet">
            <summary>设置 FormatterExpression.get_MapNullSourceValuesAsNull() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.PostfixesGet">
            <summary>设置 FormatterExpression.get_Postfixes() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.PrefixesGet">
            <summary>设置 FormatterExpression.get_Prefixes() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.RecognizeAliasStringString">
            <summary>设置 FormatterExpression.RecognizeAlias(String original, String alias) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.RecognizeDestinationPostfixesStringArray">
            <summary>设置 FormatterExpression.RecognizeDestinationPostfixes(String[] postfixes) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.RecognizeDestinationPrefixesStringArray">
            <summary>设置 FormatterExpression.RecognizeDestinationPrefixes(String[] prefixes) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.RecognizePostfixesStringArray">
            <summary>设置 FormatterExpression.RecognizePostfixes(String[] postfixes) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.RecognizePrefixesStringArray">
            <summary>设置 FormatterExpression.RecognizePrefixes(String[] prefixes) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.SourceExtensionMethodsGet">
            <summary>设置 FormatterExpression.get_SourceExtensionMethods() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.SourceMemberNamingConventionGet">
            <summary>设置 FormatterExpression.get_SourceMemberNamingConvention() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.SourceMemberNamingConventionSetINamingConvention">
            <summary>设置 FormatterExpression.set_SourceMemberNamingConvention(INamingConvention value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression._IncludeSourceExtensionMethodsb__17Type">
            <summary>设置 FormatterExpression.&lt;IncludeSourceExtensionMethods&gt;b__17(Type type) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression._IncludeSourceExtensionMethodsb__18Type">
            <summary>设置 FormatterExpression.&lt;IncludeSourceExtensionMethods&gt;b__18(Type type) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression._IncludeSourceExtensionMethodsb__19MethodInfo">
            <summary>设置 FormatterExpression.&lt;IncludeSourceExtensionMethods&gt;b__19(MethodInfo method) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression._IncludeSourceExtensionMethodsb__1aMethodInfo">
            <summary>设置 FormatterExpression.&lt;IncludeSourceExtensionMethods&gt;b__1a(MethodInfo method) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimFormatterExpression.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.AddFormatterOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.FormatterExpression,AutoMapper.IFormatterCtorExpression{``0}})">
            <summary>设置 FormatterExpression.AddFormatter() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.ForSourceTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.FormatterExpression,AutoMapper.IFormatterExpression})">
            <summary>设置 FormatterExpression.ForSourceType() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.SkipFormatterOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{AutoMapper.FormatterExpression})">
            <summary>设置 FormatterExpression.SkipFormatter() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.AddFormatExpressionFuncOfResolutionContextString">
            <summary>设置 FormatterExpression.AddFormatExpression(Func`2&lt;ResolutionContext,String&gt; formatExpression) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.AddFormatterIValueFormatter">
            <summary>设置 FormatterExpression.AddFormatter(IValueFormatter valueFormatter) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.AddFormatterType">
            <summary>设置 FormatterExpression.AddFormatter(Type valueFormatterType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.AliasesGet">
            <summary>设置 FormatterExpression.get_Aliases() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.AllowNullCollectionsGet">
            <summary>设置 FormatterExpression.get_AllowNullCollections() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.AllowNullCollectionsSetBoolean">
            <summary>设置 FormatterExpression.set_AllowNullCollections(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.AllowNullDestinationValuesGet">
            <summary>设置 FormatterExpression.get_AllowNullDestinationValues() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.AllowNullDestinationValuesSetBoolean">
            <summary>设置 FormatterExpression.set_AllowNullDestinationValues(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.BuildCtorType">
            <summary>设置 FormatterExpression.BuildCtor(Type type) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.ConstructFormatterByTypeFuncOfIValueFormatter">
            <summary>设置 FormatterExpression.ConstructFormatterBy(Type formatterType, Func`1&lt;IValueFormatter&gt; instantiator) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.ConstructorMappingEnabledGet">
            <summary>设置 FormatterExpression.get_ConstructorMappingEnabled() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.ConstructorMappingEnabledSetBoolean">
            <summary>设置 FormatterExpression.set_ConstructorMappingEnabled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.DataReaderMapperYieldReturnEnabledGet">
            <summary>设置 FormatterExpression.get_DataReaderMapperYieldReturnEnabled() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.DataReaderMapperYieldReturnEnabledSetBoolean">
            <summary>设置 FormatterExpression.set_DataReaderMapperYieldReturnEnabled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.DestinationMemberNamingConventionGet">
            <summary>设置 FormatterExpression.get_DestinationMemberNamingConvention() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.DestinationMemberNamingConventionSetINamingConvention">
            <summary>设置 FormatterExpression.set_DestinationMemberNamingConvention(INamingConvention value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.DestinationPostfixesGet">
            <summary>设置 FormatterExpression.get_DestinationPostfixes() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.DestinationPrefixesGet">
            <summary>设置 FormatterExpression.get_DestinationPrefixes() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.GetFormatterTypesToSkip">
            <summary>设置 FormatterExpression.GetFormatterTypesToSkip() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.GetFormatters">
            <summary>设置 FormatterExpression.GetFormatters() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.GetFormattersResolutionContext">
            <summary>设置 FormatterExpression.GetFormatters(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.GetFormattersToApplyResolutionContext">
            <summary>设置 FormatterExpression.GetFormattersToApply(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.GetTypeSpecificFormatters">
            <summary>设置 FormatterExpression.GetTypeSpecificFormatters() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.IncludeSourceExtensionMethodsAssembly">
            <summary>设置 FormatterExpression.IncludeSourceExtensionMethods(Assembly assembly) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.MapNullSourceCollectionsAsNullGet">
            <summary>设置 FormatterExpression.get_MapNullSourceCollectionsAsNull() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.MapNullSourceValuesAsNullGet">
            <summary>设置 FormatterExpression.get_MapNullSourceValuesAsNull() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.PostfixesGet">
            <summary>设置 FormatterExpression.get_Postfixes() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.PrefixesGet">
            <summary>设置 FormatterExpression.get_Prefixes() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.RecognizeAliasStringString">
            <summary>设置 FormatterExpression.RecognizeAlias(String original, String alias) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.RecognizeDestinationPostfixesStringArray">
            <summary>设置 FormatterExpression.RecognizeDestinationPostfixes(String[] postfixes) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.RecognizeDestinationPrefixesStringArray">
            <summary>设置 FormatterExpression.RecognizeDestinationPrefixes(String[] prefixes) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.RecognizePostfixesStringArray">
            <summary>设置 FormatterExpression.RecognizePostfixes(String[] postfixes) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.RecognizePrefixesStringArray">
            <summary>设置 FormatterExpression.RecognizePrefixes(String[] prefixes) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.SourceExtensionMethodsGet">
            <summary>设置 FormatterExpression.get_SourceExtensionMethods() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.SourceMemberNamingConventionGet">
            <summary>设置 FormatterExpression.get_SourceMemberNamingConvention() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimFormatterExpression.AllInstances.SourceMemberNamingConventionSetINamingConvention">
            <summary>设置 FormatterExpression.set_SourceMemberNamingConvention(INamingConvention value) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimIgnoreMapAttribute">
            <summary>AutoMapper.IgnoreMapAttribute 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimIgnoreMapAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimIgnoreMapAttribute.#ctor(AutoMapper.IgnoreMapAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimIgnoreMapAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimIgnoreMapAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimIgnoreMapAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimIgnoreMapAttribute.Constructor">
            <summary>设置 IgnoreMapAttribute.IgnoreMapAttribute() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimIgnoreMapAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimLowerUnderscoreNamingConvention">
            <summary>AutoMapper.LowerUnderscoreNamingConvention 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimLowerUnderscoreNamingConvention.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimLowerUnderscoreNamingConvention.#ctor(AutoMapper.LowerUnderscoreNamingConvention)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimLowerUnderscoreNamingConvention.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimLowerUnderscoreNamingConvention.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimLowerUnderscoreNamingConvention.Bind(AutoMapper.INamingConvention)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimLowerUnderscoreNamingConvention.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimLowerUnderscoreNamingConvention.Constructor">
            <summary>设置 LowerUnderscoreNamingConvention.LowerUnderscoreNamingConvention() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimLowerUnderscoreNamingConvention.SeparatorCharacterGet">
            <summary>设置 LowerUnderscoreNamingConvention.get_SeparatorCharacter() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimLowerUnderscoreNamingConvention.SplittingExpressionGet">
            <summary>设置 LowerUnderscoreNamingConvention.get_SplittingExpression() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimLowerUnderscoreNamingConvention.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimLowerUnderscoreNamingConvention.AllInstances.SeparatorCharacterGet">
            <summary>设置 LowerUnderscoreNamingConvention.get_SeparatorCharacter() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimLowerUnderscoreNamingConvention.AllInstances.SplittingExpressionGet">
            <summary>设置 LowerUnderscoreNamingConvention.get_SplittingExpression() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimMapper">
            <summary>AutoMapper.Mapper 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.AddFormatterOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IFormatterCtorExpression{``0}})">
            <summary>设置 Mapper.AddFormatter() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.AddProfileOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>设置 Mapper.AddProfile() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.AssertConfigurationIsValidOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>设置 Mapper.AssertConfigurationIsValid() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.CreateMapOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IMappingExpression{``0,``1}})">
            <summary>设置 Mapper.CreateMap() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.CreateMapOf2MemberList``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MemberList,AutoMapper.IMappingExpression{``0,``1}})">
            <summary>设置 Mapper.CreateMap(MemberList memberList) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.DynamicMapOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>设置 Mapper.DynamicMap(Object source) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.DynamicMapOf2M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1})">
            <summary>设置 Mapper.DynamicMap(!!0 source) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.DynamicMapOf2M0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,``1})">
            <summary>设置 Mapper.DynamicMap(!!0 source, !!1 destination) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.FindTypeMapForOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.TypeMap})">
            <summary>设置 Mapper.FindTypeMapFor() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.ForSourceTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IFormatterExpression})">
            <summary>设置 Mapper.ForSourceType() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.MapOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>设置 Mapper.Map(Object source) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.MapOf1ObjectActionOfIMappingOperationOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Action{AutoMapper.IMappingOperationOptions},``0})">
            <summary>设置 Mapper.Map(Object source, Action`1&lt;IMappingOperationOptions&gt; opts) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.MapOf2M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1})">
            <summary>设置 Mapper.Map(!!0 source) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.MapOf2M0ActionOfIMappingOperationOptions``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Action{AutoMapper.IMappingOperationOptions},``1})">
            <summary>设置 Mapper.Map(!!0 source, Action`1&lt;IMappingOperationOptions&gt; opts) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.MapOf2M0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1,``1})">
            <summary>设置 Mapper.Map(!!0 source, !!1 destination) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.MapOf2M0M1ActionOfIMappingOperationOptions``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1,System.Action{AutoMapper.IMappingOperationOptions},``1})">
            <summary>设置 Mapper.Map(!!0 source, !!1 destination, Action`1&lt;IMappingOperationOptions&gt; opts) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMapper.SkipFormatterOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>设置 Mapper.SkipFormatter() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.AddFormatExpressionFuncOfResolutionContextString">
            <summary>设置 Mapper.AddFormatExpression(Func`2&lt;ResolutionContext,String&gt; formatExpression) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.AddFormatterIValueFormatter">
            <summary>设置 Mapper.AddFormatter(IValueFormatter formatter) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.AddFormatterType">
            <summary>设置 Mapper.AddFormatter(Type valueFormatterType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.AddGlobalIgnoreString">
            <summary>设置 Mapper.AddGlobalIgnore(String startingwith) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.AddProfileProfile">
            <summary>设置 Mapper.AddProfile(Profile profile) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.AllowNullDestinationValuesGet">
            <summary>设置 Mapper.get_AllowNullDestinationValues() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.AllowNullDestinationValuesSetBoolean">
            <summary>设置 Mapper.set_AllowNullDestinationValues(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.AssertConfigurationIsValid">
            <summary>设置 Mapper.AssertConfigurationIsValid() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.AssertConfigurationIsValidString">
            <summary>设置 Mapper.AssertConfigurationIsValid(String profileName) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.AssertConfigurationIsValidTypeMap">
            <summary>设置 Mapper.AssertConfigurationIsValid(TypeMap typeMap) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.ConfigurationGet">
            <summary>设置 Mapper.get_Configuration() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.ConfigurationProviderGet">
            <summary>设置 Mapper.get_ConfigurationProvider() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.CreateMapTypeType">
            <summary>设置 Mapper.CreateMap(Type sourceType, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.CreateMapTypeTypeMemberList">
            <summary>设置 Mapper.CreateMap(Type sourceType, Type destinationType, MemberList memberList) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.CreateProfileString">
            <summary>设置 Mapper.CreateProfile(String profileName) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.CreateProfileStringActionOfIProfileExpression">
            <summary>设置 Mapper.CreateProfile(String profileName, Action`1&lt;IProfileExpression&gt; profileConfiguration) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.DynamicMapObjectObjectTypeType">
            <summary>设置 Mapper.DynamicMap(Object source, Object destination, Type sourceType, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.DynamicMapObjectTypeType">
            <summary>设置 Mapper.DynamicMap(Object source, Type sourceType, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.EngineGet">
            <summary>设置 Mapper.get_Engine() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.FindTypeMapForTypeType">
            <summary>设置 Mapper.FindTypeMapFor(Type sourceType, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.GetAllTypeMaps">
            <summary>设置 Mapper.GetAllTypeMaps() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.InitializeActionOfIConfiguration">
            <summary>设置 Mapper.Initialize(Action`1&lt;IConfiguration&gt; action) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.MapObjectObjectTypeType">
            <summary>设置 Mapper.Map(Object source, Object destination, Type sourceType, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.MapObjectObjectTypeTypeActionOfIMappingOperationOptions">
            <summary>设置 Mapper.Map(Object source, Object destination, Type sourceType, Type destinationType, Action`1&lt;IMappingOperationOptions&gt; opts) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.MapObjectTypeType">
            <summary>设置 Mapper.Map(Object source, Type sourceType, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.MapObjectTypeTypeActionOfIMappingOperationOptions">
            <summary>设置 Mapper.Map(Object source, Type sourceType, Type destinationType, Action`1&lt;IMappingOperationOptions&gt; opts) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.Reset">
            <summary>设置 Mapper.Reset() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper.StaticConstructor">
            <summary>设置 Mapper.Mapper() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper._cctorb__0">
            <summary>设置 Mapper.&lt;.cctor&gt;b__0() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMapper._cctorb__1">
            <summary>设置 Mapper.&lt;.cctor&gt;b__1() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimMappingEngine">
            <summary>AutoMapper.MappingEngine 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.#ctor(AutoMapper.MappingEngine)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.Bind(AutoMapper.IMappingEngine)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.Bind(AutoMapper.IMappingEngineRunner)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.DynamicMapOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>设置 MappingEngine.DynamicMap(Object source) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.DynamicMapOf2M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1})">
            <summary>设置 MappingEngine.DynamicMap(!!0 source) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.DynamicMapOf2M0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,``1})">
            <summary>设置 MappingEngine.DynamicMap(!!0 source, !!1 destination) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.MapOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>设置 MappingEngine.Map(Object source) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.MapOf1ObjectActionOfIMappingOperationOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Action{AutoMapper.IMappingOperationOptions},``0})">
            <summary>设置 MappingEngine.Map(Object source, Action`1&lt;IMappingOperationOptions&gt; opts) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.MapOf2M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1})">
            <summary>设置 MappingEngine.Map(!!0 source) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.MapOf2M0ActionOfIMappingOperationOptions``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Action{AutoMapper.IMappingOperationOptions},``1})">
            <summary>设置 MappingEngine.Map(!!0 source, Action`1&lt;IMappingOperationOptions&gt; opts) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.MapOf2M0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1,``1})">
            <summary>设置 MappingEngine.Map(!!0 source, !!1 destination) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.MapOf2M0M1ActionOfIMappingOperationOptions``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1,System.Action{AutoMapper.IMappingOperationOptions},``1})">
            <summary>设置 MappingEngine.Map(!!0 source, !!1 destination, Action`1&lt;IMappingOperationOptions&gt; opts) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.MapOf2ResolutionContextM0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.ResolutionContext,``0,``1})">
            <summary>设置 MappingEngine.Map(ResolutionContext parentContext, !!0 source) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AutoMapperIMappingEngineRunnerCreateObjectResolutionContext">
            <summary>设置 MappingEngine.AutoMapper.IMappingEngineRunner.CreateObject(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AutoMapperIMappingEngineRunnerFormatValueResolutionContext">
            <summary>设置 MappingEngine.AutoMapper.IMappingEngineRunner.FormatValue(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AutoMapperIMappingEngineRunnerMapResolutionContext">
            <summary>设置 MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AutoMapperIMappingEngineRunnerShouldMapSourceCollectionAsNullResolutionContext">
            <summary>设置 MappingEngine.AutoMapper.IMappingEngineRunner.ShouldMapSourceCollectionAsNull(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AutoMapperIMappingEngineRunnerShouldMapSourceValueAsNullResolutionContext">
            <summary>设置 MappingEngine.AutoMapper.IMappingEngineRunner.ShouldMapSourceValueAsNull(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.ClearTypeMapObjectTypeMapCreatedEventArgs">
            <summary>设置 MappingEngine.ClearTypeMap(Object sender, TypeMapCreatedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.ConfigurationProviderGet">
            <summary>设置 MappingEngine.get_ConfigurationProvider() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.ConstructorIConfigurationProvider">
            <summary>设置 MappingEngine.MappingEngine(IConfigurationProvider configurationProvider) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.ConstructorIConfigurationProviderIDictionaryOfTypePairIObjectMapperFuncOfTypeObject">
            <summary>设置 MappingEngine.MappingEngine(IConfigurationProvider configurationProvider, IDictionary`2&lt;TypePair,IObjectMapper&gt; objectMapperCache, Func`2&lt;Type,Object&gt; serviceCtor) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.DefaultMappingOptionsIMappingOperationOptions">
            <summary>设置 MappingEngine.DefaultMappingOptions(IMappingOperationOptions opts) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.Dispose">
            <summary>设置 MappingEngine.Dispose() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.DisposeBoolean">
            <summary>设置 MappingEngine.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.DynamicMapObjectObjectTypeType">
            <summary>设置 MappingEngine.DynamicMap(Object source, Object destination, Type sourceType, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.DynamicMapObjectTypeType">
            <summary>设置 MappingEngine.DynamicMap(Object source, Type sourceType, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.MapObjectObjectTypeType">
            <summary>设置 MappingEngine.Map(Object source, Object destination, Type sourceType, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.MapObjectObjectTypeTypeActionOfIMappingOperationOptions">
            <summary>设置 MappingEngine.Map(Object source, Object destination, Type sourceType, Type destinationType, Action`1&lt;IMappingOperationOptions&gt; opts) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.MapObjectTypeType">
            <summary>设置 MappingEngine.Map(Object source, Type sourceType, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.MapObjectTypeTypeActionOfIMappingOperationOptions">
            <summary>设置 MappingEngine.Map(Object source, Type sourceType, Type destinationType, Action`1&lt;IMappingOperationOptions&gt; opts) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.StaticConstructor">
            <summary>设置 MappingEngine.MappingEngine() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimMappingEngine.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.AllInstances.DynamicMapOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MappingEngine,System.Object,``0})">
            <summary>设置 MappingEngine.DynamicMap(Object source) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.AllInstances.DynamicMapOf2M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MappingEngine,``0,``1})">
            <summary>设置 MappingEngine.DynamicMap(!!0 source) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.AllInstances.DynamicMapOf2M0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{AutoMapper.MappingEngine,``0,``1})">
            <summary>设置 MappingEngine.DynamicMap(!!0 source, !!1 destination) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.AllInstances.MapOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MappingEngine,System.Object,``0})">
            <summary>设置 MappingEngine.Map(Object source) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.AllInstances.MapOf1ObjectActionOfIMappingOperationOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MappingEngine,System.Object,System.Action{AutoMapper.IMappingOperationOptions},``0})">
            <summary>设置 MappingEngine.Map(Object source, Action`1&lt;IMappingOperationOptions&gt; opts) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.AllInstances.MapOf2M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MappingEngine,``0,``1})">
            <summary>设置 MappingEngine.Map(!!0 source) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.AllInstances.MapOf2M0ActionOfIMappingOperationOptions``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MappingEngine,``0,System.Action{AutoMapper.IMappingOperationOptions},``1})">
            <summary>设置 MappingEngine.Map(!!0 source, Action`1&lt;IMappingOperationOptions&gt; opts) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.AllInstances.MapOf2M0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MappingEngine,``0,``1,``1})">
            <summary>设置 MappingEngine.Map(!!0 source, !!1 destination) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.AllInstances.MapOf2M0M1ActionOfIMappingOperationOptions``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MappingEngine,``0,``1,System.Action{AutoMapper.IMappingOperationOptions},``1})">
            <summary>设置 MappingEngine.Map(!!0 source, !!1 destination, Action`1&lt;IMappingOperationOptions&gt; opts) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingEngine.AllInstances.MapOf2ResolutionContextM0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MappingEngine,AutoMapper.ResolutionContext,``0,``1})">
            <summary>设置 MappingEngine.Map(ResolutionContext parentContext, !!0 source) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.AutoMapperIMappingEngineRunnerCreateObjectResolutionContext">
            <summary>设置 MappingEngine.AutoMapper.IMappingEngineRunner.CreateObject(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.AutoMapperIMappingEngineRunnerFormatValueResolutionContext">
            <summary>设置 MappingEngine.AutoMapper.IMappingEngineRunner.FormatValue(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.AutoMapperIMappingEngineRunnerMapResolutionContext">
            <summary>设置 MappingEngine.AutoMapper.IMappingEngineRunner.Map(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.AutoMapperIMappingEngineRunnerShouldMapSourceCollectionAsNullResolutionContext">
            <summary>设置 MappingEngine.AutoMapper.IMappingEngineRunner.ShouldMapSourceCollectionAsNull(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.AutoMapperIMappingEngineRunnerShouldMapSourceValueAsNullResolutionContext">
            <summary>设置 MappingEngine.AutoMapper.IMappingEngineRunner.ShouldMapSourceValueAsNull(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.ClearTypeMapObjectTypeMapCreatedEventArgs">
            <summary>设置 MappingEngine.ClearTypeMap(Object sender, TypeMapCreatedEventArgs e) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.ConfigurationProviderGet">
            <summary>设置 MappingEngine.get_ConfigurationProvider() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.DefaultMappingOptionsIMappingOperationOptions">
            <summary>设置 MappingEngine.DefaultMappingOptions(IMappingOperationOptions opts) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.Dispose">
            <summary>设置 MappingEngine.Dispose() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.DisposeBoolean">
            <summary>设置 MappingEngine.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.DynamicMapObjectObjectTypeType">
            <summary>设置 MappingEngine.DynamicMap(Object source, Object destination, Type sourceType, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.DynamicMapObjectTypeType">
            <summary>设置 MappingEngine.DynamicMap(Object source, Type sourceType, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.MapObjectObjectTypeType">
            <summary>设置 MappingEngine.Map(Object source, Object destination, Type sourceType, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.MapObjectObjectTypeTypeActionOfIMappingOperationOptions">
            <summary>设置 MappingEngine.Map(Object source, Object destination, Type sourceType, Type destinationType, Action`1&lt;IMappingOperationOptions&gt; opts) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.MapObjectTypeType">
            <summary>设置 MappingEngine.Map(Object source, Type sourceType, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingEngine.AllInstances.MapObjectTypeTypeActionOfIMappingOperationOptions">
            <summary>设置 MappingEngine.Map(Object source, Type sourceType, Type destinationType, Action`1&lt;IMappingOperationOptions&gt; opts) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimMappingExpression">
            <summary>AutoMapper.MappingExpression 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression.#ctor(AutoMapper.MappingExpression)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression.Bind(AutoMapper.IMappingExpression)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression.Bind(AutoMapper.IMemberConfigurationExpression)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression.BuildCtorOf1Type``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type,System.Func{AutoMapper.ResolutionContext,``0}})">
            <summary>设置 MappingExpression.BuildCtor(Type type) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression.ConvertUsingOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>设置 MappingExpression.ConvertUsing() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression.ResolveUsingOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IResolverConfigurationExpression})">
            <summary>设置 MappingExpression.ResolveUsing() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression.AsType">
            <summary>设置 MappingExpression.As(Type typeOverride) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression.ConstructorTypeMapFuncOfTypeObject">
            <summary>设置 MappingExpression.MappingExpression(TypeMap typeMap, Func`2&lt;Type,Object&gt; typeConverterCtor) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression.ConvertUsingType">
            <summary>设置 MappingExpression.ConvertUsing(Type typeConverterType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression.ForDestinationMemberIMemberAccessorActionOfIMemberConfigurationExpression">
            <summary>设置 MappingExpression.ForDestinationMember(IMemberAccessor destinationProperty, Action`1&lt;IMemberConfigurationExpression&gt; memberOptions) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression.ForMemberStringActionOfIMemberConfigurationExpression">
            <summary>设置 MappingExpression.ForMember(String name, Action`1&lt;IMemberConfigurationExpression&gt; memberOptions) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression.ForSourceMemberStringActionOfISourceMemberConfigurationExpression">
            <summary>设置 MappingExpression.ForSourceMember(String sourceMemberName, Action`1&lt;ISourceMemberConfigurationExpression&gt; memberOptions) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression.Ignore">
            <summary>设置 MappingExpression.Ignore() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression.MapFromString">
            <summary>设置 MappingExpression.MapFrom(String sourceMember) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression.ResolveUsingIValueResolver">
            <summary>设置 MappingExpression.ResolveUsing(IValueResolver valueResolver) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression.ResolveUsingType">
            <summary>设置 MappingExpression.ResolveUsing(Type valueResolverType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression.WithProfileString">
            <summary>设置 MappingExpression.WithProfile(String profileName) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimMappingExpression.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression.AllInstances.BuildCtorOf1Type``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MappingExpression,System.Type,System.Func{AutoMapper.ResolutionContext,``0}})">
            <summary>设置 MappingExpression.BuildCtor(Type type) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression.AllInstances.ConvertUsingOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{AutoMapper.MappingExpression})">
            <summary>设置 MappingExpression.ConvertUsing() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression.AllInstances.ResolveUsingOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MappingExpression,AutoMapper.IResolverConfigurationExpression})">
            <summary>设置 MappingExpression.ResolveUsing() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression.AllInstances.AsType">
            <summary>设置 MappingExpression.As(Type typeOverride) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression.AllInstances.ConvertUsingType">
            <summary>设置 MappingExpression.ConvertUsing(Type typeConverterType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression.AllInstances.ForDestinationMemberIMemberAccessorActionOfIMemberConfigurationExpression">
            <summary>设置 MappingExpression.ForDestinationMember(IMemberAccessor destinationProperty, Action`1&lt;IMemberConfigurationExpression&gt; memberOptions) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression.AllInstances.ForMemberStringActionOfIMemberConfigurationExpression">
            <summary>设置 MappingExpression.ForMember(String name, Action`1&lt;IMemberConfigurationExpression&gt; memberOptions) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression.AllInstances.ForSourceMemberStringActionOfISourceMemberConfigurationExpression">
            <summary>设置 MappingExpression.ForSourceMember(String sourceMemberName, Action`1&lt;ISourceMemberConfigurationExpression&gt; memberOptions) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression.AllInstances.Ignore">
            <summary>设置 MappingExpression.Ignore() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression.AllInstances.MapFromString">
            <summary>设置 MappingExpression.MapFrom(String sourceMember) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression.AllInstances.ResolveUsingIValueResolver">
            <summary>设置 MappingExpression.ResolveUsing(IValueResolver valueResolver) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression.AllInstances.ResolveUsingType">
            <summary>设置 MappingExpression.ResolveUsing(Type valueResolverType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression.AllInstances.WithProfileString">
            <summary>设置 MappingExpression.WithProfile(String profileName) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimMappingExpression`2">
            <summary>AutoMapper.MappingExpression`2 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression`2.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression`2.#ctor(AutoMapper.MappingExpression{`0,`1})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression`2.AddFormatterOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IFormatterCtorExpression{``0}})">
            <summary>设置 MappingExpression`2.AddFormatter() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression`2.AfterMapOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IMappingExpression{`0,`1}})">
            <summary>设置 MappingExpression`2.AfterMap() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression`2.AsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>设置 MappingExpression`2.As() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression`2.BeforeMapOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IMappingExpression{`0,`1}})">
            <summary>设置 MappingExpression`2.BeforeMap() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression`2.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression`2.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression`2.Bind(AutoMapper.IFormatterCtorConfigurator)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression`2.Bind(AutoMapper.IMemberConfigurationExpression{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression`2.Bind(AutoMapper.IMappingExpression{`0,`1})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression`2.BuildCtorOf1Type``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type,System.Func{AutoMapper.ResolutionContext,``0}})">
            <summary>设置 MappingExpression`2.BuildCtor(Type type) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression`2.ConvertUsingOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>设置 MappingExpression`2.ConvertUsing() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression`2.IncludeOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IMappingExpression{`0,`1}})">
            <summary>设置 MappingExpression`2.Include() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression`2.MapFromOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Linq.Expressions.Expression{System.Func{`0,``0}}})">
            <summary>设置 MappingExpression`2.MapFrom(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; sourceMember) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression`2.ResolveUsingOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IResolverConfigurationExpression{`0,``0}})">
            <summary>设置 MappingExpression`2.ResolveUsing() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression`2.SkipFormatterOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>设置 MappingExpression`2.SkipFormatter() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression`2.UseValueOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0})">
            <summary>设置 MappingExpression`2.UseValue(!!0 value) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression`2._AfterMapb__2fOf1T0T1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{`0,`1})">
            <summary>设置 MappingExpression`2.&lt;AfterMap&gt;b__2f(!0 src, !1 dest) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression`2._BeforeMapb__2bOf1T0T1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{`0,`1})">
            <summary>设置 MappingExpression`2.&lt;BeforeMap&gt;b__2b(!0 src, !1 dest) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AddFormatterIValueFormatter">
            <summary>设置 MappingExpression`2.AddFormatter(IValueFormatter formatter) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AddFormatterType">
            <summary>设置 MappingExpression`2.AddFormatter(Type valueFormatterType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AfterMapActionOfT0T1">
            <summary>设置 MappingExpression`2.AfterMap(Action`2&lt;!0,!1&gt; afterFunction) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.BeforeMapActionOfT0T1">
            <summary>设置 MappingExpression`2.BeforeMap(Action`2&lt;!0,!1&gt; beforeFunction) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.ConditionFuncOfResolutionContextBoolean">
            <summary>设置 MappingExpression`2.Condition(Func`2&lt;ResolutionContext,Boolean&gt; condition) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.ConditionFuncOfT0Boolean">
            <summary>设置 MappingExpression`2.Condition(Func`2&lt;!0,Boolean&gt; condition) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.ConstructFormatterByTypeFuncOfIValueFormatter">
            <summary>设置 MappingExpression`2.ConstructFormatterBy(Type formatterType, Func`1&lt;IValueFormatter&gt; instantiator) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.ConstructUsingFuncOfResolutionContextT1">
            <summary>设置 MappingExpression`2.ConstructUsing(Func`2&lt;ResolutionContext,!1&gt; ctor) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.ConstructUsingFuncOfT0T1">
            <summary>设置 MappingExpression`2.ConstructUsing(Func`2&lt;!0,!1&gt; ctor) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.ConstructUsingServiceLocator">
            <summary>设置 MappingExpression`2.ConstructUsingServiceLocator() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.ConstructorTypeMapFuncOfTypeObjectIProfileExpression">
            <summary>设置 MappingExpression`2.MappingExpression`2(TypeMap typeMap, Func`2&lt;Type,Object&gt; serviceCtor, IProfileExpression configurationContainer) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.ConvertUsingFuncOfResolutionContextT0T1">
            <summary>设置 MappingExpression`2.ConvertUsing(Func`3&lt;ResolutionContext,!0,!1&gt; mappingFunction) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.ConvertUsingFuncOfResolutionContextT1">
            <summary>设置 MappingExpression`2.ConvertUsing(Func`2&lt;ResolutionContext,!1&gt; mappingFunction) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.ConvertUsingFuncOfT0T1">
            <summary>设置 MappingExpression`2.ConvertUsing(Func`2&lt;!0,!1&gt; mappingFunction) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.ConvertUsingITypeConverterOfT0T1">
            <summary>设置 MappingExpression`2.ConvertUsing(ITypeConverter`2&lt;!0,!1&gt; converter) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.DoNotUseDestinationValue">
            <summary>设置 MappingExpression`2.DoNotUseDestinationValue() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.ForAllMembersActionOfIMemberConfigurationExpressionOfT0">
            <summary>设置 MappingExpression`2.ForAllMembers(Action`1&lt;IMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.ForDestinationMemberIMemberAccessorActionOfIMemberConfigurationExpressionOfT0">
            <summary>设置 MappingExpression`2.ForDestinationMember(IMemberAccessor destinationProperty, Action`1&lt;IMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.ForMemberExpressionOfFuncOfT1ObjectActionOfIMemberConfigurationExpressionOfT0">
            <summary>设置 MappingExpression`2.ForMember(Expression`1&lt;Func`2&lt;!1,Object&gt;&gt; destinationMember, Action`1&lt;IMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.ForMemberStringActionOfIMemberConfigurationExpressionOfT0">
            <summary>设置 MappingExpression`2.ForMember(String name, Action`1&lt;IMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.ForSourceMemberExpressionOfFuncOfT0ObjectActionOfISourceMemberConfigurationExpressionOfT0">
            <summary>设置 MappingExpression`2.ForSourceMember(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; sourceMember, Action`1&lt;ISourceMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.ForSourceMemberStringActionOfISourceMemberConfigurationExpressionOfT0">
            <summary>设置 MappingExpression`2.ForSourceMember(String sourceMemberName, Action`1&lt;ISourceMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.HasAnInaccessibleSetterPropertyInfo">
            <summary>设置 MappingExpression`2.HasAnInaccessibleSetter(PropertyInfo property) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.Ignore">
            <summary>设置 MappingExpression`2.Ignore() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.IgnoreAllPropertiesWithAnInaccessibleSetter">
            <summary>设置 MappingExpression`2.IgnoreAllPropertiesWithAnInaccessibleSetter() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.IgnoreAllSourcePropertiesWithAnInaccessibleSetter">
            <summary>设置 MappingExpression`2.IgnoreAllSourcePropertiesWithAnInaccessibleSetter() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.IncludeTypeType">
            <summary>设置 MappingExpression`2.Include(Type otherSourceType, Type otherDestinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.MaxDepthInt32">
            <summary>设置 MappingExpression`2.MaxDepth(Int32 depth) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.NullSubstituteObject">
            <summary>设置 MappingExpression`2.NullSubstitute(Object nullSubstitute) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.PreConditionFuncOfResolutionContextBoolean">
            <summary>设置 MappingExpression`2.PreCondition(Func`2&lt;ResolutionContext,Boolean&gt; condition) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.PreConditionFuncOfT0Boolean">
            <summary>设置 MappingExpression`2.PreCondition(Func`2&lt;!0,Boolean&gt; condition) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.ResolveUsingFuncOfResolutionResultObject">
            <summary>设置 MappingExpression`2.ResolveUsing(Func`2&lt;ResolutionResult,Object&gt; resolver) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.ResolveUsingFuncOfT0Object">
            <summary>设置 MappingExpression`2.ResolveUsing(Func`2&lt;!0,Object&gt; resolver) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.ResolveUsingIValueResolver">
            <summary>设置 MappingExpression`2.ResolveUsing(IValueResolver valueResolver) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.ResolveUsingType">
            <summary>设置 MappingExpression`2.ResolveUsing(Type valueResolverType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.ReverseMap">
            <summary>设置 MappingExpression`2.ReverseMap() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.SetMappingOrderInt32">
            <summary>设置 MappingExpression`2.SetMappingOrder(Int32 mappingOrder) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.SubstituteFuncOfT0Object">
            <summary>设置 MappingExpression`2.Substitute(Func`2&lt;!0,Object&gt; substituteFunc) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.UseDestinationValue">
            <summary>设置 MappingExpression`2.UseDestinationValue() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.UseValueObject">
            <summary>设置 MappingExpression`2.UseValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.WithProfileString">
            <summary>设置 MappingExpression`2.WithProfile(String profileName) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2._IgnoreAllPropertiesWithAnInaccessibleSetterb__3IMemberConfigurationExpressionOfT0">
            <summary>设置 MappingExpression`2.&lt;IgnoreAllPropertiesWithAnInaccessibleSetter&gt;b__3(IMemberConfigurationExpression`1&lt;!0&gt; opt) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2._IgnoreAllSourcePropertiesWithAnInaccessibleSetterb__5ISourceMemberConfigurationExpressionOfT0">
            <summary>设置 MappingExpression`2.&lt;IgnoreAllSourcePropertiesWithAnInaccessibleSetter&gt;b__5(ISourceMemberConfigurationExpression`1&lt;!0&gt; opt) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2._ReverseMapb__15PropertyMap">
            <summary>设置 MappingExpression`2.&lt;ReverseMap&gt;b__15(PropertyMap pm) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2._ReverseMapb__16ISourceMemberConfigurationExpressionOfT1">
            <summary>设置 MappingExpression`2.&lt;ReverseMap&gt;b__16(ISourceMemberConfigurationExpression`1&lt;!1&gt; opt) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.AddFormatterOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MappingExpression{`0,`1},AutoMapper.IFormatterCtorExpression{``0}})">
            <summary>设置 MappingExpression`2.AddFormatter() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.AfterMapOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MappingExpression{`0,`1},AutoMapper.IMappingExpression{`0,`1}})">
            <summary>设置 MappingExpression`2.AfterMap() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.AsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{AutoMapper.MappingExpression{`0,`1}})">
            <summary>设置 MappingExpression`2.As() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.BeforeMapOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MappingExpression{`0,`1},AutoMapper.IMappingExpression{`0,`1}})">
            <summary>设置 MappingExpression`2.BeforeMap() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.BuildCtorOf1Type``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MappingExpression{`0,`1},System.Type,System.Func{AutoMapper.ResolutionContext,``0}})">
            <summary>设置 MappingExpression`2.BuildCtor(Type type) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.ConvertUsingOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{AutoMapper.MappingExpression{`0,`1}})">
            <summary>设置 MappingExpression`2.ConvertUsing() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.IncludeOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MappingExpression{`0,`1},AutoMapper.IMappingExpression{`0,`1}})">
            <summary>设置 MappingExpression`2.Include() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.MapFromOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{AutoMapper.MappingExpression{`0,`1},System.Linq.Expressions.Expression{System.Func{`0,``0}}})">
            <summary>设置 MappingExpression`2.MapFrom(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; sourceMember) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.ResolveUsingOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MappingExpression{`0,`1},AutoMapper.IResolverConfigurationExpression{`0,``0}})">
            <summary>设置 MappingExpression`2.ResolveUsing() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.SkipFormatterOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{AutoMapper.MappingExpression{`0,`1}})">
            <summary>设置 MappingExpression`2.SkipFormatter() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.UseValueOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{AutoMapper.MappingExpression{`0,`1},``0})">
            <summary>设置 MappingExpression`2.UseValue(!!0 value) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances._AfterMapb__2fOf1T0T1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{AutoMapper.MappingExpression{`0,`1},`0,`1})">
            <summary>设置 MappingExpression`2.&lt;AfterMap&gt;b__2f(!0 src, !1 dest) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances._BeforeMapb__2bOf1T0T1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{AutoMapper.MappingExpression{`0,`1},`0,`1})">
            <summary>设置 MappingExpression`2.&lt;BeforeMap&gt;b__2b(!0 src, !1 dest) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.AddFormatterIValueFormatter">
            <summary>设置 MappingExpression`2.AddFormatter(IValueFormatter formatter) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.AddFormatterType">
            <summary>设置 MappingExpression`2.AddFormatter(Type valueFormatterType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.AfterMapActionOfT0T1">
            <summary>设置 MappingExpression`2.AfterMap(Action`2&lt;!0,!1&gt; afterFunction) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.BeforeMapActionOfT0T1">
            <summary>设置 MappingExpression`2.BeforeMap(Action`2&lt;!0,!1&gt; beforeFunction) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.ConditionFuncOfResolutionContextBoolean">
            <summary>设置 MappingExpression`2.Condition(Func`2&lt;ResolutionContext,Boolean&gt; condition) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.ConditionFuncOfT0Boolean">
            <summary>设置 MappingExpression`2.Condition(Func`2&lt;!0,Boolean&gt; condition) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.ConstructFormatterByTypeFuncOfIValueFormatter">
            <summary>设置 MappingExpression`2.ConstructFormatterBy(Type formatterType, Func`1&lt;IValueFormatter&gt; instantiator) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.ConstructUsingFuncOfResolutionContextT1">
            <summary>设置 MappingExpression`2.ConstructUsing(Func`2&lt;ResolutionContext,!1&gt; ctor) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.ConstructUsingFuncOfT0T1">
            <summary>设置 MappingExpression`2.ConstructUsing(Func`2&lt;!0,!1&gt; ctor) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.ConstructUsingServiceLocator">
            <summary>设置 MappingExpression`2.ConstructUsingServiceLocator() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.ConvertUsingFuncOfResolutionContextT0T1">
            <summary>设置 MappingExpression`2.ConvertUsing(Func`3&lt;ResolutionContext,!0,!1&gt; mappingFunction) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.ConvertUsingFuncOfResolutionContextT1">
            <summary>设置 MappingExpression`2.ConvertUsing(Func`2&lt;ResolutionContext,!1&gt; mappingFunction) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.ConvertUsingFuncOfT0T1">
            <summary>设置 MappingExpression`2.ConvertUsing(Func`2&lt;!0,!1&gt; mappingFunction) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.ConvertUsingITypeConverterOfT0T1">
            <summary>设置 MappingExpression`2.ConvertUsing(ITypeConverter`2&lt;!0,!1&gt; converter) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.DoNotUseDestinationValue">
            <summary>设置 MappingExpression`2.DoNotUseDestinationValue() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.ForAllMembersActionOfIMemberConfigurationExpressionOfT0">
            <summary>设置 MappingExpression`2.ForAllMembers(Action`1&lt;IMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.ForDestinationMemberIMemberAccessorActionOfIMemberConfigurationExpressionOfT0">
            <summary>设置 MappingExpression`2.ForDestinationMember(IMemberAccessor destinationProperty, Action`1&lt;IMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.ForMemberExpressionOfFuncOfT1ObjectActionOfIMemberConfigurationExpressionOfT0">
            <summary>设置 MappingExpression`2.ForMember(Expression`1&lt;Func`2&lt;!1,Object&gt;&gt; destinationMember, Action`1&lt;IMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.ForMemberStringActionOfIMemberConfigurationExpressionOfT0">
            <summary>设置 MappingExpression`2.ForMember(String name, Action`1&lt;IMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.ForSourceMemberExpressionOfFuncOfT0ObjectActionOfISourceMemberConfigurationExpressionOfT0">
            <summary>设置 MappingExpression`2.ForSourceMember(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; sourceMember, Action`1&lt;ISourceMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.ForSourceMemberStringActionOfISourceMemberConfigurationExpressionOfT0">
            <summary>设置 MappingExpression`2.ForSourceMember(String sourceMemberName, Action`1&lt;ISourceMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.HasAnInaccessibleSetterPropertyInfo">
            <summary>设置 MappingExpression`2.HasAnInaccessibleSetter(PropertyInfo property) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.Ignore">
            <summary>设置 MappingExpression`2.Ignore() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.IgnoreAllPropertiesWithAnInaccessibleSetter">
            <summary>设置 MappingExpression`2.IgnoreAllPropertiesWithAnInaccessibleSetter() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.IgnoreAllSourcePropertiesWithAnInaccessibleSetter">
            <summary>设置 MappingExpression`2.IgnoreAllSourcePropertiesWithAnInaccessibleSetter() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.IncludeTypeType">
            <summary>设置 MappingExpression`2.Include(Type otherSourceType, Type otherDestinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.MaxDepthInt32">
            <summary>设置 MappingExpression`2.MaxDepth(Int32 depth) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.NullSubstituteObject">
            <summary>设置 MappingExpression`2.NullSubstitute(Object nullSubstitute) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.PreConditionFuncOfResolutionContextBoolean">
            <summary>设置 MappingExpression`2.PreCondition(Func`2&lt;ResolutionContext,Boolean&gt; condition) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.PreConditionFuncOfT0Boolean">
            <summary>设置 MappingExpression`2.PreCondition(Func`2&lt;!0,Boolean&gt; condition) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.ResolveUsingFuncOfResolutionResultObject">
            <summary>设置 MappingExpression`2.ResolveUsing(Func`2&lt;ResolutionResult,Object&gt; resolver) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.ResolveUsingFuncOfT0Object">
            <summary>设置 MappingExpression`2.ResolveUsing(Func`2&lt;!0,Object&gt; resolver) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.ResolveUsingIValueResolver">
            <summary>设置 MappingExpression`2.ResolveUsing(IValueResolver valueResolver) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.ResolveUsingType">
            <summary>设置 MappingExpression`2.ResolveUsing(Type valueResolverType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.ReverseMap">
            <summary>设置 MappingExpression`2.ReverseMap() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.SetMappingOrderInt32">
            <summary>设置 MappingExpression`2.SetMappingOrder(Int32 mappingOrder) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.SubstituteFuncOfT0Object">
            <summary>设置 MappingExpression`2.Substitute(Func`2&lt;!0,Object&gt; substituteFunc) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.UseDestinationValue">
            <summary>设置 MappingExpression`2.UseDestinationValue() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.UseValueObject">
            <summary>设置 MappingExpression`2.UseValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingExpression`2.AllInstances.WithProfileString">
            <summary>设置 MappingExpression`2.WithProfile(String profileName) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimMappingOperationOptions">
            <summary>AutoMapper.MappingOperationOptions 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingOperationOptions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingOperationOptions.#ctor(AutoMapper.MappingOperationOptions)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingOperationOptions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingOperationOptions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimMappingOperationOptions.Bind(AutoMapper.IMappingOperationOptions)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.AutoMapperIMappingOperationOptionsConstructServicesUsingFuncOfTypeObject">
            <summary>设置 MappingOperationOptions.AutoMapper.IMappingOperationOptions.ConstructServicesUsing(Func`2&lt;Type,Object&gt; constructor) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.Constructor">
            <summary>设置 MappingOperationOptions.MappingOperationOptions() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.CreateMissingTypeMapsGet">
            <summary>设置 MappingOperationOptions.get_CreateMissingTypeMaps() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.CreateMissingTypeMapsSetBoolean">
            <summary>设置 MappingOperationOptions.set_CreateMissingTypeMaps(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.DisableCacheGet">
            <summary>设置 MappingOperationOptions.get_DisableCache() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.DisableCacheSetBoolean">
            <summary>设置 MappingOperationOptions.set_DisableCache(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.ItemsGet">
            <summary>设置 MappingOperationOptions.get_Items() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.ItemsSetIDictionaryOfStringObject">
            <summary>设置 MappingOperationOptions.set_Items(IDictionary`2&lt;String,Object&gt; value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.ServiceCtorGet">
            <summary>设置 MappingOperationOptions.get_ServiceCtor() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.ServiceCtorSetFuncOfTypeObject">
            <summary>设置 MappingOperationOptions.set_ServiceCtor(Func`2&lt;Type,Object&gt; value) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimMappingOperationOptions.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.AllInstances.AutoMapperIMappingOperationOptionsConstructServicesUsingFuncOfTypeObject">
            <summary>设置 MappingOperationOptions.AutoMapper.IMappingOperationOptions.ConstructServicesUsing(Func`2&lt;Type,Object&gt; constructor) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.AllInstances.CreateMissingTypeMapsGet">
            <summary>设置 MappingOperationOptions.get_CreateMissingTypeMaps() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.AllInstances.CreateMissingTypeMapsSetBoolean">
            <summary>设置 MappingOperationOptions.set_CreateMissingTypeMaps(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.AllInstances.DisableCacheGet">
            <summary>设置 MappingOperationOptions.get_DisableCache() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.AllInstances.DisableCacheSetBoolean">
            <summary>设置 MappingOperationOptions.set_DisableCache(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.AllInstances.ItemsGet">
            <summary>设置 MappingOperationOptions.get_Items() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.AllInstances.ItemsSetIDictionaryOfStringObject">
            <summary>设置 MappingOperationOptions.set_Items(IDictionary`2&lt;String,Object&gt; value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.AllInstances.ServiceCtorGet">
            <summary>设置 MappingOperationOptions.get_ServiceCtor() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimMappingOperationOptions.AllInstances.ServiceCtorSetFuncOfTypeObject">
            <summary>设置 MappingOperationOptions.set_ServiceCtor(Func`2&lt;Type,Object&gt; value) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimNullReferenceExceptionSwallowingResolver">
            <summary>AutoMapper.NullReferenceExceptionSwallowingResolver 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimNullReferenceExceptionSwallowingResolver.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimNullReferenceExceptionSwallowingResolver.#ctor(AutoMapper.NullReferenceExceptionSwallowingResolver)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimNullReferenceExceptionSwallowingResolver.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimNullReferenceExceptionSwallowingResolver.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimNullReferenceExceptionSwallowingResolver.Bind(AutoMapper.IMemberResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimNullReferenceExceptionSwallowingResolver.Bind(AutoMapper.IValueResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimNullReferenceExceptionSwallowingResolver.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimNullReferenceExceptionSwallowingResolver.ConstructorIMemberResolver">
            <summary>设置 NullReferenceExceptionSwallowingResolver.NullReferenceExceptionSwallowingResolver(IMemberResolver inner) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimNullReferenceExceptionSwallowingResolver.MemberTypeGet">
            <summary>设置 NullReferenceExceptionSwallowingResolver.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimNullReferenceExceptionSwallowingResolver.ResolveResolutionResult">
            <summary>设置 NullReferenceExceptionSwallowingResolver.Resolve(ResolutionResult source) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimNullReferenceExceptionSwallowingResolver.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimNullReferenceExceptionSwallowingResolver.AllInstances.MemberTypeGet">
            <summary>设置 NullReferenceExceptionSwallowingResolver.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimNullReferenceExceptionSwallowingResolver.AllInstances.ResolveResolutionResult">
            <summary>设置 NullReferenceExceptionSwallowingResolver.Resolve(ResolutionResult source) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimNullReplacementMethod">
            <summary>AutoMapper.NullReplacementMethod 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimNullReplacementMethod.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimNullReplacementMethod.#ctor(AutoMapper.NullReplacementMethod)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimNullReplacementMethod.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimNullReplacementMethod.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimNullReplacementMethod.Bind(AutoMapper.IValueResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimNullReplacementMethod.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimNullReplacementMethod.ConstructorObject">
            <summary>设置 NullReplacementMethod.NullReplacementMethod(Object nullSubstitute) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimNullReplacementMethod.ResolveResolutionResult">
            <summary>设置 NullReplacementMethod.Resolve(ResolutionResult source) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimNullReplacementMethod.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimNullReplacementMethod.AllInstances.ResolveResolutionResult">
            <summary>设置 NullReplacementMethod.Resolve(ResolutionResult source) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimPascalCaseNamingConvention">
            <summary>AutoMapper.PascalCaseNamingConvention 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimPascalCaseNamingConvention.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimPascalCaseNamingConvention.#ctor(AutoMapper.PascalCaseNamingConvention)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimPascalCaseNamingConvention.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimPascalCaseNamingConvention.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimPascalCaseNamingConvention.Bind(AutoMapper.INamingConvention)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPascalCaseNamingConvention.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPascalCaseNamingConvention.Constructor">
            <summary>设置 PascalCaseNamingConvention.PascalCaseNamingConvention() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPascalCaseNamingConvention.SeparatorCharacterGet">
            <summary>设置 PascalCaseNamingConvention.get_SeparatorCharacter() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPascalCaseNamingConvention.SplittingExpressionGet">
            <summary>设置 PascalCaseNamingConvention.get_SplittingExpression() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimPascalCaseNamingConvention.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPascalCaseNamingConvention.AllInstances.SeparatorCharacterGet">
            <summary>设置 PascalCaseNamingConvention.get_SeparatorCharacter() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPascalCaseNamingConvention.AllInstances.SplittingExpressionGet">
            <summary>设置 PascalCaseNamingConvention.get_SplittingExpression() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimProfile">
            <summary>AutoMapper.Profile 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimProfile.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimProfile.#ctor(AutoMapper.Profile)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimProfile.AddFormatterOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IFormatterCtorExpression{``0}})">
            <summary>设置 Profile.AddFormatter() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimProfile.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimProfile.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimProfile.Bind(AutoMapper.IFormatterExpression)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimProfile.Bind(AutoMapper.IMappingOptions)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimProfile.Bind(AutoMapper.IProfileExpression)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimProfile.CreateMapOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IMappingExpression{``0,``1}})">
            <summary>设置 Profile.CreateMap() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimProfile.CreateMapOf2MemberList``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MemberList,AutoMapper.IMappingExpression{``0,``1}})">
            <summary>设置 Profile.CreateMap(MemberList memberList) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimProfile.ForSourceTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IFormatterExpression})">
            <summary>设置 Profile.ForSourceType() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimProfile.SkipFormatterOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>设置 Profile.SkipFormatter() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AddFormatExpressionFuncOfResolutionContextString">
            <summary>设置 Profile.AddFormatExpression(Func`2&lt;ResolutionContext,String&gt; formatExpression) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AddFormatterIValueFormatter">
            <summary>设置 Profile.AddFormatter(IValueFormatter formatter) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AddFormatterType">
            <summary>设置 Profile.AddFormatter(Type valueFormatterType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AddGlobalIgnoreString">
            <summary>设置 Profile.AddGlobalIgnore(String propertyNameStartingWith) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AliasesGet">
            <summary>设置 Profile.get_Aliases() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllowNullCollectionsGet">
            <summary>设置 Profile.get_AllowNullCollections() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllowNullCollectionsSetBoolean">
            <summary>设置 Profile.set_AllowNullCollections(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllowNullDestinationValuesGet">
            <summary>设置 Profile.get_AllowNullDestinationValues() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllowNullDestinationValuesSetBoolean">
            <summary>设置 Profile.set_AllowNullDestinationValues(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.Configure">
            <summary>设置 Profile.Configure() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.Constructor">
            <summary>设置 Profile.Profile() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.ConstructorMappingEnabledGet">
            <summary>设置 Profile.get_ConstructorMappingEnabled() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.ConstructorString">
            <summary>设置 Profile.Profile(String profileName) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.CreateMapTypeType">
            <summary>设置 Profile.CreateMap(Type sourceType, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.CreateMapTypeTypeMemberList">
            <summary>设置 Profile.CreateMap(Type sourceType, Type destinationType, MemberList memberList) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.DataReaderMapperYieldReturnEnabledGet">
            <summary>设置 Profile.get_DataReaderMapperYieldReturnEnabled() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.DestinationMemberNamingConventionGet">
            <summary>设置 Profile.get_DestinationMemberNamingConvention() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.DestinationMemberNamingConventionSetINamingConvention">
            <summary>设置 Profile.set_DestinationMemberNamingConvention(INamingConvention value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.DestinationPostfixesGet">
            <summary>设置 Profile.get_DestinationPostfixes() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.DestinationPrefixesGet">
            <summary>设置 Profile.get_DestinationPrefixes() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.DisableConstructorMapping">
            <summary>设置 Profile.DisableConstructorMapping() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.GetProfile">
            <summary>设置 Profile.GetProfile() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.IncludeSourceExtensionMethodsAssembly">
            <summary>设置 Profile.IncludeSourceExtensionMethods(Assembly assembly) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.InitializeConfigurationStore">
            <summary>设置 Profile.Initialize(ConfigurationStore configurator) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.PostfixesGet">
            <summary>设置 Profile.get_Postfixes() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.PrefixesGet">
            <summary>设置 Profile.get_Prefixes() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.ProfileNameGet">
            <summary>设置 Profile.get_ProfileName() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.ProfileNameSetString">
            <summary>设置 Profile.set_ProfileName(String value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.RecognizeAliasStringString">
            <summary>设置 Profile.RecognizeAlias(String original, String alias) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.RecognizeDestinationPostfixesStringArray">
            <summary>设置 Profile.RecognizeDestinationPostfixes(String[] postfixes) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.RecognizeDestinationPrefixesStringArray">
            <summary>设置 Profile.RecognizeDestinationPrefixes(String[] prefixes) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.RecognizePostfixesStringArray">
            <summary>设置 Profile.RecognizePostfixes(String[] postfixes) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.RecognizePrefixesStringArray">
            <summary>设置 Profile.RecognizePrefixes(String[] prefixes) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.SourceExtensionMethodsGet">
            <summary>设置 Profile.get_SourceExtensionMethods() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.SourceMemberNamingConventionGet">
            <summary>设置 Profile.get_SourceMemberNamingConvention() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.SourceMemberNamingConventionSetINamingConvention">
            <summary>设置 Profile.set_SourceMemberNamingConvention(INamingConvention value) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimProfile.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimProfile.AllInstances.AddFormatterOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.Profile,AutoMapper.IFormatterCtorExpression{``0}})">
            <summary>设置 Profile.AddFormatter() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimProfile.AllInstances.CreateMapOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.Profile,AutoMapper.IMappingExpression{``0,``1}})">
            <summary>设置 Profile.CreateMap() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimProfile.AllInstances.CreateMapOf2MemberList``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.Profile,AutoMapper.MemberList,AutoMapper.IMappingExpression{``0,``1}})">
            <summary>设置 Profile.CreateMap(MemberList memberList) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimProfile.AllInstances.ForSourceTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.Profile,AutoMapper.IFormatterExpression})">
            <summary>设置 Profile.ForSourceType() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimProfile.AllInstances.SkipFormatterOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{AutoMapper.Profile})">
            <summary>设置 Profile.SkipFormatter() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.AddFormatExpressionFuncOfResolutionContextString">
            <summary>设置 Profile.AddFormatExpression(Func`2&lt;ResolutionContext,String&gt; formatExpression) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.AddFormatterIValueFormatter">
            <summary>设置 Profile.AddFormatter(IValueFormatter formatter) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.AddFormatterType">
            <summary>设置 Profile.AddFormatter(Type valueFormatterType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.AddGlobalIgnoreString">
            <summary>设置 Profile.AddGlobalIgnore(String propertyNameStartingWith) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.AliasesGet">
            <summary>设置 Profile.get_Aliases() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.AllowNullCollectionsGet">
            <summary>设置 Profile.get_AllowNullCollections() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.AllowNullCollectionsSetBoolean">
            <summary>设置 Profile.set_AllowNullCollections(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.AllowNullDestinationValuesGet">
            <summary>设置 Profile.get_AllowNullDestinationValues() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.AllowNullDestinationValuesSetBoolean">
            <summary>设置 Profile.set_AllowNullDestinationValues(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.Configure">
            <summary>设置 Profile.Configure() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.ConstructorMappingEnabledGet">
            <summary>设置 Profile.get_ConstructorMappingEnabled() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.CreateMapTypeType">
            <summary>设置 Profile.CreateMap(Type sourceType, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.CreateMapTypeTypeMemberList">
            <summary>设置 Profile.CreateMap(Type sourceType, Type destinationType, MemberList memberList) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.DataReaderMapperYieldReturnEnabledGet">
            <summary>设置 Profile.get_DataReaderMapperYieldReturnEnabled() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.DestinationMemberNamingConventionGet">
            <summary>设置 Profile.get_DestinationMemberNamingConvention() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.DestinationMemberNamingConventionSetINamingConvention">
            <summary>设置 Profile.set_DestinationMemberNamingConvention(INamingConvention value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.DestinationPostfixesGet">
            <summary>设置 Profile.get_DestinationPostfixes() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.DestinationPrefixesGet">
            <summary>设置 Profile.get_DestinationPrefixes() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.DisableConstructorMapping">
            <summary>设置 Profile.DisableConstructorMapping() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.GetProfile">
            <summary>设置 Profile.GetProfile() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.IncludeSourceExtensionMethodsAssembly">
            <summary>设置 Profile.IncludeSourceExtensionMethods(Assembly assembly) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.InitializeConfigurationStore">
            <summary>设置 Profile.Initialize(ConfigurationStore configurator) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.PostfixesGet">
            <summary>设置 Profile.get_Postfixes() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.PrefixesGet">
            <summary>设置 Profile.get_Prefixes() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.ProfileNameGet">
            <summary>设置 Profile.get_ProfileName() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.ProfileNameSetString">
            <summary>设置 Profile.set_ProfileName(String value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.RecognizeAliasStringString">
            <summary>设置 Profile.RecognizeAlias(String original, String alias) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.RecognizeDestinationPostfixesStringArray">
            <summary>设置 Profile.RecognizeDestinationPostfixes(String[] postfixes) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.RecognizeDestinationPrefixesStringArray">
            <summary>设置 Profile.RecognizeDestinationPrefixes(String[] prefixes) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.RecognizePostfixesStringArray">
            <summary>设置 Profile.RecognizePostfixes(String[] postfixes) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.RecognizePrefixesStringArray">
            <summary>设置 Profile.RecognizePrefixes(String[] prefixes) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.SourceExtensionMethodsGet">
            <summary>设置 Profile.get_SourceExtensionMethods() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.SourceMemberNamingConventionGet">
            <summary>设置 Profile.get_SourceMemberNamingConvention() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimProfile.AllInstances.SourceMemberNamingConventionSetINamingConvention">
            <summary>设置 Profile.set_SourceMemberNamingConvention(INamingConvention value) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimPropertyMap">
            <summary>AutoMapper.PropertyMap 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimPropertyMap.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimPropertyMap.#ctor(AutoMapper.PropertyMap)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimPropertyMap.AddFormatterToSkipOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>设置 PropertyMap.AddFormatterToSkip() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimPropertyMap.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimPropertyMap.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimPropertyMap.SetCustomValueResolverExpressionOf2ExpressionOfFuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Linq.Expressions.Expression{System.Func{``0,``1}}})">
            <summary>设置 PropertyMap.SetCustomValueResolverExpression(Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; sourceMember) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AddFormatterIValueFormatter">
            <summary>设置 PropertyMap.AddFormatter(IValueFormatter valueFormatter) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.ApplyConditionFuncOfResolutionContextBoolean">
            <summary>设置 PropertyMap.ApplyCondition(Func`2&lt;ResolutionContext,Boolean&gt; condition) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.ApplyPreConditionFuncOfResolutionContextBoolean">
            <summary>设置 PropertyMap.ApplyPreCondition(Func`2&lt;ResolutionContext,Boolean&gt; condition) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AssignCustomExpressionLambdaExpression">
            <summary>设置 PropertyMap.AssignCustomExpression(LambdaExpression customExpression) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AssignCustomValueResolverIValueResolver">
            <summary>设置 PropertyMap.AssignCustomValueResolver(IValueResolver valueResolver) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.CanBeSetGet">
            <summary>设置 PropertyMap.get_CanBeSet() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.CanResolveValue">
            <summary>设置 PropertyMap.CanResolveValue() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.ChainConstructorForResolverIValueResolver">
            <summary>设置 PropertyMap.ChainConstructorForResolver(IValueResolver valueResolver) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.ChainResolverIValueResolver">
            <summary>设置 PropertyMap.ChainResolver(IValueResolver IValueResolver) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.ChainTypeMemberForResolverIValueResolver">
            <summary>设置 PropertyMap.ChainTypeMemberForResolver(IValueResolver valueResolver) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.ConstructorIMemberAccessor">
            <summary>设置 PropertyMap.PropertyMap(IMemberAccessor destinationProperty) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.ConstructorPropertyMap">
            <summary>设置 PropertyMap.PropertyMap(PropertyMap inheritedMappedProperty) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.CustomExpressionGet">
            <summary>设置 PropertyMap.get_CustomExpression() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.CustomExpressionSetLambdaExpression">
            <summary>设置 PropertyMap.set_CustomExpression(LambdaExpression value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.DestinationPropertyGet">
            <summary>设置 PropertyMap.get_DestinationProperty() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.DestinationPropertySetIMemberAccessor">
            <summary>设置 PropertyMap.set_DestinationProperty(IMemberAccessor value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.DestinationPropertyTypeGet">
            <summary>设置 PropertyMap.get_DestinationPropertyType() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.EqualsObject">
            <summary>设置 PropertyMap.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.EqualsPropertyMap">
            <summary>设置 PropertyMap.Equals(PropertyMap other) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.FormattersToSkipContainsType">
            <summary>设置 PropertyMap.FormattersToSkipContains(Type valueFormatterType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.GetDestinationValueObject">
            <summary>设置 PropertyMap.GetDestinationValue(Object mappedObject) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.GetFormatters">
            <summary>设置 PropertyMap.GetFormatters() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.GetHashCode">
            <summary>设置 PropertyMap.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.GetMappingOrder">
            <summary>设置 PropertyMap.GetMappingOrder() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.GetSourceValueResolvers">
            <summary>设置 PropertyMap.GetSourceValueResolvers() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.HasCustomValueResolverGet">
            <summary>设置 PropertyMap.get_HasCustomValueResolver() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.Ignore">
            <summary>设置 PropertyMap.Ignore() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.IsIgnored">
            <summary>设置 PropertyMap.IsIgnored() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.IsMapped">
            <summary>设置 PropertyMap.IsMapped() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.RemoveLastFormatter">
            <summary>设置 PropertyMap.RemoveLastFormatter() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.RemoveLastResolver">
            <summary>设置 PropertyMap.RemoveLastResolver() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.ResetSourceMemberChain">
            <summary>设置 PropertyMap.ResetSourceMemberChain() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.ResolveValueResolutionContext">
            <summary>设置 PropertyMap.ResolveValue(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.Seal">
            <summary>设置 PropertyMap.Seal() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.SetMappingOrderInt32">
            <summary>设置 PropertyMap.SetMappingOrder(Int32 mappingOrder) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.SetNullSubstituteObject">
            <summary>设置 PropertyMap.SetNullSubstitute(Object nullSubstitute) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.ShouldAssignValuePreResolvingResolutionContext">
            <summary>设置 PropertyMap.ShouldAssignValuePreResolving(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.ShouldAssignValueResolutionContext">
            <summary>设置 PropertyMap.ShouldAssignValue(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.SourceMemberGet">
            <summary>设置 PropertyMap.get_SourceMember() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.SourceMemberSetMemberInfo">
            <summary>设置 PropertyMap.set_SourceMember(MemberInfo value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.UseDestinationValueGet">
            <summary>设置 PropertyMap.get_UseDestinationValue() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.UseDestinationValueSetBoolean">
            <summary>设置 PropertyMap.set_UseDestinationValue(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap._ResolveValueb__6ResolutionResultIValueResolver">
            <summary>设置 PropertyMap.&lt;ResolveValue&gt;b__6(ResolutionResult current, IValueResolver resolver) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimPropertyMap.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimPropertyMap.AllInstances.AddFormatterToSkipOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{AutoMapper.PropertyMap})">
            <summary>设置 PropertyMap.AddFormatterToSkip() 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimPropertyMap.AllInstances.SetCustomValueResolverExpressionOf2ExpressionOfFuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{AutoMapper.PropertyMap,System.Linq.Expressions.Expression{System.Func{``0,``1}}})">
            <summary>设置 PropertyMap.SetCustomValueResolverExpression(Expression`1&lt;Func`2&lt;!!0,!!1&gt;&gt; sourceMember) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.AddFormatterIValueFormatter">
            <summary>设置 PropertyMap.AddFormatter(IValueFormatter valueFormatter) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.ApplyConditionFuncOfResolutionContextBoolean">
            <summary>设置 PropertyMap.ApplyCondition(Func`2&lt;ResolutionContext,Boolean&gt; condition) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.ApplyPreConditionFuncOfResolutionContextBoolean">
            <summary>设置 PropertyMap.ApplyPreCondition(Func`2&lt;ResolutionContext,Boolean&gt; condition) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.AssignCustomExpressionLambdaExpression">
            <summary>设置 PropertyMap.AssignCustomExpression(LambdaExpression customExpression) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.AssignCustomValueResolverIValueResolver">
            <summary>设置 PropertyMap.AssignCustomValueResolver(IValueResolver valueResolver) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.CanBeSetGet">
            <summary>设置 PropertyMap.get_CanBeSet() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.CanResolveValue">
            <summary>设置 PropertyMap.CanResolveValue() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.ChainConstructorForResolverIValueResolver">
            <summary>设置 PropertyMap.ChainConstructorForResolver(IValueResolver valueResolver) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.ChainResolverIValueResolver">
            <summary>设置 PropertyMap.ChainResolver(IValueResolver IValueResolver) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.ChainTypeMemberForResolverIValueResolver">
            <summary>设置 PropertyMap.ChainTypeMemberForResolver(IValueResolver valueResolver) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.CustomExpressionGet">
            <summary>设置 PropertyMap.get_CustomExpression() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.CustomExpressionSetLambdaExpression">
            <summary>设置 PropertyMap.set_CustomExpression(LambdaExpression value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.DestinationPropertyGet">
            <summary>设置 PropertyMap.get_DestinationProperty() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.DestinationPropertySetIMemberAccessor">
            <summary>设置 PropertyMap.set_DestinationProperty(IMemberAccessor value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.DestinationPropertyTypeGet">
            <summary>设置 PropertyMap.get_DestinationPropertyType() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.EqualsObject">
            <summary>设置 PropertyMap.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.EqualsPropertyMap">
            <summary>设置 PropertyMap.Equals(PropertyMap other) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.FormattersToSkipContainsType">
            <summary>设置 PropertyMap.FormattersToSkipContains(Type valueFormatterType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.GetDestinationValueObject">
            <summary>设置 PropertyMap.GetDestinationValue(Object mappedObject) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.GetFormatters">
            <summary>设置 PropertyMap.GetFormatters() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.GetHashCode01">
            <summary>设置 PropertyMap.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.GetMappingOrder">
            <summary>设置 PropertyMap.GetMappingOrder() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.GetSourceValueResolvers">
            <summary>设置 PropertyMap.GetSourceValueResolvers() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.HasCustomValueResolverGet">
            <summary>设置 PropertyMap.get_HasCustomValueResolver() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.Ignore">
            <summary>设置 PropertyMap.Ignore() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.IsIgnored">
            <summary>设置 PropertyMap.IsIgnored() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.IsMapped">
            <summary>设置 PropertyMap.IsMapped() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.RemoveLastFormatter">
            <summary>设置 PropertyMap.RemoveLastFormatter() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.RemoveLastResolver">
            <summary>设置 PropertyMap.RemoveLastResolver() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.ResetSourceMemberChain">
            <summary>设置 PropertyMap.ResetSourceMemberChain() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.ResolveValueResolutionContext">
            <summary>设置 PropertyMap.ResolveValue(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.Seal">
            <summary>设置 PropertyMap.Seal() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.SetMappingOrderInt32">
            <summary>设置 PropertyMap.SetMappingOrder(Int32 mappingOrder) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.SetNullSubstituteObject">
            <summary>设置 PropertyMap.SetNullSubstitute(Object nullSubstitute) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.ShouldAssignValuePreResolvingResolutionContext">
            <summary>设置 PropertyMap.ShouldAssignValuePreResolving(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.ShouldAssignValueResolutionContext">
            <summary>设置 PropertyMap.ShouldAssignValue(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.SourceMemberGet">
            <summary>设置 PropertyMap.get_SourceMember() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.SourceMemberSetMemberInfo">
            <summary>设置 PropertyMap.set_SourceMember(MemberInfo value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.UseDestinationValueGet">
            <summary>设置 PropertyMap.get_UseDestinationValue() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyMap.AllInstances.UseDestinationValueSetBoolean">
            <summary>设置 PropertyMap.set_UseDestinationValue(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimPropertyNameResolver">
            <summary>AutoMapper.PropertyNameResolver 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimPropertyNameResolver.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimPropertyNameResolver.#ctor(AutoMapper.PropertyNameResolver)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimPropertyNameResolver.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimPropertyNameResolver.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimPropertyNameResolver.Bind(AutoMapper.IValueResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyNameResolver.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyNameResolver.ConstructorTypeString">
            <summary>设置 PropertyNameResolver.PropertyNameResolver(Type sourceType, String propertyName) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyNameResolver.ResolveResolutionResult">
            <summary>设置 PropertyNameResolver.Resolve(ResolutionResult source) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimPropertyNameResolver.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimPropertyNameResolver.AllInstances.ResolveResolutionResult">
            <summary>设置 PropertyNameResolver.Resolve(ResolutionResult source) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimResolutionContext">
            <summary>AutoMapper.ResolutionContext 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionContext.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionContext.#ctor(AutoMapper.ResolutionContext)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionContext.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionContext.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionContext.Bind(System.IEquatable{AutoMapper.ResolutionContext})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionContext.NewOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,AutoMapper.ResolutionContext})">
            <summary>设置 ResolutionContext.New(!!0 sourceValue) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.ArrayIndexGet">
            <summary>设置 ResolutionContext.get_ArrayIndex() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.ArrayIndexSetNullableOfInt32">
            <summary>设置 ResolutionContext.set_ArrayIndex(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AssignTypesTypeMapTypeType">
            <summary>设置 ResolutionContext.AssignTypes(TypeMap typeMap, Type sourceType, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.ConstructorResolutionContextObject">
            <summary>设置 ResolutionContext.ResolutionContext(ResolutionContext context, Object sourceValue) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.ConstructorResolutionContextObjectObjectTypeMapPropertyMap">
            <summary>设置 ResolutionContext.ResolutionContext(ResolutionContext context, Object sourceValue, Object destinationValue, TypeMap memberTypeMap, PropertyMap propertyMap) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.ConstructorResolutionContextObjectObjectTypePropertyMap">
            <summary>设置 ResolutionContext.ResolutionContext(ResolutionContext context, Object sourceValue, Object destinationValue, Type sourceType, PropertyMap propertyMap) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.ConstructorResolutionContextObjectType">
            <summary>设置 ResolutionContext.ResolutionContext(ResolutionContext context, Object sourceValue, Type sourceType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.ConstructorResolutionContextObjectTypeMapTypeTypeInt32">
            <summary>设置 ResolutionContext.ResolutionContext(ResolutionContext context, Object sourceValue, TypeMap typeMap, Type sourceType, Type destinationType, Int32 arrayIndex) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.ConstructorResolutionContextTypeMapObjectObjectTypeType">
            <summary>设置 ResolutionContext.ResolutionContext(ResolutionContext context, TypeMap memberTypeMap, Object sourceValue, Object destinationValue, Type sourceType, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.ConstructorTypeMapObjectObjectTypeTypeMappingOperationOptionsIMappingEngine">
            <summary>设置 ResolutionContext.ResolutionContext(TypeMap typeMap, Object source, Object destination, Type sourceType, Type destinationType, MappingOperationOptions options, IMappingEngine engine) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.ConstructorTypeMapObjectTypeTypeMappingOperationOptionsIMappingEngine">
            <summary>设置 ResolutionContext.ResolutionContext(TypeMap typeMap, Object source, Type sourceType, Type destinationType, MappingOperationOptions options, IMappingEngine engine) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.CreateElementContextTypeMapObjectTypeTypeInt32">
            <summary>设置 ResolutionContext.CreateElementContext(TypeMap elementTypeMap, Object item, Type sourceElementType, Type destinationElementType, Int32 arrayIndex) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.CreateMemberContextTypeMapObjectObjectTypePropertyMap">
            <summary>设置 ResolutionContext.CreateMemberContext(TypeMap memberTypeMap, Object memberValue, Object destinationValue, Type sourceMemberType, PropertyMap propertyMap) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.CreatePropertyMapContextPropertyMap">
            <summary>设置 ResolutionContext.CreatePropertyMapContext(PropertyMap propertyMap) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.CreateTypeContextTypeMapObjectObjectTypeType">
            <summary>设置 ResolutionContext.CreateTypeContext(TypeMap memberTypeMap, Object sourceValue, Object destinationValue, Type sourceType, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.CreateValueContextObject">
            <summary>设置 ResolutionContext.CreateValueContext(Object sourceValue) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.CreateValueContextObjectType">
            <summary>设置 ResolutionContext.CreateValueContext(Object sourceValue, Type sourceType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.DestinationTypeGet">
            <summary>设置 ResolutionContext.get_DestinationType() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.DestinationTypeSetType">
            <summary>设置 ResolutionContext.set_DestinationType(Type value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.DestinationValueGet">
            <summary>设置 ResolutionContext.get_DestinationValue() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.DestinationValueSetObject">
            <summary>设置 ResolutionContext.set_DestinationValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.EngineGet">
            <summary>设置 ResolutionContext.get_Engine() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.EngineSetIMappingEngine">
            <summary>设置 ResolutionContext.set_Engine(IMappingEngine value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.EqualsObject">
            <summary>设置 ResolutionContext.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.EqualsResolutionContext">
            <summary>设置 ResolutionContext.Equals(ResolutionContext other) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.GetContextPropertyMap">
            <summary>设置 ResolutionContext.GetContextPropertyMap() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.GetContextTypeMap">
            <summary>设置 ResolutionContext.GetContextTypeMap() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.GetHashCode">
            <summary>设置 ResolutionContext.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.InstanceCacheGet">
            <summary>设置 ResolutionContext.get_InstanceCache() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.InstanceCacheSetDictionaryOfResolutionContextObject">
            <summary>设置 ResolutionContext.set_InstanceCache(Dictionary`2&lt;ResolutionContext,Object&gt; value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.IsSourceValueNullGet">
            <summary>设置 ResolutionContext.get_IsSourceValueNull() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.MemberNameGet">
            <summary>设置 ResolutionContext.get_MemberName() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.OptionsGet">
            <summary>设置 ResolutionContext.get_Options() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.OptionsSetMappingOperationOptions">
            <summary>设置 ResolutionContext.set_Options(MappingOperationOptions value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.ParentGet">
            <summary>设置 ResolutionContext.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.ParentSetResolutionContext">
            <summary>设置 ResolutionContext.set_Parent(ResolutionContext value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.PropertyMapGet">
            <summary>设置 ResolutionContext.get_PropertyMap() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.PropertyMapSetPropertyMap">
            <summary>设置 ResolutionContext.set_PropertyMap(PropertyMap value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.SetResolvedDestinationValueObject">
            <summary>设置 ResolutionContext.SetResolvedDestinationValue(Object destintationValue) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.SourceTypeGet">
            <summary>设置 ResolutionContext.get_SourceType() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.SourceTypeSetType">
            <summary>设置 ResolutionContext.set_SourceType(Type value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.SourceValueGet">
            <summary>设置 ResolutionContext.get_SourceValue() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.SourceValueSetObject">
            <summary>设置 ResolutionContext.set_SourceValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.ToString">
            <summary>设置 ResolutionContext.ToString() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.TypeMapGet">
            <summary>设置 ResolutionContext.get_TypeMap() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.TypeMapSetTypeMap">
            <summary>设置 ResolutionContext.set_TypeMap(TypeMap value) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimResolutionContext.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.ArrayIndexGet">
            <summary>设置 ResolutionContext.get_ArrayIndex() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.ArrayIndexSetNullableOfInt32">
            <summary>设置 ResolutionContext.set_ArrayIndex(Nullable`1&lt;Int32&gt; value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.AssignTypesTypeMapTypeType">
            <summary>设置 ResolutionContext.AssignTypes(TypeMap typeMap, Type sourceType, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.CreateElementContextTypeMapObjectTypeTypeInt32">
            <summary>设置 ResolutionContext.CreateElementContext(TypeMap elementTypeMap, Object item, Type sourceElementType, Type destinationElementType, Int32 arrayIndex) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.CreateMemberContextTypeMapObjectObjectTypePropertyMap">
            <summary>设置 ResolutionContext.CreateMemberContext(TypeMap memberTypeMap, Object memberValue, Object destinationValue, Type sourceMemberType, PropertyMap propertyMap) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.CreatePropertyMapContextPropertyMap">
            <summary>设置 ResolutionContext.CreatePropertyMapContext(PropertyMap propertyMap) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.CreateTypeContextTypeMapObjectObjectTypeType">
            <summary>设置 ResolutionContext.CreateTypeContext(TypeMap memberTypeMap, Object sourceValue, Object destinationValue, Type sourceType, Type destinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.CreateValueContextObject">
            <summary>设置 ResolutionContext.CreateValueContext(Object sourceValue) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.CreateValueContextObjectType">
            <summary>设置 ResolutionContext.CreateValueContext(Object sourceValue, Type sourceType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.DestinationTypeGet">
            <summary>设置 ResolutionContext.get_DestinationType() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.DestinationTypeSetType">
            <summary>设置 ResolutionContext.set_DestinationType(Type value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.DestinationValueGet">
            <summary>设置 ResolutionContext.get_DestinationValue() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.DestinationValueSetObject">
            <summary>设置 ResolutionContext.set_DestinationValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.EngineGet">
            <summary>设置 ResolutionContext.get_Engine() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.EngineSetIMappingEngine">
            <summary>设置 ResolutionContext.set_Engine(IMappingEngine value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.EqualsObject">
            <summary>设置 ResolutionContext.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.EqualsResolutionContext">
            <summary>设置 ResolutionContext.Equals(ResolutionContext other) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.GetContextPropertyMap">
            <summary>设置 ResolutionContext.GetContextPropertyMap() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.GetContextTypeMap">
            <summary>设置 ResolutionContext.GetContextTypeMap() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.GetHashCode01">
            <summary>设置 ResolutionContext.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.InstanceCacheGet">
            <summary>设置 ResolutionContext.get_InstanceCache() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.InstanceCacheSetDictionaryOfResolutionContextObject">
            <summary>设置 ResolutionContext.set_InstanceCache(Dictionary`2&lt;ResolutionContext,Object&gt; value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.IsSourceValueNullGet">
            <summary>设置 ResolutionContext.get_IsSourceValueNull() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.MemberNameGet">
            <summary>设置 ResolutionContext.get_MemberName() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.OptionsGet">
            <summary>设置 ResolutionContext.get_Options() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.OptionsSetMappingOperationOptions">
            <summary>设置 ResolutionContext.set_Options(MappingOperationOptions value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.ParentGet">
            <summary>设置 ResolutionContext.get_Parent() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.ParentSetResolutionContext">
            <summary>设置 ResolutionContext.set_Parent(ResolutionContext value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.PropertyMapGet">
            <summary>设置 ResolutionContext.get_PropertyMap() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.PropertyMapSetPropertyMap">
            <summary>设置 ResolutionContext.set_PropertyMap(PropertyMap value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.SetResolvedDestinationValueObject">
            <summary>设置 ResolutionContext.SetResolvedDestinationValue(Object destintationValue) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.SourceTypeGet">
            <summary>设置 ResolutionContext.get_SourceType() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.SourceTypeSetType">
            <summary>设置 ResolutionContext.set_SourceType(Type value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.SourceValueGet">
            <summary>设置 ResolutionContext.get_SourceValue() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.SourceValueSetObject">
            <summary>设置 ResolutionContext.set_SourceValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.ToString01">
            <summary>设置 ResolutionContext.ToString() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.TypeMapGet">
            <summary>设置 ResolutionContext.get_TypeMap() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionContext.AllInstances.TypeMapSetTypeMap">
            <summary>设置 ResolutionContext.set_TypeMap(TypeMap value) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimResolutionExpression">
            <summary>AutoMapper.ResolutionExpression 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionExpression.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionExpression.#ctor(AutoMapper.ResolutionExpression)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionExpression.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionExpression.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionExpression.Bind(AutoMapper.IResolutionExpression)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionExpression.Bind(AutoMapper.IResolverConfigurationExpression)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionExpression.Bind(AutoMapper.IResolutionExpression{System.Object})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionExpression.Bind(AutoMapper.IResolverConfigurationExpression{System.Object})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionExpression.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionExpression.ConstructorTypePropertyMap">
            <summary>设置 ResolutionExpression.ResolutionExpression(Type sourceType, PropertyMap propertyMap) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimResolutionExpression.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimResolutionExpression`1">
            <summary>AutoMapper.ResolutionExpression`1 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionExpression`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionExpression`1.#ctor(AutoMapper.ResolutionExpression{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionExpression`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionExpression`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionExpression`1.Bind(AutoMapper.IResolutionExpression)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionExpression`1.Bind(AutoMapper.IResolverConfigurationExpression)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionExpression`1.Bind(AutoMapper.IResolutionExpression{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionExpression`1.Bind(AutoMapper.IResolverConfigurationExpression{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionExpression`1.AutoMapperIResolverConfigurationExpressionConstructedByFuncOfIValueResolver">
            <summary>设置 ResolutionExpression`1.AutoMapper.IResolverConfigurationExpression.ConstructedBy(Func`1&lt;IValueResolver&gt; constructor) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionExpression`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionExpression`1.ConstructedByFuncOfIValueResolver">
            <summary>设置 ResolutionExpression`1.ConstructedBy(Func`1&lt;IValueResolver&gt; constructor) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionExpression`1.ConstructorPropertyMap">
            <summary>设置 ResolutionExpression`1.ResolutionExpression`1(PropertyMap propertyMap) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionExpression`1.ConstructorTypePropertyMap">
            <summary>设置 ResolutionExpression`1.ResolutionExpression`1(Type sourceType, PropertyMap propertyMap) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionExpression`1.FromMemberExpressionOfFuncOfT0Object">
            <summary>设置 ResolutionExpression`1.FromMember(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; sourceMember) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionExpression`1.FromMemberString">
            <summary>设置 ResolutionExpression`1.FromMember(String sourcePropertyName) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimResolutionExpression`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionExpression`1.AllInstances.AutoMapperIResolverConfigurationExpressionConstructedByFuncOfIValueResolver">
            <summary>设置 ResolutionExpression`1.AutoMapper.IResolverConfigurationExpression.ConstructedBy(Func`1&lt;IValueResolver&gt; constructor) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionExpression`1.AllInstances.ConstructedByFuncOfIValueResolver">
            <summary>设置 ResolutionExpression`1.ConstructedBy(Func`1&lt;IValueResolver&gt; constructor) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionExpression`1.AllInstances.FromMemberExpressionOfFuncOfT0Object">
            <summary>设置 ResolutionExpression`1.FromMember(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; sourceMember) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionExpression`1.AllInstances.FromMemberString">
            <summary>设置 ResolutionExpression`1.FromMember(String sourcePropertyName) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimResolutionExpression`2">
            <summary>AutoMapper.ResolutionExpression`2 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionExpression`2.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionExpression`2.#ctor(AutoMapper.ResolutionExpression{`0,`1})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionExpression`2.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionExpression`2.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionExpression`2.Bind(AutoMapper.IResolverConfigurationExpression{`0,`1})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionExpression`2.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionExpression`2.ConstructedByFuncOfT1">
            <summary>设置 ResolutionExpression`2.ConstructedBy(Func`1&lt;!1&gt; constructor) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionExpression`2.ConstructorPropertyMap">
            <summary>设置 ResolutionExpression`2.ResolutionExpression`2(PropertyMap propertyMap) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionExpression`2.FromMemberExpressionOfFuncOfT0Object">
            <summary>设置 ResolutionExpression`2.FromMember(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; sourceMember) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionExpression`2.FromMemberString">
            <summary>设置 ResolutionExpression`2.FromMember(String sourcePropertyName) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimResolutionExpression`2.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionExpression`2.AllInstances.ConstructedByFuncOfT1">
            <summary>设置 ResolutionExpression`2.ConstructedBy(Func`1&lt;!1&gt; constructor) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionExpression`2.AllInstances.FromMemberExpressionOfFuncOfT0Object">
            <summary>设置 ResolutionExpression`2.FromMember(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; sourceMember) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionExpression`2.AllInstances.FromMemberString">
            <summary>设置 ResolutionExpression`2.FromMember(String sourcePropertyName) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimResolutionResult">
            <summary>AutoMapper.ResolutionResult 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionResult.#ctor(AutoMapper.ResolutionResult)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimResolutionResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.ConstructorObjectResolutionContext">
            <summary>设置 ResolutionResult.ResolutionResult(Object value, ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.ConstructorObjectResolutionContextType">
            <summary>设置 ResolutionResult.ResolutionResult(Object value, ResolutionContext context, Type memberType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.ConstructorResolutionContext">
            <summary>设置 ResolutionResult.ResolutionResult(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.ContextGet">
            <summary>设置 ResolutionResult.get_Context() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.Ignore">
            <summary>设置 ResolutionResult.Ignore() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.MemberTypeGet">
            <summary>设置 ResolutionResult.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.NewObject">
            <summary>设置 ResolutionResult.New(Object value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.NewObjectType">
            <summary>设置 ResolutionResult.New(Object value, Type memberType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.ResolveTypeObjectType">
            <summary>设置 ResolutionResult.ResolveType(Object value, Type memberType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.ShouldIgnoreGet">
            <summary>设置 ResolutionResult.get_ShouldIgnore() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.ShouldIgnoreSetBoolean">
            <summary>设置 ResolutionResult.set_ShouldIgnore(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.TypeGet">
            <summary>设置 ResolutionResult.get_Type() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.ValueGet">
            <summary>设置 ResolutionResult.get_Value() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimResolutionResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.AllInstances.ContextGet">
            <summary>设置 ResolutionResult.get_Context() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.AllInstances.Ignore">
            <summary>设置 ResolutionResult.Ignore() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.AllInstances.MemberTypeGet">
            <summary>设置 ResolutionResult.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.AllInstances.NewObject">
            <summary>设置 ResolutionResult.New(Object value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.AllInstances.NewObjectType">
            <summary>设置 ResolutionResult.New(Object value, Type memberType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.AllInstances.ResolveTypeObjectType">
            <summary>设置 ResolutionResult.ResolveType(Object value, Type memberType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.AllInstances.ShouldIgnoreGet">
            <summary>设置 ResolutionResult.get_ShouldIgnore() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.AllInstances.ShouldIgnoreSetBoolean">
            <summary>设置 ResolutionResult.set_ShouldIgnore(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.AllInstances.TypeGet">
            <summary>设置 ResolutionResult.get_Type() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimResolutionResult.AllInstances.ValueGet">
            <summary>设置 ResolutionResult.get_Value() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimSourceMemberConfig">
            <summary>AutoMapper.SourceMemberConfig 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimSourceMemberConfig.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimSourceMemberConfig.#ctor(AutoMapper.SourceMemberConfig)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimSourceMemberConfig.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimSourceMemberConfig.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimSourceMemberConfig.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimSourceMemberConfig.ConstructorMemberInfo">
            <summary>设置 SourceMemberConfig.SourceMemberConfig(MemberInfo sourceMember) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimSourceMemberConfig.Ignore">
            <summary>设置 SourceMemberConfig.Ignore() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimSourceMemberConfig.IsIgnored">
            <summary>设置 SourceMemberConfig.IsIgnored() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimSourceMemberConfig.SourceMemberGet">
            <summary>设置 SourceMemberConfig.get_SourceMember() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimSourceMemberConfig.SourceMemberSetMemberInfo">
            <summary>设置 SourceMemberConfig.set_SourceMember(MemberInfo value) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimSourceMemberConfig.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimSourceMemberConfig.AllInstances.Ignore">
            <summary>设置 SourceMemberConfig.Ignore() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimSourceMemberConfig.AllInstances.IsIgnored">
            <summary>设置 SourceMemberConfig.IsIgnored() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimSourceMemberConfig.AllInstances.SourceMemberGet">
            <summary>设置 SourceMemberConfig.get_SourceMember() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimSourceMemberConfig.AllInstances.SourceMemberSetMemberInfo">
            <summary>设置 SourceMemberConfig.set_SourceMember(MemberInfo value) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimThreadSafeList`1">
            <summary>AutoMapper.ThreadSafeList`1 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimThreadSafeList`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimThreadSafeList`1.#ctor(AutoMapper.ThreadSafeList{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimThreadSafeList`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimThreadSafeList`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimThreadSafeList`1.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimThreadSafeList`1.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimThreadSafeList`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.AddT0">
            <summary>设置 ThreadSafeList`1.Add(!0 propertyMap) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.Clear">
            <summary>设置 ThreadSafeList`1.Clear() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.Constructor">
            <summary>设置 ThreadSafeList`1.ThreadSafeList`1() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.Dispose">
            <summary>设置 ThreadSafeList`1.Dispose() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.DisposeBoolean">
            <summary>设置 ThreadSafeList`1.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.GetEnumeratorImpl">
            <summary>设置 ThreadSafeList`1.GetEnumeratorImpl() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.GetOrCreatePredicateOfT0FuncOfT0">
            <summary>设置 ThreadSafeList`1.GetOrCreate(Predicate`1&lt;!0&gt; predicate, Func`1&lt;!0&gt; creatorFunc) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.StaticConstructor">
            <summary>设置 ThreadSafeList`1.ThreadSafeList`1() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.SystemCollectionsGenericIEnumerableTGetEnumerator">
            <summary>设置 ThreadSafeList`1.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ThreadSafeList`1.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimThreadSafeList`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.AllInstances.AddT0">
            <summary>设置 ThreadSafeList`1.Add(!0 propertyMap) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.AllInstances.Clear">
            <summary>设置 ThreadSafeList`1.Clear() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.AllInstances.Dispose">
            <summary>设置 ThreadSafeList`1.Dispose() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.AllInstances.DisposeBoolean">
            <summary>设置 ThreadSafeList`1.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.AllInstances.GetEnumeratorImpl">
            <summary>设置 ThreadSafeList`1.GetEnumeratorImpl() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.AllInstances.GetOrCreatePredicateOfT0FuncOfT0">
            <summary>设置 ThreadSafeList`1.GetOrCreate(Predicate`1&lt;!0&gt; predicate, Func`1&lt;!0&gt; creatorFunc) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.AllInstances.SystemCollectionsGenericIEnumerableTGetEnumerator">
            <summary>设置 ThreadSafeList`1.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimThreadSafeList`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 ThreadSafeList`1.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimTypeConverter`2">
            <summary>AutoMapper.TypeConverter`2 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeConverter`2.#ctor(AutoMapper.TypeConverter{`0,`1})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeConverter`2.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeConverter`2.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeConverter`2.Bind(AutoMapper.ITypeConverter{`0,`1})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeConverter`2.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeConverter`2.Constructor">
            <summary>设置 TypeConverter`2.TypeConverter`2() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeConverter`2.ConvertResolutionContext">
            <summary>设置 TypeConverter`2.Convert(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimTypeConverter`2.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeConverter`2.AllInstances.ConvertResolutionContext">
            <summary>设置 TypeConverter`2.Convert(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimTypeInfo">
            <summary>AutoMapper.TypeInfo 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeInfo.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeInfo.#ctor(AutoMapper.TypeInfo)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeInfo.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeInfo.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.BuildPublicAccessorsIEnumerableOfMemberInfo">
            <summary>设置 TypeInfo.BuildPublicAccessors(IEnumerable`1&lt;MemberInfo&gt; allMembers) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.BuildPublicNoArgExtensionMethodsIEnumerableOfMethodInfo">
            <summary>设置 TypeInfo.BuildPublicNoArgExtensionMethods(IEnumerable`1&lt;MethodInfo&gt; sourceExtensionMethodSearch) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.BuildPublicNoArgMethods">
            <summary>设置 TypeInfo.BuildPublicNoArgMethods() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.BuildPublicReadAccessorsIEnumerableOfMemberInfo">
            <summary>设置 TypeInfo.BuildPublicReadAccessors(IEnumerable`1&lt;MemberInfo&gt; allMembers) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.ConstructorType">
            <summary>设置 TypeInfo.TypeInfo(Type type) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.ConstructorTypeIEnumerableOfMethodInfo">
            <summary>设置 TypeInfo.TypeInfo(Type type, IEnumerable`1&lt;MethodInfo&gt; sourceExtensionMethodSearch) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.GetAllPublicMembersFuncOfPropertyInfoBooleanBindingFlags">
            <summary>设置 TypeInfo.GetAllPublicMembers(Func`2&lt;PropertyInfo,Boolean&gt; propertyAvailableFor, BindingFlags bindingAttr) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.GetAllPublicReadableMembers">
            <summary>设置 TypeInfo.GetAllPublicReadableMembers() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.GetAllPublicWritableMembers">
            <summary>设置 TypeInfo.GetAllPublicWritableMembers() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.GetConstructors">
            <summary>设置 TypeInfo.GetConstructors() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.GetPublicNoArgExtensionMethods">
            <summary>设置 TypeInfo.GetPublicNoArgExtensionMethods() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.GetPublicNoArgMethods">
            <summary>设置 TypeInfo.GetPublicNoArgMethods() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.GetPublicReadAccessors">
            <summary>设置 TypeInfo.GetPublicReadAccessors() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.GetPublicWriteAccessors">
            <summary>设置 TypeInfo.GetPublicWriteAccessors() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.PropertyReadablePropertyInfo">
            <summary>设置 TypeInfo.PropertyReadable(PropertyInfo propertyInfo) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.PropertyWritablePropertyInfo">
            <summary>设置 TypeInfo.PropertyWritable(PropertyInfo propertyInfo) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.TypeGet">
            <summary>设置 TypeInfo.get_Type() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.TypeSetType">
            <summary>设置 TypeInfo.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo._BuildPublicAccessorsb__12PropertyInfo">
            <summary>设置 TypeInfo.&lt;BuildPublicAccessors&gt;b__12(PropertyInfo x) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo._BuildPublicAccessorsb__13IGroupingOfStringPropertyInfo">
            <summary>设置 TypeInfo.&lt;BuildPublicAccessors&gt;b__13(IGrouping`2&lt;String,PropertyInfo&gt; x) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo._BuildPublicAccessorsb__14PropertyInfo">
            <summary>设置 TypeInfo.&lt;BuildPublicAccessors&gt;b__14(PropertyInfo y) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo._BuildPublicAccessorsb__15PropertyInfo">
            <summary>设置 TypeInfo.&lt;BuildPublicAccessors&gt;b__15(PropertyInfo y) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo._BuildPublicAccessorsb__16PropertyInfo">
            <summary>设置 TypeInfo.&lt;BuildPublicAccessors&gt;b__16(PropertyInfo pi) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo._BuildPublicAccessorsb__17MemberInfo">
            <summary>设置 TypeInfo.&lt;BuildPublicAccessors&gt;b__17(MemberInfo x) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo._BuildPublicNoArgExtensionMethodsb__0MethodInfo">
            <summary>设置 TypeInfo.&lt;BuildPublicNoArgExtensionMethods&gt;b__0(MethodInfo method) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo._BuildPublicNoArgExtensionMethodsb__1Type">
            <summary>设置 TypeInfo.&lt;BuildPublicNoArgExtensionMethods&gt;b__1(Type t) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo._BuildPublicNoArgExtensionMethodsb__2MethodInfo">
            <summary>设置 TypeInfo.&lt;BuildPublicNoArgExtensionMethods&gt;b__2(MethodInfo method) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo._BuildPublicNoArgMethodsb__24MethodInfo">
            <summary>设置 TypeInfo.&lt;BuildPublicNoArgMethods&gt;b__24(MethodInfo m) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo._BuildPublicReadAccessorsb__cPropertyInfo">
            <summary>设置 TypeInfo.&lt;BuildPublicReadAccessors&gt;b__c(PropertyInfo x) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo._BuildPublicReadAccessorsb__dIGroupingOfStringPropertyInfo">
            <summary>设置 TypeInfo.&lt;BuildPublicReadAccessors&gt;b__d(IGrouping`2&lt;String,PropertyInfo&gt; x) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo._BuildPublicReadAccessorsb__eMemberInfo">
            <summary>设置 TypeInfo.&lt;BuildPublicReadAccessors&gt;b__e(MemberInfo x) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo._GetAllPublicMembersb__1eType">
            <summary>设置 TypeInfo.&lt;GetAllPublicMembers&gt;b__1e(Type x) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimTypeInfo.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.AllInstances.BuildPublicAccessorsIEnumerableOfMemberInfo">
            <summary>设置 TypeInfo.BuildPublicAccessors(IEnumerable`1&lt;MemberInfo&gt; allMembers) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.AllInstances.BuildPublicNoArgExtensionMethodsIEnumerableOfMethodInfo">
            <summary>设置 TypeInfo.BuildPublicNoArgExtensionMethods(IEnumerable`1&lt;MethodInfo&gt; sourceExtensionMethodSearch) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.AllInstances.BuildPublicNoArgMethods">
            <summary>设置 TypeInfo.BuildPublicNoArgMethods() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.AllInstances.BuildPublicReadAccessorsIEnumerableOfMemberInfo">
            <summary>设置 TypeInfo.BuildPublicReadAccessors(IEnumerable`1&lt;MemberInfo&gt; allMembers) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.AllInstances.GetAllPublicMembersFuncOfPropertyInfoBooleanBindingFlags">
            <summary>设置 TypeInfo.GetAllPublicMembers(Func`2&lt;PropertyInfo,Boolean&gt; propertyAvailableFor, BindingFlags bindingAttr) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.AllInstances.GetAllPublicReadableMembers">
            <summary>设置 TypeInfo.GetAllPublicReadableMembers() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.AllInstances.GetAllPublicWritableMembers">
            <summary>设置 TypeInfo.GetAllPublicWritableMembers() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.AllInstances.GetConstructors">
            <summary>设置 TypeInfo.GetConstructors() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.AllInstances.GetPublicNoArgExtensionMethods">
            <summary>设置 TypeInfo.GetPublicNoArgExtensionMethods() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.AllInstances.GetPublicNoArgMethods">
            <summary>设置 TypeInfo.GetPublicNoArgMethods() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.AllInstances.GetPublicReadAccessors">
            <summary>设置 TypeInfo.GetPublicReadAccessors() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.AllInstances.GetPublicWriteAccessors">
            <summary>设置 TypeInfo.GetPublicWriteAccessors() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.AllInstances.PropertyReadablePropertyInfo">
            <summary>设置 TypeInfo.PropertyReadable(PropertyInfo propertyInfo) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.AllInstances.PropertyWritablePropertyInfo">
            <summary>设置 TypeInfo.PropertyWritable(PropertyInfo propertyInfo) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.AllInstances.TypeGet">
            <summary>设置 TypeInfo.get_Type() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.AllInstances.TypeSetType">
            <summary>设置 TypeInfo.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeInfo.AllInstances._BuildPublicNoArgExtensionMethodsb__0MethodInfo">
            <summary>设置 TypeInfo.&lt;BuildPublicNoArgExtensionMethods&gt;b__0(MethodInfo method) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimTypeMap">
            <summary>AutoMapper.TypeMap 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeMap.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeMap.#ctor(AutoMapper.TypeMap)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeMap.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeMap.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AddAfterMapActionActionOfObjectObject">
            <summary>设置 TypeMap.AddAfterMapAction(Action`2&lt;Object,Object&gt; afterMap) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AddBeforeMapActionActionOfObjectObject">
            <summary>设置 TypeMap.AddBeforeMapAction(Action`2&lt;Object,Object&gt; beforeMap) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AddConstructorMapConstructorInfoIEnumerableOfConstructorParameterMap">
            <summary>设置 TypeMap.AddConstructorMap(ConstructorInfo constructorInfo, IEnumerable`1&lt;ConstructorParameterMap&gt; parameters) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AddInheritedMapPropertyMap">
            <summary>设置 TypeMap.AddInheritedMap(PropertyMap propertyMap) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AddInheritedPropertyMapPropertyMap">
            <summary>设置 TypeMap.AddInheritedPropertyMap(PropertyMap mappedProperty) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AddPropertyMapIMemberAccessorIEnumerableOfIValueResolver">
            <summary>设置 TypeMap.AddPropertyMap(IMemberAccessor destProperty, IEnumerable`1&lt;IValueResolver&gt; resolvers) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AddPropertyMapPropertyMap">
            <summary>设置 TypeMap.AddPropertyMap(PropertyMap propertyMap) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AfterMapGet">
            <summary>设置 TypeMap.get_AfterMap() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.BeforeMapGet">
            <summary>设置 TypeMap.get_BeforeMap() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.ConfiguredMemberListGet">
            <summary>设置 TypeMap.get_ConfiguredMemberList() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.ConfiguredMemberListSetMemberList">
            <summary>设置 TypeMap.set_ConfiguredMemberList(MemberList value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.ConstructDestinationUsingServiceLocatorGet">
            <summary>设置 TypeMap.get_ConstructDestinationUsingServiceLocator() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.ConstructDestinationUsingServiceLocatorSetBoolean">
            <summary>设置 TypeMap.set_ConstructDestinationUsingServiceLocator(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.ConstructorMapGet">
            <summary>设置 TypeMap.get_ConstructorMap() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.ConstructorTypeInfoTypeInfoMemberList">
            <summary>设置 TypeMap.TypeMap(TypeInfo sourceType, TypeInfo destinationType, MemberList memberList) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.CustomMapperGet">
            <summary>设置 TypeMap.get_CustomMapper() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.CustomMapperSetFuncOfResolutionContextObject">
            <summary>设置 TypeMap.set_CustomMapper(Func`2&lt;ResolutionContext,Object&gt; value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.DestinationCtorGet">
            <summary>设置 TypeMap.get_DestinationCtor() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.DestinationCtorSetFuncOfResolutionContextObject">
            <summary>设置 TypeMap.set_DestinationCtor(Func`2&lt;ResolutionContext,Object&gt; value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.DestinationTypeGet">
            <summary>设置 TypeMap.get_DestinationType() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.DestinationTypeOverrideGet">
            <summary>设置 TypeMap.get_DestinationTypeOverride() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.DestinationTypeOverrideSetType">
            <summary>设置 TypeMap.set_DestinationTypeOverride(Type value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.EqualsObject">
            <summary>设置 TypeMap.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.EqualsTypeMap">
            <summary>设置 TypeMap.Equals(TypeMap other) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.FindOrCreatePropertyMapForIMemberAccessor">
            <summary>设置 TypeMap.FindOrCreatePropertyMapFor(IMemberAccessor destinationProperty) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.FindOrCreateSourceMemberConfigForMemberInfo">
            <summary>设置 TypeMap.FindOrCreateSourceMemberConfigFor(MemberInfo sourceMember) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.GetCustomPropertyMaps">
            <summary>设置 TypeMap.GetCustomPropertyMaps() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.GetDerivedTypeForType">
            <summary>设置 TypeMap.GetDerivedTypeFor(Type derivedSourceType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.GetExistingPropertyMapForIMemberAccessor">
            <summary>设置 TypeMap.GetExistingPropertyMapFor(IMemberAccessor destinationProperty) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.GetHashCode">
            <summary>设置 TypeMap.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.GetPropertyMaps">
            <summary>设置 TypeMap.GetPropertyMaps() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.GetUnmappedPropertyNames">
            <summary>设置 TypeMap.GetUnmappedPropertyNames() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.HasDerivedTypesToInclude">
            <summary>设置 TypeMap.HasDerivedTypesToInclude() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.IgnorePropertiesStartingWithGet">
            <summary>设置 TypeMap.get_IgnorePropertiesStartingWith() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.IgnorePropertiesStartingWithSetListOfString">
            <summary>设置 TypeMap.set_IgnorePropertiesStartingWith(List`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.IncludeDerivedTypesTypeType">
            <summary>设置 TypeMap.IncludeDerivedTypes(Type derivedSourceType, Type derivedDestinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.IncludedDerivedTypesGet">
            <summary>设置 TypeMap.get_IncludedDerivedTypes() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.InheritTypesTypeMap">
            <summary>设置 TypeMap.InheritTypes(TypeMap inheritedTypeMap) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.MaxDepthGet">
            <summary>设置 TypeMap.get_MaxDepth() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.MaxDepthSetInt32">
            <summary>设置 TypeMap.set_MaxDepth(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.PassesDepthCheckResolutionContextInt32">
            <summary>设置 TypeMap.PassesDepthCheck(ResolutionContext context, Int32 maxDepth) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.ProfileGet">
            <summary>设置 TypeMap.get_Profile() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.ProfileSetString">
            <summary>设置 TypeMap.set_Profile(String value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.Seal">
            <summary>设置 TypeMap.Seal() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.SetConditionFuncOfResolutionContextBoolean">
            <summary>设置 TypeMap.SetCondition(Func`2&lt;ResolutionContext,Boolean&gt; condition) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.ShouldAssignValueResolutionContext">
            <summary>设置 TypeMap.ShouldAssignValue(ResolutionContext resolutionContext) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.SourceTypeGet">
            <summary>设置 TypeMap.get_SourceType() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.SubstitutionGet">
            <summary>设置 TypeMap.get_Substitution() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.SubstitutionSetFuncOfObjectObject">
            <summary>设置 TypeMap.set_Substitution(Func`2&lt;Object,Object&gt; value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.TypeHasBeenIncludedTypeType">
            <summary>设置 TypeMap.TypeHasBeenIncluded(Type derivedSourceType, Type derivedDestinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.UseCustomMapperFuncOfResolutionContextObject">
            <summary>设置 TypeMap.UseCustomMapper(Func`2&lt;ResolutionContext,Object&gt; customMapper) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap._GetUnmappedPropertyNamesb__10MemberInfo">
            <summary>设置 TypeMap.&lt;GetUnmappedPropertyNames&gt;b__10(MemberInfo p) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap._GetUnmappedPropertyNamesb__11String">
            <summary>设置 TypeMap.&lt;GetUnmappedPropertyNames&gt;b__11(String memberName) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap._GetUnmappedPropertyNamesb__5PropertyMap">
            <summary>设置 TypeMap.&lt;GetUnmappedPropertyNames&gt;b__5(PropertyMap pm) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap._GetUnmappedPropertyNamesb__6PropertyMap">
            <summary>设置 TypeMap.&lt;GetUnmappedPropertyNames&gt;b__6(PropertyMap pm) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap._GetUnmappedPropertyNamesb__7PropertyMap">
            <summary>设置 TypeMap.&lt;GetUnmappedPropertyNames&gt;b__7(PropertyMap pm) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap._GetUnmappedPropertyNamesb__8PropertyMap">
            <summary>设置 TypeMap.&lt;GetUnmappedPropertyNames&gt;b__8(PropertyMap pm) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap._GetUnmappedPropertyNamesb__9MemberInfo">
            <summary>设置 TypeMap.&lt;GetUnmappedPropertyNames&gt;b__9(MemberInfo p) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap._GetUnmappedPropertyNamesb__aPropertyMap">
            <summary>设置 TypeMap.&lt;GetUnmappedPropertyNames&gt;b__a(PropertyMap pm) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap._GetUnmappedPropertyNamesb__bPropertyMap">
            <summary>设置 TypeMap.&lt;GetUnmappedPropertyNames&gt;b__b(PropertyMap pm) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap._GetUnmappedPropertyNamesb__cPropertyMap">
            <summary>设置 TypeMap.&lt;GetUnmappedPropertyNames&gt;b__c(PropertyMap pm) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap._GetUnmappedPropertyNamesb__dPropertyMap">
            <summary>设置 TypeMap.&lt;GetUnmappedPropertyNames&gt;b__d(PropertyMap pm) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap._GetUnmappedPropertyNamesb__eSourceMemberConfig">
            <summary>设置 TypeMap.&lt;GetUnmappedPropertyNames&gt;b__e(SourceMemberConfig smc) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap._GetUnmappedPropertyNamesb__fSourceMemberConfig">
            <summary>设置 TypeMap.&lt;GetUnmappedPropertyNames&gt;b__f(SourceMemberConfig pm) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap._InheritTypesb__29TypePair">
            <summary>设置 TypeMap.&lt;InheritTypes&gt;b__29(TypePair includedDerivedType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap._Sealb__21PropertyMap">
            <summary>设置 TypeMap.&lt;Seal&gt;b__21(PropertyMap map) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap._Sealb__22PropertyMap">
            <summary>设置 TypeMap.&lt;Seal&gt;b__22(PropertyMap pm) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap._get_AfterMapb__1ObjectObject">
            <summary>设置 TypeMap.&lt;get_AfterMap&gt;b__1(Object src, Object dest) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap._get_BeforeMapb__0ObjectObject">
            <summary>设置 TypeMap.&lt;get_BeforeMap&gt;b__0(Object src, Object dest) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimTypeMap.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.AddAfterMapActionActionOfObjectObject">
            <summary>设置 TypeMap.AddAfterMapAction(Action`2&lt;Object,Object&gt; afterMap) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.AddBeforeMapActionActionOfObjectObject">
            <summary>设置 TypeMap.AddBeforeMapAction(Action`2&lt;Object,Object&gt; beforeMap) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.AddConstructorMapConstructorInfoIEnumerableOfConstructorParameterMap">
            <summary>设置 TypeMap.AddConstructorMap(ConstructorInfo constructorInfo, IEnumerable`1&lt;ConstructorParameterMap&gt; parameters) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.AddInheritedMapPropertyMap">
            <summary>设置 TypeMap.AddInheritedMap(PropertyMap propertyMap) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.AddInheritedPropertyMapPropertyMap">
            <summary>设置 TypeMap.AddInheritedPropertyMap(PropertyMap mappedProperty) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.AddPropertyMapIMemberAccessorIEnumerableOfIValueResolver">
            <summary>设置 TypeMap.AddPropertyMap(IMemberAccessor destProperty, IEnumerable`1&lt;IValueResolver&gt; resolvers) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.AddPropertyMapPropertyMap">
            <summary>设置 TypeMap.AddPropertyMap(PropertyMap propertyMap) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.AfterMapGet">
            <summary>设置 TypeMap.get_AfterMap() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.BeforeMapGet">
            <summary>设置 TypeMap.get_BeforeMap() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.ConfiguredMemberListGet">
            <summary>设置 TypeMap.get_ConfiguredMemberList() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.ConfiguredMemberListSetMemberList">
            <summary>设置 TypeMap.set_ConfiguredMemberList(MemberList value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.ConstructDestinationUsingServiceLocatorGet">
            <summary>设置 TypeMap.get_ConstructDestinationUsingServiceLocator() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.ConstructDestinationUsingServiceLocatorSetBoolean">
            <summary>设置 TypeMap.set_ConstructDestinationUsingServiceLocator(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.ConstructorMapGet">
            <summary>设置 TypeMap.get_ConstructorMap() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.CustomMapperGet">
            <summary>设置 TypeMap.get_CustomMapper() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.CustomMapperSetFuncOfResolutionContextObject">
            <summary>设置 TypeMap.set_CustomMapper(Func`2&lt;ResolutionContext,Object&gt; value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.DestinationCtorGet">
            <summary>设置 TypeMap.get_DestinationCtor() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.DestinationCtorSetFuncOfResolutionContextObject">
            <summary>设置 TypeMap.set_DestinationCtor(Func`2&lt;ResolutionContext,Object&gt; value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.DestinationTypeGet">
            <summary>设置 TypeMap.get_DestinationType() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.DestinationTypeOverrideGet">
            <summary>设置 TypeMap.get_DestinationTypeOverride() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.DestinationTypeOverrideSetType">
            <summary>设置 TypeMap.set_DestinationTypeOverride(Type value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.EqualsObject">
            <summary>设置 TypeMap.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.EqualsTypeMap">
            <summary>设置 TypeMap.Equals(TypeMap other) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.FindOrCreatePropertyMapForIMemberAccessor">
            <summary>设置 TypeMap.FindOrCreatePropertyMapFor(IMemberAccessor destinationProperty) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.FindOrCreateSourceMemberConfigForMemberInfo">
            <summary>设置 TypeMap.FindOrCreateSourceMemberConfigFor(MemberInfo sourceMember) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.GetCustomPropertyMaps">
            <summary>设置 TypeMap.GetCustomPropertyMaps() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.GetDerivedTypeForType">
            <summary>设置 TypeMap.GetDerivedTypeFor(Type derivedSourceType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.GetExistingPropertyMapForIMemberAccessor">
            <summary>设置 TypeMap.GetExistingPropertyMapFor(IMemberAccessor destinationProperty) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.GetHashCode01">
            <summary>设置 TypeMap.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.GetPropertyMaps">
            <summary>设置 TypeMap.GetPropertyMaps() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.GetUnmappedPropertyNames">
            <summary>设置 TypeMap.GetUnmappedPropertyNames() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.HasDerivedTypesToInclude">
            <summary>设置 TypeMap.HasDerivedTypesToInclude() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.IgnorePropertiesStartingWithGet">
            <summary>设置 TypeMap.get_IgnorePropertiesStartingWith() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.IgnorePropertiesStartingWithSetListOfString">
            <summary>设置 TypeMap.set_IgnorePropertiesStartingWith(List`1&lt;String&gt; value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.IncludeDerivedTypesTypeType">
            <summary>设置 TypeMap.IncludeDerivedTypes(Type derivedSourceType, Type derivedDestinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.IncludedDerivedTypesGet">
            <summary>设置 TypeMap.get_IncludedDerivedTypes() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.InheritTypesTypeMap">
            <summary>设置 TypeMap.InheritTypes(TypeMap inheritedTypeMap) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.MaxDepthGet">
            <summary>设置 TypeMap.get_MaxDepth() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.MaxDepthSetInt32">
            <summary>设置 TypeMap.set_MaxDepth(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.ProfileGet">
            <summary>设置 TypeMap.get_Profile() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.ProfileSetString">
            <summary>设置 TypeMap.set_Profile(String value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.Seal">
            <summary>设置 TypeMap.Seal() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.SetConditionFuncOfResolutionContextBoolean">
            <summary>设置 TypeMap.SetCondition(Func`2&lt;ResolutionContext,Boolean&gt; condition) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.ShouldAssignValueResolutionContext">
            <summary>设置 TypeMap.ShouldAssignValue(ResolutionContext resolutionContext) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.SourceTypeGet">
            <summary>设置 TypeMap.get_SourceType() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.SubstitutionGet">
            <summary>设置 TypeMap.get_Substitution() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.SubstitutionSetFuncOfObjectObject">
            <summary>设置 TypeMap.set_Substitution(Func`2&lt;Object,Object&gt; value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.TypeHasBeenIncludedTypeType">
            <summary>设置 TypeMap.TypeHasBeenIncluded(Type derivedSourceType, Type derivedDestinationType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances.UseCustomMapperFuncOfResolutionContextObject">
            <summary>设置 TypeMap.UseCustomMapper(Func`2&lt;ResolutionContext,Object&gt; customMapper) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances._GetUnmappedPropertyNamesb__11String">
            <summary>设置 TypeMap.&lt;GetUnmappedPropertyNames&gt;b__11(String memberName) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances._InheritTypesb__29TypePair">
            <summary>设置 TypeMap.&lt;InheritTypes&gt;b__29(TypePair includedDerivedType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances._get_AfterMapb__1ObjectObject">
            <summary>设置 TypeMap.&lt;get_AfterMap&gt;b__1(Object src, Object dest) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMap.AllInstances._get_BeforeMapb__0ObjectObject">
            <summary>设置 TypeMap.&lt;get_BeforeMap&gt;b__0(Object src, Object dest) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimTypeMapCreatedEventArgs">
            <summary>AutoMapper.TypeMapCreatedEventArgs 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeMapCreatedEventArgs.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeMapCreatedEventArgs.#ctor(AutoMapper.TypeMapCreatedEventArgs)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeMapCreatedEventArgs.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeMapCreatedEventArgs.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapCreatedEventArgs.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapCreatedEventArgs.ConstructorTypeMap">
            <summary>设置 TypeMapCreatedEventArgs.TypeMapCreatedEventArgs(TypeMap typeMap) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapCreatedEventArgs.TypeMapGet">
            <summary>设置 TypeMapCreatedEventArgs.get_TypeMap() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapCreatedEventArgs.TypeMapSetTypeMap">
            <summary>设置 TypeMapCreatedEventArgs.set_TypeMap(TypeMap value) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimTypeMapCreatedEventArgs.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapCreatedEventArgs.AllInstances.TypeMapGet">
            <summary>设置 TypeMapCreatedEventArgs.get_TypeMap() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapCreatedEventArgs.AllInstances.TypeMapSetTypeMap">
            <summary>设置 TypeMapCreatedEventArgs.set_TypeMap(TypeMap value) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimTypeMapFactory">
            <summary>AutoMapper.TypeMapFactory 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeMapFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeMapFactory.#ctor(AutoMapper.TypeMapFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeMapFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeMapFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimTypeMapFactory.Bind(AutoMapper.ITypeMapFactory)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapFactory.Constructor">
            <summary>设置 TypeMapFactory.TypeMapFactory() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapFactory.CreateTypeMapTypeTypeIMappingOptionsMemberList">
            <summary>设置 TypeMapFactory.CreateTypeMap(Type sourceType, Type destinationType, IMappingOptions options, MemberList memberList) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapFactory.FindTypeMemberIEnumerableOfMemberInfoIEnumerableOfMethodInfoIEnumerableOfMethodInfoStringIMappingOptions">
            <summary>设置 TypeMapFactory.FindTypeMember(IEnumerable`1&lt;MemberInfo&gt; modelProperties, IEnumerable`1&lt;MethodInfo&gt; getMethods, IEnumerable`1&lt;MethodInfo&gt; getExtensionMethods, String nameToSearch, IMappingOptions mappingOptions) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapFactory.GetTypeInfoTypeIEnumerableOfMethodInfo">
            <summary>设置 TypeMapFactory.GetTypeInfo(Type type, IEnumerable`1&lt;MethodInfo&gt; extensionMethodsToSearch) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapFactory.MapDestinationCtorToSourceTypeMapConstructorInfoTypeInfoIMappingOptions">
            <summary>设置 TypeMapFactory.MapDestinationCtorToSource(TypeMap typeMap, ConstructorInfo destCtor, TypeInfo sourceTypeInfo, IMappingOptions options) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapFactory.MapDestinationPropertyToSourceLinkedListOfMemberInfoTypeInfoStringIMappingOptions">
            <summary>设置 TypeMapFactory.MapDestinationPropertyToSource(LinkedList`1&lt;MemberInfo&gt; resolvers, TypeInfo sourceType, String nameToSearch, IMappingOptions mappingOptions) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapFactory.NameMatchesStringStringIMappingOptions">
            <summary>设置 TypeMapFactory.NameMatches(String memberName, String nameToMatch, IMappingOptions mappingOptions) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapFactory.PossibleNamesStringIEnumerableOfAliasedMemberIEnumerableOfStringIEnumerableOfString">
            <summary>设置 TypeMapFactory.PossibleNames(String memberName, IEnumerable`1&lt;AliasedMember&gt; aliases, IEnumerable`1&lt;String&gt; prefixes, IEnumerable`1&lt;String&gt; postfixes) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapFactory._CreateTypeMapb__0MemberInfo">
            <summary>设置 TypeMapFactory.&lt;CreateTypeMap&gt;b__0(MemberInfo mi) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapFactory._CreateTypeMapb__1ConstructorInfo">
            <summary>设置 TypeMapFactory.&lt;CreateTypeMap&gt;b__1(ConstructorInfo ci) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapFactory._MapDestinationCtorToSourceb__4MemberInfo">
            <summary>设置 TypeMapFactory.&lt;MapDestinationCtorToSource&gt;b__4(MemberInfo mi) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapFactory._MapDestinationPropertyToSourceb__9Match">
            <summary>设置 TypeMapFactory.&lt;MapDestinationPropertyToSource&gt;b__9(Match m) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimTypeMapFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapFactory.AllInstances.CreateTypeMapTypeTypeIMappingOptionsMemberList">
            <summary>设置 TypeMapFactory.CreateTypeMap(Type sourceType, Type destinationType, IMappingOptions options, MemberList memberList) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapFactory.AllInstances.GetTypeInfoTypeIEnumerableOfMethodInfo">
            <summary>设置 TypeMapFactory.GetTypeInfo(Type type, IEnumerable`1&lt;MethodInfo&gt; extensionMethodsToSearch) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapFactory.AllInstances.MapDestinationCtorToSourceTypeMapConstructorInfoTypeInfoIMappingOptions">
            <summary>设置 TypeMapFactory.MapDestinationCtorToSource(TypeMap typeMap, ConstructorInfo destCtor, TypeInfo sourceTypeInfo, IMappingOptions options) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimTypeMapFactory.AllInstances.MapDestinationPropertyToSourceLinkedListOfMemberInfoTypeInfoStringIMappingOptions">
            <summary>设置 TypeMapFactory.MapDestinationPropertyToSource(LinkedList`1&lt;MemberInfo&gt; resolvers, TypeInfo sourceType, String nameToSearch, IMappingOptions mappingOptions) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimValueFormatter`1">
            <summary>AutoMapper.ValueFormatter`1 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimValueFormatter`1.#ctor(AutoMapper.ValueFormatter{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimValueFormatter`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimValueFormatter`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimValueFormatter`1.Bind(AutoMapper.IValueFormatter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimValueFormatter`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimValueFormatter`1.Constructor">
            <summary>设置 ValueFormatter`1.ValueFormatter`1() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimValueFormatter`1.FormatValueResolutionContext">
            <summary>设置 ValueFormatter`1.FormatValue(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimValueFormatter`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimValueFormatter`1.AllInstances.FormatValueResolutionContext">
            <summary>设置 ValueFormatter`1.FormatValue(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimValueResolver`2">
            <summary>AutoMapper.ValueResolver`2 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimValueResolver`2.#ctor(AutoMapper.ValueResolver{`0,`1})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimValueResolver`2.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimValueResolver`2.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Fakes.ShimValueResolver`2.Bind(AutoMapper.IValueResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimValueResolver`2.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimValueResolver`2.Constructor">
            <summary>设置 ValueResolver`2.ValueResolver`2() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimValueResolver`2.ResolveResolutionResult">
            <summary>设置 ValueResolver`2.Resolve(ResolutionResult source) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.ShimValueResolver`2.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Fakes.ShimValueResolver`2.AllInstances.ResolveResolutionResult">
            <summary>设置 ValueResolver`2.Resolve(ResolutionResult source) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubAliasedMember">
            <summary>AutoMapper.AliasedMember 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAliasedMember.#ctor(System.String,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAliasedMember.Equals(System.Object)">
            <summary>设置 AliasedMember.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAliasedMember.EqualsObject">
            <summary>设置 AliasedMember.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAliasedMember.GetHashCode">
            <summary>设置 AliasedMember.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAliasedMember.GetHashCode01">
            <summary>设置 AliasedMember.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAliasedMember.InitializeStub">
            <summary>初始化 type StubAliasedMember 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAliasedMember.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAliasedMember.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAliasedMember.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubAutoMapperConfigurationException">
            <summary>AutoMapper.AutoMapperConfigurationException 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperConfigurationException.#ctor(AutoMapper.ResolutionContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperConfigurationException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperConfigurationException.#ctor(AutoMapper.AutoMapperConfigurationException.TypeMapConfigErrors[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperConfigurationException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperConfigurationException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubAutoMapperConfigurationException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperConfigurationException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubAutoMapperConfigurationException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperConfigurationException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperConfigurationException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperConfigurationException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperConfigurationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperConfigurationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperConfigurationException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperConfigurationException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperConfigurationException.InitializeStub">
            <summary>初始化 type StubAutoMapperConfigurationException 的新实例</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperConfigurationException.MessageGet">
            <summary>设置 AutoMapperConfigurationException.get_Message() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperConfigurationException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperConfigurationException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperConfigurationException.StackTraceGet">
            <summary>设置 AutoMapperConfigurationException.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperConfigurationException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperConfigurationException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAutoMapperConfigurationException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAutoMapperConfigurationException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAutoMapperConfigurationException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAutoMapperConfigurationException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAutoMapperConfigurationException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAutoMapperConfigurationException.Message">
            <summary>设置 AutoMapperConfigurationException.get_Message() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAutoMapperConfigurationException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAutoMapperConfigurationException.StackTrace">
            <summary>设置 AutoMapperConfigurationException.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubAutoMapperMappingException">
            <summary>AutoMapper.AutoMapperMappingException 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperMappingException.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperMappingException.#ctor(AutoMapper.ResolutionContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperMappingException.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperMappingException.#ctor(AutoMapper.ResolutionContext,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperMappingException.#ctor(AutoMapper.ResolutionContext,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperMappingException.#ctor(System.String,System.Exception)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperMappingException.AttachBackingFieldToHelpLink">
            <summary>附加委托以将 StubAutoMapperMappingException.HelpLink 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperMappingException.AttachBackingFieldToSource">
            <summary>附加委托以将 StubAutoMapperMappingException.Source 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperMappingException.DataGet">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperMappingException.GetBaseException">
            <summary>设置 Exception.GetBaseException() 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperMappingException.GetBaseException01">
            <summary>设置 Exception.GetBaseException() 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperMappingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperMappingException.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Exception.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperMappingException.HelpLinkGet">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperMappingException.HelpLinkSetString">
            <summary>设置 Exception.set_HelpLink(String value) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperMappingException.InitializeStub">
            <summary>初始化 type StubAutoMapperMappingException 的新实例</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperMappingException.MessageGet">
            <summary>设置 AutoMapperMappingException.get_Message() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperMappingException.SourceGet">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperMappingException.SourceSetString">
            <summary>设置 Exception.set_Source(String value) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperMappingException.StackTraceGet">
            <summary>设置 AutoMapperMappingException.get_StackTrace() 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubAutoMapperMappingException.ToString">
            <summary>设置 Exception.ToString() 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubAutoMapperMappingException.ToString01">
            <summary>设置 Exception.ToString() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAutoMapperMappingException.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAutoMapperMappingException.Data">
            <summary>设置 Exception.get_Data() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAutoMapperMappingException.HelpLink">
            <summary>设置 Exception.get_HelpLink() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAutoMapperMappingException.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAutoMapperMappingException.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAutoMapperMappingException.Message">
            <summary>设置 AutoMapperMappingException.get_Message() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAutoMapperMappingException.Source">
            <summary>设置 Exception.get_Source() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubAutoMapperMappingException.StackTrace">
            <summary>设置 AutoMapperMappingException.get_StackTrace() 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubConfigurationStore">
            <summary>AutoMapper.ConfigurationStore 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubConfigurationStore.#ctor(AutoMapper.ITypeMapFactory,System.Collections.Generic.IEnumerable{AutoMapper.IObjectMapper})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubConfigurationStore.InitializeStub">
            <summary>初始化 type StubConfigurationStore 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubConfigurationStore.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubConfigurationStore.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubConfigurationStore.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubConstructorMap">
            <summary>AutoMapper.ConstructorMap 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubConstructorMap.#ctor(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{AutoMapper.ConstructorParameterMap})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubConstructorMap.InitializeStub">
            <summary>初始化 type StubConstructorMap 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubConstructorMap.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubConstructorMap.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubConstructorMap.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubConstructorParameterMap">
            <summary>AutoMapper.ConstructorParameterMap 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubConstructorParameterMap.#ctor(System.Reflection.ParameterInfo,AutoMapper.IMemberGetter[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubConstructorParameterMap.InitializeStub">
            <summary>初始化 type StubConstructorParameterMap 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubConstructorParameterMap.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubConstructorParameterMap.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubConstructorParameterMap.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubDefaultResolver">
            <summary>AutoMapper.DefaultResolver 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubDefaultResolver.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubDefaultResolver.InitializeStub">
            <summary>初始化 type StubDefaultResolver 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubDefaultResolver.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubDefaultResolver.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubDefaultResolver.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubDeferredInstantiatedConverter">
            <summary>AutoMapper.DeferredInstantiatedConverter 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubDeferredInstantiatedConverter.#ctor(System.Type,System.Func{AutoMapper.ResolutionContext,System.Object})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubDeferredInstantiatedConverter.InitializeStub">
            <summary>初始化 type StubDeferredInstantiatedConverter 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubDeferredInstantiatedConverter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubDeferredInstantiatedConverter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubDeferredInstantiatedConverter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubDeferredInstantiatedConverter`2">
            <summary>AutoMapper.DeferredInstantiatedConverter`2 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubDeferredInstantiatedConverter`2.#ctor(System.Func{AutoMapper.ResolutionContext,AutoMapper.ITypeConverter{`0,`1}})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubDeferredInstantiatedConverter`2.InitializeStub">
            <summary>初始化 type StubDeferredInstantiatedConverter 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubDeferredInstantiatedConverter`2.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubDeferredInstantiatedConverter`2.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubDeferredInstantiatedConverter`2.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubDeferredInstantiatedFormatter">
            <summary>AutoMapper.DeferredInstantiatedFormatter 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubDeferredInstantiatedFormatter.#ctor(System.Func{AutoMapper.ResolutionContext,AutoMapper.IValueFormatter})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubDeferredInstantiatedFormatter.InitializeStub">
            <summary>初始化 type StubDeferredInstantiatedFormatter 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubDeferredInstantiatedFormatter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubDeferredInstantiatedFormatter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubDeferredInstantiatedFormatter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubDeferredInstantiatedResolver">
            <summary>AutoMapper.DeferredInstantiatedResolver 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubDeferredInstantiatedResolver.#ctor(System.Func{AutoMapper.ResolutionContext,AutoMapper.IValueResolver})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubDeferredInstantiatedResolver.InitializeStub">
            <summary>初始化 type StubDeferredInstantiatedResolver 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubDeferredInstantiatedResolver.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubDeferredInstantiatedResolver.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubDeferredInstantiatedResolver.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubDelegateBasedResolver`1">
            <summary>AutoMapper.DelegateBasedResolver`1 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubDelegateBasedResolver`1.#ctor(System.Func{AutoMapper.ResolutionResult,System.Object})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubDelegateBasedResolver`1.InitializeStub">
            <summary>初始化 type StubDelegateBasedResolver 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubDelegateBasedResolver`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubDelegateBasedResolver`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubDelegateBasedResolver`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubDelegateBasedResolver`2">
            <summary>AutoMapper.DelegateBasedResolver`2 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubDelegateBasedResolver`2.#ctor(System.Func{`0,`1})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubDelegateBasedResolver`2.InitializeStub">
            <summary>初始化 type StubDelegateBasedResolver 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubDelegateBasedResolver`2.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubDelegateBasedResolver`2.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubDelegateBasedResolver`2.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubDelegateFactory">
            <summary>AutoMapper.DelegateFactory 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubDelegateFactory.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubDelegateFactory.CreateSet(System.Reflection.FieldInfo)">
            <summary>设置 DelegateFactory.CreateSet(FieldInfo field) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubDelegateFactory.CreateSet(System.Reflection.PropertyInfo)">
            <summary>设置 DelegateFactory.CreateSet(PropertyInfo property) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubDelegateFactory.CreateSetFieldInfo">
            <summary>设置 DelegateFactory.CreateSet(FieldInfo field) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubDelegateFactory.CreateSetPropertyInfo">
            <summary>设置 DelegateFactory.CreateSet(PropertyInfo property) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubDelegateFactory.InitializeStub">
            <summary>初始化 type StubDelegateFactory 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubDelegateFactory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubDelegateFactory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubDelegateFactory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubExpressionValueFormatter">
            <summary>AutoMapper.ExpressionValueFormatter 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubExpressionValueFormatter.#ctor(System.Func{AutoMapper.ResolutionContext,System.String})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubExpressionValueFormatter.InitializeStub">
            <summary>初始化 type StubExpressionValueFormatter 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubExpressionValueFormatter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubExpressionValueFormatter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubExpressionValueFormatter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubFormatterCtorExpression">
            <summary>AutoMapper.FormatterCtorExpression 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubFormatterCtorExpression.#ctor(System.Type,AutoMapper.IFormatterCtorConfigurator)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubFormatterCtorExpression.InitializeStub">
            <summary>初始化 type StubFormatterCtorExpression 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubFormatterCtorExpression.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubFormatterCtorExpression.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubFormatterCtorExpression.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubFormatterCtorExpression`1">
            <summary>AutoMapper.FormatterCtorExpression`1 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubFormatterCtorExpression`1.#ctor(AutoMapper.IFormatterCtorConfigurator)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubFormatterCtorExpression`1.InitializeStub">
            <summary>初始化 type StubFormatterCtorExpression 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubFormatterCtorExpression`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubFormatterCtorExpression`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubFormatterCtorExpression`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubFormatterExpression">
            <summary>AutoMapper.FormatterExpression 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubFormatterExpression.#ctor(System.Func{System.Type,AutoMapper.IValueFormatter})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubFormatterExpression.InitializeStub">
            <summary>初始化 type StubFormatterExpression 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubFormatterExpression.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubFormatterExpression.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubFormatterExpression.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIConfiguration">
            <summary>AutoMapper.IConfiguration 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.#ctor">
            <summary>初始化 type StubIConfiguration 的新实例</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.AddFormatExpressionFuncOfResolutionContextString">
            <summary>设置 IFormatterExpression.AddFormatExpression(Func`2&lt;ResolutionContext,String&gt; formatExpression) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.AddFormatterIValueFormatter">
            <summary>设置 IFormatterExpression.AddFormatter(IValueFormatter formatter) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.AddFormatterOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IFormatterCtorExpression{``0}})">
            <summary>设置 AddFormatter() 的存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.AddFormatterType">
            <summary>设置 IFormatterExpression.AddFormatter(Type valueFormatterType) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.AddGlobalIgnoreString">
            <summary>设置 IProfileExpression.AddGlobalIgnore(String propertyNameStartingWith) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.AddProfileOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>设置 AddProfile() 的存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.AddProfileProfile">
            <summary>设置 IConfiguration.AddProfile(Profile profile) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.AliasesGet">
            <summary>设置 IMappingOptions.get_Aliases() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.AllowNullCollectionsGet">
            <summary>设置 IProfileExpression.get_AllowNullCollections() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.AllowNullCollectionsSetBoolean">
            <summary>设置 IProfileExpression.set_AllowNullCollections(Boolean value) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.AllowNullDestinationValuesGet">
            <summary>设置 IProfileExpression.get_AllowNullDestinationValues() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.AllowNullDestinationValuesSetBoolean">
            <summary>设置 IProfileExpression.set_AllowNullDestinationValues(Boolean value) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.AttachBackingFieldToAllowNullCollections">
            <summary>附加委托以将 StubIConfiguration.AllowNullCollections 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.AttachBackingFieldToAllowNullDestinationValues">
            <summary>附加委托以将 StubIConfiguration.AllowNullDestinationValues 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.AttachBackingFieldToDestinationMemberNamingConvention">
            <summary>附加委托以将 StubIConfiguration.DestinationMemberNamingConvention 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.AttachBackingFieldToSourceMemberNamingConvention">
            <summary>附加委托以将 StubIConfiguration.SourceMemberNamingConvention 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IConfiguration#AddProfile``1">
            <summary>设置 IConfiguration.AddProfile() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IConfiguration#AddProfile(AutoMapper.Profile)">
            <summary>设置 IConfiguration.AddProfile(Profile profile) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IConfiguration#ConstructServicesUsing(System.Func{System.Type,System.Object})">
            <summary>设置 IConfiguration.ConstructServicesUsing(Func`2&lt;Type,Object&gt; constructor) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IConfiguration#CreateProfile(System.String,System.Action{AutoMapper.IProfileExpression})">
            <summary>设置 IConfiguration.CreateProfile(String profileName, Action`1&lt;IProfileExpression&gt; profileConfiguration) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IConfiguration#CreateProfile(System.String)">
            <summary>设置 IConfiguration.CreateProfile(String profileName) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IConfiguration#DisableConstructorMapping">
            <summary>设置 IConfiguration.DisableConstructorMapping() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IConfiguration#EnableYieldReturnForDataReaderMapper">
            <summary>设置 IConfiguration.EnableYieldReturnForDataReaderMapper() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IConfiguration#Seal">
            <summary>设置 IConfiguration.Seal() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IFormatterExpression#AddFormatExpression(System.Func{AutoMapper.ResolutionContext,System.String})">
            <summary>设置 IFormatterExpression.AddFormatExpression(Func`2&lt;ResolutionContext,String&gt; formatExpression) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IFormatterExpression#AddFormatter(System.Type)">
            <summary>设置 IFormatterExpression.AddFormatter(Type valueFormatterType) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IFormatterExpression#AddFormatter``1">
            <summary>设置 IFormatterExpression.AddFormatter() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IFormatterExpression#AddFormatter(AutoMapper.IValueFormatter)">
            <summary>设置 IFormatterExpression.AddFormatter(IValueFormatter formatter) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IFormatterExpression#ForSourceType``1">
            <summary>设置 IFormatterExpression.ForSourceType() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IFormatterExpression#SkipFormatter``1">
            <summary>设置 IFormatterExpression.SkipFormatter() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IProfileExpression#AddGlobalIgnore(System.String)">
            <summary>设置 IProfileExpression.AddGlobalIgnore(String propertyNameStartingWith) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IProfileExpression#CreateMap(System.Type,System.Type)">
            <summary>设置 IProfileExpression.CreateMap(Type sourceType, Type destinationType) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IProfileExpression#CreateMap(System.Type,System.Type,AutoMapper.MemberList)">
            <summary>设置 IProfileExpression.CreateMap(Type sourceType, Type destinationType, MemberList memberList) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IProfileExpression#CreateMap``2">
            <summary>设置 IProfileExpression.CreateMap() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IProfileExpression#CreateMap``2(AutoMapper.MemberList)">
            <summary>设置 IProfileExpression.CreateMap(MemberList memberList) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IProfileExpression#IncludeSourceExtensionMethods(System.Reflection.Assembly)">
            <summary>设置 IProfileExpression.IncludeSourceExtensionMethods(Assembly assembly) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IProfileExpression#RecognizeAlias(System.String,System.String)">
            <summary>设置 IProfileExpression.RecognizeAlias(String original, String alias) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IProfileExpression#RecognizeDestinationPostfixes(System.String[])">
            <summary>设置 IProfileExpression.RecognizeDestinationPostfixes(String[] postfixes) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IProfileExpression#RecognizeDestinationPrefixes(System.String[])">
            <summary>设置 IProfileExpression.RecognizeDestinationPrefixes(String[] prefixes) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IProfileExpression#RecognizePostfixes(System.String[])">
            <summary>设置 IProfileExpression.RecognizePostfixes(String[] postfixes) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IProfileExpression#RecognizePrefixes(System.String[])">
            <summary>设置 IProfileExpression.RecognizePrefixes(String[] prefixes) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.ConstructServicesUsingFuncOfTypeObject">
            <summary>设置 IConfiguration.ConstructServicesUsing(Func`2&lt;Type,Object&gt; constructor) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.ConstructorMappingEnabledGet">
            <summary>设置 IMappingOptions.get_ConstructorMappingEnabled() 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.CreateMapOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IMappingExpression{``0,``1}})">
            <summary>设置 CreateMap() 的存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.CreateMapOf2MemberList``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MemberList,AutoMapper.IMappingExpression{``0,``1}})">
            <summary>设置 CreateMap(MemberList memberList) 的存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.CreateMapTypeType">
            <summary>设置 IProfileExpression.CreateMap(Type sourceType, Type destinationType) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.CreateMapTypeTypeMemberList">
            <summary>设置 IProfileExpression.CreateMap(Type sourceType, Type destinationType, MemberList memberList) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.CreateProfileString">
            <summary>设置 IConfiguration.CreateProfile(String profileName) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.CreateProfileStringActionOfIProfileExpression">
            <summary>设置 IConfiguration.CreateProfile(String profileName, Action`1&lt;IProfileExpression&gt; profileConfiguration) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.DataReaderMapperYieldReturnEnabledGet">
            <summary>设置 IMappingOptions.get_DataReaderMapperYieldReturnEnabled() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.DestinationMemberNamingConventionGet">
            <summary>设置 IMappingOptions.get_DestinationMemberNamingConvention() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.DestinationMemberNamingConventionSetINamingConvention">
            <summary>设置 IMappingOptions.set_DestinationMemberNamingConvention(INamingConvention value) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.DestinationPostfixesGet">
            <summary>设置 IMappingOptions.get_DestinationPostfixes() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.DestinationPrefixesGet">
            <summary>设置 IMappingOptions.get_DestinationPrefixes() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.DisableConstructorMapping">
            <summary>设置 IConfiguration.DisableConstructorMapping() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.EnableYieldReturnForDataReaderMapper">
            <summary>设置 IConfiguration.EnableYieldReturnForDataReaderMapper() 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.ForSourceTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IFormatterExpression})">
            <summary>设置 ForSourceType() 的存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.IncludeSourceExtensionMethodsAssembly">
            <summary>设置 IProfileExpression.IncludeSourceExtensionMethods(Assembly assembly) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.PostfixesGet">
            <summary>设置 IMappingOptions.get_Postfixes() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.PrefixesGet">
            <summary>设置 IMappingOptions.get_Prefixes() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.RecognizeAliasStringString">
            <summary>设置 IProfileExpression.RecognizeAlias(String original, String alias) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.RecognizeDestinationPostfixesStringArray">
            <summary>设置 IProfileExpression.RecognizeDestinationPostfixes(String[] postfixes) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.RecognizeDestinationPrefixesStringArray">
            <summary>设置 IProfileExpression.RecognizeDestinationPrefixes(String[] prefixes) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.RecognizePostfixesStringArray">
            <summary>设置 IProfileExpression.RecognizePostfixes(String[] postfixes) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.RecognizePrefixesStringArray">
            <summary>设置 IProfileExpression.RecognizePrefixes(String[] prefixes) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.Seal">
            <summary>设置 IConfiguration.Seal() 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfiguration.SkipFormatterOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>设置 SkipFormatter() 的存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.SourceExtensionMethodsGet">
            <summary>设置 IMappingOptions.get_SourceExtensionMethods() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.SourceMemberNamingConventionGet">
            <summary>设置 IMappingOptions.get_SourceMemberNamingConvention() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfiguration.SourceMemberNamingConventionSetINamingConvention">
            <summary>设置 IMappingOptions.set_SourceMemberNamingConvention(INamingConvention value) 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IMappingOptions#Aliases">
            <summary>设置 IMappingOptions.get_Aliases() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IProfileExpression#AllowNullCollections">
            <summary>设置 IProfileExpression.get_AllowNullCollections() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IProfileExpression#AllowNullDestinationValues">
            <summary>设置 IProfileExpression.get_AllowNullDestinationValues() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IMappingOptions#ConstructorMappingEnabled">
            <summary>设置 IMappingOptions.get_ConstructorMappingEnabled() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IMappingOptions#DataReaderMapperYieldReturnEnabled">
            <summary>设置 IMappingOptions.get_DataReaderMapperYieldReturnEnabled() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IMappingOptions#DestinationMemberNamingConvention">
            <summary>设置 IMappingOptions.get_DestinationMemberNamingConvention() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IMappingOptions#DestinationPostfixes">
            <summary>设置 IMappingOptions.get_DestinationPostfixes() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IMappingOptions#DestinationPrefixes">
            <summary>设置 IMappingOptions.get_DestinationPrefixes() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IMappingOptions#Postfixes">
            <summary>设置 IMappingOptions.get_Postfixes() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IMappingOptions#Prefixes">
            <summary>设置 IMappingOptions.get_Prefixes() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IMappingOptions#SourceExtensionMethods">
            <summary>设置 IMappingOptions.get_SourceExtensionMethods() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIConfiguration.am::AutoMapper#IMappingOptions#SourceMemberNamingConvention">
            <summary>设置 IMappingOptions.get_SourceMemberNamingConvention() 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIConfigurationProvider">
            <summary>AutoMapper.IConfigurationProvider 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfigurationProvider.#ctor">
            <summary>初始化 type StubIConfigurationProvider 的新实例</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfigurationProvider.AssertConfigurationIsValid">
            <summary>设置 IConfigurationProvider.AssertConfigurationIsValid() 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfigurationProvider.AssertConfigurationIsValidOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>设置 AssertConfigurationIsValid() 的存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfigurationProvider.AssertConfigurationIsValidString">
            <summary>设置 IConfigurationProvider.AssertConfigurationIsValid(String profileName) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfigurationProvider.AssertConfigurationIsValidTypeMap">
            <summary>设置 IConfigurationProvider.AssertConfigurationIsValid(TypeMap typeMap) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfigurationProvider.am::AutoMapper#IConfigurationProvider#AssertConfigurationIsValid">
            <summary>设置 IConfigurationProvider.AssertConfigurationIsValid() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfigurationProvider.am::AutoMapper#IConfigurationProvider#AssertConfigurationIsValid``1">
            <summary>设置 IConfigurationProvider.AssertConfigurationIsValid() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfigurationProvider.am::AutoMapper#IConfigurationProvider#AssertConfigurationIsValid(AutoMapper.TypeMap)">
            <summary>设置 IConfigurationProvider.AssertConfigurationIsValid(TypeMap typeMap) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfigurationProvider.am::AutoMapper#IConfigurationProvider#AssertConfigurationIsValid(System.String)">
            <summary>设置 IConfigurationProvider.AssertConfigurationIsValid(String profileName) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfigurationProvider.am::AutoMapper#IConfigurationProvider#CreateTypeMap(System.Type,System.Type)">
            <summary>设置 IConfigurationProvider.CreateTypeMap(Type sourceType, Type destinationType) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfigurationProvider.am::AutoMapper#IConfigurationProvider#FindTypeMapFor(AutoMapper.ResolutionResult,System.Type)">
            <summary>设置 IConfigurationProvider.FindTypeMapFor(ResolutionResult resolutionResult, Type destinationType) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfigurationProvider.am::AutoMapper#IConfigurationProvider#FindTypeMapFor(System.Type,System.Type)">
            <summary>设置 IConfigurationProvider.FindTypeMapFor(Type sourceType, Type destinationType) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfigurationProvider.am::AutoMapper#IConfigurationProvider#FindTypeMapFor(System.Object,System.Object,System.Type,System.Type)">
            <summary>设置 IConfigurationProvider.FindTypeMapFor(Object source, Object destination, Type sourceType, Type destinationType) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfigurationProvider.am::AutoMapper#IConfigurationProvider#GetAllTypeMaps">
            <summary>设置 IConfigurationProvider.GetAllTypeMaps() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfigurationProvider.am::AutoMapper#IConfigurationProvider#GetMappers">
            <summary>设置 IConfigurationProvider.GetMappers() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIConfigurationProvider.am::AutoMapper#IConfigurationProvider#GetProfileConfiguration(System.String)">
            <summary>设置 IConfigurationProvider.GetProfileConfiguration(String profileName) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfigurationProvider.CreateTypeMapTypeType">
            <summary>设置 IConfigurationProvider.CreateTypeMap(Type sourceType, Type destinationType) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfigurationProvider.FindTypeMapForObjectObjectTypeType">
            <summary>设置 IConfigurationProvider.FindTypeMapFor(Object source, Object destination, Type sourceType, Type destinationType) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfigurationProvider.FindTypeMapForResolutionResultType">
            <summary>设置 IConfigurationProvider.FindTypeMapFor(ResolutionResult resolutionResult, Type destinationType) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfigurationProvider.FindTypeMapForTypeType">
            <summary>设置 IConfigurationProvider.FindTypeMapFor(Type sourceType, Type destinationType) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfigurationProvider.GetAllTypeMaps">
            <summary>设置 IConfigurationProvider.GetAllTypeMaps() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfigurationProvider.GetMappers">
            <summary>设置 IConfigurationProvider.GetMappers() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfigurationProvider.GetProfileConfigurationString">
            <summary>设置 IConfigurationProvider.GetProfileConfiguration(String profileName) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfigurationProvider.MapNullSourceCollectionsAsNullGet">
            <summary>设置 IProfileConfiguration.get_MapNullSourceCollectionsAsNull() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfigurationProvider.MapNullSourceValuesAsNullGet">
            <summary>设置 IProfileConfiguration.get_MapNullSourceValuesAsNull() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIConfigurationProvider.ServiceCtorGet">
            <summary>设置 IConfigurationProvider.get_ServiceCtor() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIConfigurationProvider.am::AutoMapper#IProfileConfiguration#MapNullSourceCollectionsAsNull">
            <summary>设置 IProfileConfiguration.get_MapNullSourceCollectionsAsNull() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIConfigurationProvider.am::AutoMapper#IProfileConfiguration#MapNullSourceValuesAsNull">
            <summary>设置 IProfileConfiguration.get_MapNullSourceValuesAsNull() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIConfigurationProvider.am::AutoMapper#IConfigurationProvider#ServiceCtor">
            <summary>设置 IConfigurationProvider.get_ServiceCtor() 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIDelegateFactory">
            <summary>AutoMapper.IDelegateFactory 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIDelegateFactory.#ctor">
            <summary>初始化 type StubIDelegateFactory 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIDelegateFactory.am::AutoMapper#IDelegateFactory#CreateCtor(System.Type)">
            <summary>设置 IDelegateFactory.CreateCtor(Type type) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIDelegateFactory.am::AutoMapper#IDelegateFactory#CreateCtor(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{AutoMapper.ConstructorParameterMap})">
            <summary>设置 IDelegateFactory.CreateCtor(ConstructorInfo constructorInfo, IEnumerable`1&lt;ConstructorParameterMap&gt; ctorParams) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIDelegateFactory.am::AutoMapper#IDelegateFactory#CreateGet(System.Reflection.FieldInfo)">
            <summary>设置 IDelegateFactory.CreateGet(FieldInfo field) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIDelegateFactory.am::AutoMapper#IDelegateFactory#CreateGet(System.Reflection.MethodInfo)">
            <summary>设置 IDelegateFactory.CreateGet(MethodInfo method) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIDelegateFactory.am::AutoMapper#IDelegateFactory#CreateGet(System.Reflection.PropertyInfo)">
            <summary>设置 IDelegateFactory.CreateGet(PropertyInfo property) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIDelegateFactory.am::AutoMapper#IDelegateFactory#CreateSet(System.Reflection.FieldInfo)">
            <summary>设置 IDelegateFactory.CreateSet(FieldInfo field) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIDelegateFactory.am::AutoMapper#IDelegateFactory#CreateSet(System.Reflection.PropertyInfo)">
            <summary>设置 IDelegateFactory.CreateSet(PropertyInfo property) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIDelegateFactory.CreateCtorConstructorInfoIEnumerableOfConstructorParameterMap">
            <summary>设置 IDelegateFactory.CreateCtor(ConstructorInfo constructorInfo, IEnumerable`1&lt;ConstructorParameterMap&gt; ctorParams) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIDelegateFactory.CreateCtorType">
            <summary>设置 IDelegateFactory.CreateCtor(Type type) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIDelegateFactory.CreateGetFieldInfo">
            <summary>设置 IDelegateFactory.CreateGet(FieldInfo field) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIDelegateFactory.CreateGetMethodInfo">
            <summary>设置 IDelegateFactory.CreateGet(MethodInfo method) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIDelegateFactory.CreateGetPropertyInfo">
            <summary>设置 IDelegateFactory.CreateGet(PropertyInfo property) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIDelegateFactory.CreateSetFieldInfo">
            <summary>设置 IDelegateFactory.CreateSet(FieldInfo field) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIDelegateFactory.CreateSetPropertyInfo">
            <summary>设置 IDelegateFactory.CreateSet(PropertyInfo property) 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIFormatterCtorConfigurator">
            <summary>AutoMapper.IFormatterCtorConfigurator 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIFormatterCtorConfigurator.#ctor">
            <summary>初始化 type StubIFormatterCtorConfigurator 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIFormatterCtorConfigurator.am::AutoMapper#IFormatterCtorConfigurator#ConstructFormatterBy(System.Type,System.Func{AutoMapper.IValueFormatter})">
            <summary>设置 IFormatterCtorConfigurator.ConstructFormatterBy(Type formatterType, Func`1&lt;IValueFormatter&gt; instantiator) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIFormatterCtorConfigurator.ConstructFormatterByTypeFuncOfIValueFormatter">
            <summary>设置 IFormatterCtorConfigurator.ConstructFormatterBy(Type formatterType, Func`1&lt;IValueFormatter&gt; instantiator) 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIMappingAction`2">
            <summary>AutoMapper.IMappingAction`2 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingAction`2.#ctor">
            <summary>初始化 type StubIMappingAction 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingAction`2.am::AutoMapper#IMappingAction{TSource@TDestination}#Process(`0,`1)">
            <summary>设置 IMappingAction`2.Process(!0 source, !1 destination) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingAction`2.ProcessT0T1">
            <summary>设置 IMappingAction`2.Process(!0 source, !1 destination) 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIMappingEngine">
            <summary>AutoMapper.IMappingEngine 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.#ctor">
            <summary>初始化 type StubIMappingEngine 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.am::AutoMapper#IMappingEngine#DynamicMap``1(System.Object)">
            <summary>设置 IMappingEngine.DynamicMap(Object source) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.am::AutoMapper#IMappingEngine#DynamicMap``2(``0)">
            <summary>设置 IMappingEngine.DynamicMap(!!0 source) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.am::AutoMapper#IMappingEngine#DynamicMap(System.Object,System.Type,System.Type)">
            <summary>设置 IMappingEngine.DynamicMap(Object source, Type sourceType, Type destinationType) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.am::AutoMapper#IMappingEngine#DynamicMap``2(``0,``1)">
            <summary>设置 IMappingEngine.DynamicMap(!!0 source, !!1 destination) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.am::AutoMapper#IMappingEngine#DynamicMap(System.Object,System.Object,System.Type,System.Type)">
            <summary>设置 IMappingEngine.DynamicMap(Object source, Object destination, Type sourceType, Type destinationType) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.am::AutoMapper#IMappingEngine#Map(System.Object,System.Type,System.Type,System.Action{AutoMapper.IMappingOperationOptions})">
            <summary>设置 IMappingEngine.Map(Object source, Type sourceType, Type destinationType, Action`1&lt;IMappingOperationOptions&gt; opts) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.am::AutoMapper#IMappingEngine#Map(System.Object,System.Object,System.Type,System.Type,System.Action{AutoMapper.IMappingOperationOptions})">
            <summary>设置 IMappingEngine.Map(Object source, Object destination, Type sourceType, Type destinationType, Action`1&lt;IMappingOperationOptions&gt; opts) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.am::AutoMapper#IMappingEngine#Map``1(System.Object)">
            <summary>设置 IMappingEngine.Map(Object source) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.am::AutoMapper#IMappingEngine#Map``1(System.Object,System.Action{AutoMapper.IMappingOperationOptions})">
            <summary>设置 IMappingEngine.Map(Object source, Action`1&lt;IMappingOperationOptions&gt; opts) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.am::AutoMapper#IMappingEngine#Map``2(``0)">
            <summary>设置 IMappingEngine.Map(!!0 source) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.am::AutoMapper#IMappingEngine#Map``2(``0,System.Action{AutoMapper.IMappingOperationOptions})">
            <summary>设置 IMappingEngine.Map(!!0 source, Action`1&lt;IMappingOperationOptions&gt; opts) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.am::AutoMapper#IMappingEngine#Map``2(``0,``1)">
            <summary>设置 IMappingEngine.Map(!!0 source, !!1 destination) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.am::AutoMapper#IMappingEngine#Map``2(``0,``1,System.Action{AutoMapper.IMappingOperationOptions})">
            <summary>设置 IMappingEngine.Map(!!0 source, !!1 destination, Action`1&lt;IMappingOperationOptions&gt; opts) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.am::AutoMapper#IMappingEngine#Map(System.Object,System.Type,System.Type)">
            <summary>设置 IMappingEngine.Map(Object source, Type sourceType, Type destinationType) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.am::AutoMapper#IMappingEngine#Map(System.Object,System.Object,System.Type,System.Type)">
            <summary>设置 IMappingEngine.Map(Object source, Object destination, Type sourceType, Type destinationType) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingEngine.ConfigurationProviderGet">
            <summary>设置 IMappingEngine.get_ConfigurationProvider() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingEngine.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingEngine.DynamicMapObjectObjectTypeType">
            <summary>设置 IMappingEngine.DynamicMap(Object source, Object destination, Type sourceType, Type destinationType) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingEngine.DynamicMapObjectTypeType">
            <summary>设置 IMappingEngine.DynamicMap(Object source, Type sourceType, Type destinationType) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.DynamicMapOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>设置 DynamicMap(Object source) 的存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.DynamicMapOf2M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1})">
            <summary>设置 DynamicMap(!!0 source) 的存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.DynamicMapOf2M0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,``1})">
            <summary>设置 DynamicMap(!!0 source, !!1 destination) 的存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingEngine.MapObjectObjectTypeType">
            <summary>设置 IMappingEngine.Map(Object source, Object destination, Type sourceType, Type destinationType) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingEngine.MapObjectObjectTypeTypeActionOfIMappingOperationOptions">
            <summary>设置 IMappingEngine.Map(Object source, Object destination, Type sourceType, Type destinationType, Action`1&lt;IMappingOperationOptions&gt; opts) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingEngine.MapObjectTypeType">
            <summary>设置 IMappingEngine.Map(Object source, Type sourceType, Type destinationType) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingEngine.MapObjectTypeTypeActionOfIMappingOperationOptions">
            <summary>设置 IMappingEngine.Map(Object source, Type sourceType, Type destinationType, Action`1&lt;IMappingOperationOptions&gt; opts) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.MapOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>设置 Map(Object source) 的存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.MapOf1ObjectActionOfIMappingOperationOptions``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,System.Action{AutoMapper.IMappingOperationOptions},``0})">
            <summary>设置 Map(Object source, Action`1&lt;IMappingOperationOptions&gt; opts) 的存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.MapOf2M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1})">
            <summary>设置 Map(!!0 source) 的存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.MapOf2M0ActionOfIMappingOperationOptions``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Action{AutoMapper.IMappingOperationOptions},``1})">
            <summary>设置 Map(!!0 source, Action`1&lt;IMappingOperationOptions&gt; opts) 的存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.MapOf2M0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1,``1})">
            <summary>设置 Map(!!0 source, !!1 destination) 的存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.MapOf2M0M1ActionOfIMappingOperationOptions``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1,System.Action{AutoMapper.IMappingOperationOptions},``1})">
            <summary>设置 Map(!!0 source, !!1 destination, Action`1&lt;IMappingOperationOptions&gt; opts) 的存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngine.global::System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingEngine.am::AutoMapper#IMappingEngine#ConfigurationProvider">
            <summary>设置 IMappingEngine.get_ConfigurationProvider() 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIMappingEngineRunner">
            <summary>AutoMapper.IMappingEngineRunner 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngineRunner.#ctor">
            <summary>初始化 type StubIMappingEngineRunner 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngineRunner.am::AutoMapper#IMappingEngineRunner#CreateObject(AutoMapper.ResolutionContext)">
            <summary>设置 IMappingEngineRunner.CreateObject(ResolutionContext context) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngineRunner.am::AutoMapper#IMappingEngineRunner#FormatValue(AutoMapper.ResolutionContext)">
            <summary>设置 IMappingEngineRunner.FormatValue(ResolutionContext context) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngineRunner.am::AutoMapper#IMappingEngineRunner#Map(AutoMapper.ResolutionContext)">
            <summary>设置 IMappingEngineRunner.Map(ResolutionContext context) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngineRunner.am::AutoMapper#IMappingEngineRunner#ShouldMapSourceCollectionAsNull(AutoMapper.ResolutionContext)">
            <summary>设置 IMappingEngineRunner.ShouldMapSourceCollectionAsNull(ResolutionContext context) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingEngineRunner.am::AutoMapper#IMappingEngineRunner#ShouldMapSourceValueAsNull(AutoMapper.ResolutionContext)">
            <summary>设置 IMappingEngineRunner.ShouldMapSourceValueAsNull(ResolutionContext context) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingEngineRunner.ConfigurationProviderGet">
            <summary>设置 IMappingEngineRunner.get_ConfigurationProvider() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingEngineRunner.CreateObjectResolutionContext">
            <summary>设置 IMappingEngineRunner.CreateObject(ResolutionContext context) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingEngineRunner.FormatValueResolutionContext">
            <summary>设置 IMappingEngineRunner.FormatValue(ResolutionContext context) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingEngineRunner.MapResolutionContext">
            <summary>设置 IMappingEngineRunner.Map(ResolutionContext context) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingEngineRunner.ShouldMapSourceCollectionAsNullResolutionContext">
            <summary>设置 IMappingEngineRunner.ShouldMapSourceCollectionAsNull(ResolutionContext context) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingEngineRunner.ShouldMapSourceValueAsNullResolutionContext">
            <summary>设置 IMappingEngineRunner.ShouldMapSourceValueAsNull(ResolutionContext context) 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingEngineRunner.am::AutoMapper#IMappingEngineRunner#ConfigurationProvider">
            <summary>设置 IMappingEngineRunner.get_ConfigurationProvider() 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIMappingExpression">
            <summary>AutoMapper.IMappingExpression 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression.#ctor">
            <summary>初始化 type StubIMappingExpression 的新实例</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression.AsType">
            <summary>设置 IMappingExpression.As(Type typeOverride) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression.am::AutoMapper#IMappingExpression#As(System.Type)">
            <summary>设置 IMappingExpression.As(Type typeOverride) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression.am::AutoMapper#IMappingExpression#ConvertUsing``1">
            <summary>设置 IMappingExpression.ConvertUsing() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression.am::AutoMapper#IMappingExpression#ConvertUsing(System.Type)">
            <summary>设置 IMappingExpression.ConvertUsing(Type typeConverterType) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression.am::AutoMapper#IMappingExpression#ForMember(System.String,System.Action{AutoMapper.IMemberConfigurationExpression})">
            <summary>设置 IMappingExpression.ForMember(String name, Action`1&lt;IMemberConfigurationExpression&gt; memberOptions) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression.am::AutoMapper#IMappingExpression#ForSourceMember(System.String,System.Action{AutoMapper.ISourceMemberConfigurationExpression})">
            <summary>设置 IMappingExpression.ForSourceMember(String sourceMemberName, Action`1&lt;ISourceMemberConfigurationExpression&gt; memberOptions) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression.am::AutoMapper#IMappingExpression#WithProfile(System.String)">
            <summary>设置 IMappingExpression.WithProfile(String profileName) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression.ConvertUsingOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>设置 ConvertUsing() 的存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression.ConvertUsingType">
            <summary>设置 IMappingExpression.ConvertUsing(Type typeConverterType) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression.ForMemberStringActionOfIMemberConfigurationExpression">
            <summary>设置 IMappingExpression.ForMember(String name, Action`1&lt;IMemberConfigurationExpression&gt; memberOptions) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression.ForSourceMemberStringActionOfISourceMemberConfigurationExpression">
            <summary>设置 IMappingExpression.ForSourceMember(String sourceMemberName, Action`1&lt;ISourceMemberConfigurationExpression&gt; memberOptions) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression.WithProfileString">
            <summary>设置 IMappingExpression.WithProfile(String profileName) 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIMappingExpression`2">
            <summary>AutoMapper.IMappingExpression`2 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.#ctor">
            <summary>初始化 type StubIMappingExpression 的新实例</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.AfterMapActionOfT0T1">
            <summary>设置 IMappingExpression`2.AfterMap(Action`2&lt;!0,!1&gt; afterFunction) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.AfterMapOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IMappingExpression{`0,`1}})">
            <summary>设置 AfterMap() 的存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.AsOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>设置 As() 的存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#AfterMap``1">
            <summary>设置 IMappingExpression`2.AfterMap() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#AfterMap(System.Action{`0,`1})">
            <summary>设置 IMappingExpression`2.AfterMap(Action`2&lt;!0,!1&gt; afterFunction) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#As``1">
            <summary>设置 IMappingExpression`2.As() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#BeforeMap``1">
            <summary>设置 IMappingExpression`2.BeforeMap() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#BeforeMap(System.Action{`0,`1})">
            <summary>设置 IMappingExpression`2.BeforeMap(Action`2&lt;!0,!1&gt; beforeFunction) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#ConstructUsing(System.Func{`0,`1})">
            <summary>设置 IMappingExpression`2.ConstructUsing(Func`2&lt;!0,!1&gt; ctor) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#ConstructUsing(System.Func{AutoMapper.ResolutionContext,`1})">
            <summary>设置 IMappingExpression`2.ConstructUsing(Func`2&lt;ResolutionContext,!1&gt; ctor) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#ConstructUsingServiceLocator">
            <summary>设置 IMappingExpression`2.ConstructUsingServiceLocator() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#ConvertUsing``1">
            <summary>设置 IMappingExpression`2.ConvertUsing() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#ConvertUsing(AutoMapper.ITypeConverter{`0,`1})">
            <summary>设置 IMappingExpression`2.ConvertUsing(ITypeConverter`2&lt;!0,!1&gt; converter) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#ConvertUsing(System.Func{`0,`1})">
            <summary>设置 IMappingExpression`2.ConvertUsing(Func`2&lt;!0,!1&gt; mappingFunction) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#ForAllMembers(System.Action{AutoMapper.IMemberConfigurationExpression{`0}})">
            <summary>设置 IMappingExpression`2.ForAllMembers(Action`1&lt;IMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#ForMember(System.Linq.Expressions.Expression{System.Func{`1,System.Object}},System.Action{AutoMapper.IMemberConfigurationExpression{`0}})">
            <summary>设置 IMappingExpression`2.ForMember(Expression`1&lt;Func`2&lt;!1,Object&gt;&gt; destinationMember, Action`1&lt;IMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#ForMember(System.String,System.Action{AutoMapper.IMemberConfigurationExpression{`0}})">
            <summary>设置 IMappingExpression`2.ForMember(String name, Action`1&lt;IMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#ForSourceMember(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{AutoMapper.ISourceMemberConfigurationExpression{`0}})">
            <summary>设置 IMappingExpression`2.ForSourceMember(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; sourceMember, Action`1&lt;ISourceMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#ForSourceMember(System.String,System.Action{AutoMapper.ISourceMemberConfigurationExpression{`0}})">
            <summary>设置 IMappingExpression`2.ForSourceMember(String sourceMemberName, Action`1&lt;ISourceMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#IgnoreAllPropertiesWithAnInaccessibleSetter">
            <summary>设置 IMappingExpression`2.IgnoreAllPropertiesWithAnInaccessibleSetter() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#IgnoreAllSourcePropertiesWithAnInaccessibleSetter">
            <summary>设置 IMappingExpression`2.IgnoreAllSourcePropertiesWithAnInaccessibleSetter() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#Include``2">
            <summary>设置 IMappingExpression`2.Include() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#Include(System.Type,System.Type)">
            <summary>设置 IMappingExpression`2.Include(Type derivedSourceType, Type derivedDestinationType) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#MaxDepth(System.Int32)">
            <summary>设置 IMappingExpression`2.MaxDepth(Int32 depth) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#ReverseMap">
            <summary>设置 IMappingExpression`2.ReverseMap() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#Substitute(System.Func{`0,System.Object})">
            <summary>设置 IMappingExpression`2.Substitute(Func`2&lt;!0,Object&gt; substituteFunc) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.am::AutoMapper#IMappingExpression{TSource@TDestination}#WithProfile(System.String)">
            <summary>设置 IMappingExpression`2.WithProfile(String profileName) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.BeforeMapActionOfT0T1">
            <summary>设置 IMappingExpression`2.BeforeMap(Action`2&lt;!0,!1&gt; beforeFunction) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.BeforeMapOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IMappingExpression{`0,`1}})">
            <summary>设置 BeforeMap() 的存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.ConstructUsingFuncOfResolutionContextT1">
            <summary>设置 IMappingExpression`2.ConstructUsing(Func`2&lt;ResolutionContext,!1&gt; ctor) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.ConstructUsingFuncOfT0T1">
            <summary>设置 IMappingExpression`2.ConstructUsing(Func`2&lt;!0,!1&gt; ctor) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.ConstructUsingServiceLocator">
            <summary>设置 IMappingExpression`2.ConstructUsingServiceLocator() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.ConvertUsingFuncOfT0T1">
            <summary>设置 IMappingExpression`2.ConvertUsing(Func`2&lt;!0,!1&gt; mappingFunction) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.ConvertUsingITypeConverterOfT0T1">
            <summary>设置 IMappingExpression`2.ConvertUsing(ITypeConverter`2&lt;!0,!1&gt; converter) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.ConvertUsingOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>设置 ConvertUsing() 的存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.ForAllMembersActionOfIMemberConfigurationExpressionOfT0">
            <summary>设置 IMappingExpression`2.ForAllMembers(Action`1&lt;IMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.ForMemberExpressionOfFuncOfT1ObjectActionOfIMemberConfigurationExpressionOfT0">
            <summary>设置 IMappingExpression`2.ForMember(Expression`1&lt;Func`2&lt;!1,Object&gt;&gt; destinationMember, Action`1&lt;IMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.ForMemberStringActionOfIMemberConfigurationExpressionOfT0">
            <summary>设置 IMappingExpression`2.ForMember(String name, Action`1&lt;IMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.ForSourceMemberExpressionOfFuncOfT0ObjectActionOfISourceMemberConfigurationExpressionOfT0">
            <summary>设置 IMappingExpression`2.ForSourceMember(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; sourceMember, Action`1&lt;ISourceMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.ForSourceMemberStringActionOfISourceMemberConfigurationExpressionOfT0">
            <summary>设置 IMappingExpression`2.ForSourceMember(String sourceMemberName, Action`1&lt;ISourceMemberConfigurationExpression`1&lt;!0&gt;&gt; memberOptions) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.IgnoreAllPropertiesWithAnInaccessibleSetter">
            <summary>设置 IMappingExpression`2.IgnoreAllPropertiesWithAnInaccessibleSetter() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.IgnoreAllSourcePropertiesWithAnInaccessibleSetter">
            <summary>设置 IMappingExpression`2.IgnoreAllSourcePropertiesWithAnInaccessibleSetter() 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingExpression`2.IncludeOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IMappingExpression{`0,`1}})">
            <summary>设置 Include() 的存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.IncludeTypeType">
            <summary>设置 IMappingExpression`2.Include(Type derivedSourceType, Type derivedDestinationType) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.MaxDepthInt32">
            <summary>设置 IMappingExpression`2.MaxDepth(Int32 depth) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.ReverseMap">
            <summary>设置 IMappingExpression`2.ReverseMap() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.SubstituteFuncOfT0Object">
            <summary>设置 IMappingExpression`2.Substitute(Func`2&lt;!0,Object&gt; substituteFunc) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingExpression`2.WithProfileString">
            <summary>设置 IMappingExpression`2.WithProfile(String profileName) 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIMappingOperationOptions">
            <summary>AutoMapper.IMappingOperationOptions 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingOperationOptions.#ctor">
            <summary>初始化 type StubIMappingOperationOptions 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingOperationOptions.AttachBackingFieldToCreateMissingTypeMaps">
            <summary>附加委托以将 StubIMappingOperationOptions.CreateMissingTypeMaps 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingOperationOptions.AttachBackingFieldToDisableCache">
            <summary>附加委托以将 StubIMappingOperationOptions.DisableCache 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingOperationOptions.am::AutoMapper#IMappingOperationOptions#ConstructServicesUsing(System.Func{System.Type,System.Object})">
            <summary>设置 IMappingOperationOptions.ConstructServicesUsing(Func`2&lt;Type,Object&gt; constructor) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOperationOptions.ConstructServicesUsingFuncOfTypeObject">
            <summary>设置 IMappingOperationOptions.ConstructServicesUsing(Func`2&lt;Type,Object&gt; constructor) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOperationOptions.CreateMissingTypeMapsGet">
            <summary>设置 IMappingOperationOptions.get_CreateMissingTypeMaps() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOperationOptions.CreateMissingTypeMapsSetBoolean">
            <summary>设置 IMappingOperationOptions.set_CreateMissingTypeMaps(Boolean value) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOperationOptions.DisableCacheGet">
            <summary>设置 IMappingOperationOptions.get_DisableCache() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOperationOptions.DisableCacheSetBoolean">
            <summary>设置 IMappingOperationOptions.set_DisableCache(Boolean value) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOperationOptions.ItemsGet">
            <summary>设置 IMappingOperationOptions.get_Items() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingOperationOptions.am::AutoMapper#IMappingOperationOptions#CreateMissingTypeMaps">
            <summary>设置 IMappingOperationOptions.get_CreateMissingTypeMaps() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingOperationOptions.am::AutoMapper#IMappingOperationOptions#DisableCache">
            <summary>设置 IMappingOperationOptions.get_DisableCache() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingOperationOptions.am::AutoMapper#IMappingOperationOptions#Items">
            <summary>设置 IMappingOperationOptions.get_Items() 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIMappingOptions">
            <summary>AutoMapper.IMappingOptions 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingOptions.#ctor">
            <summary>初始化 type StubIMappingOptions 的新实例</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOptions.AliasesGet">
            <summary>设置 IMappingOptions.get_Aliases() 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingOptions.AttachBackingFieldToDestinationMemberNamingConvention">
            <summary>附加委托以将 StubIMappingOptions.DestinationMemberNamingConvention 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMappingOptions.AttachBackingFieldToSourceMemberNamingConvention">
            <summary>附加委托以将 StubIMappingOptions.SourceMemberNamingConvention 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOptions.ConstructorMappingEnabledGet">
            <summary>设置 IMappingOptions.get_ConstructorMappingEnabled() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOptions.DataReaderMapperYieldReturnEnabledGet">
            <summary>设置 IMappingOptions.get_DataReaderMapperYieldReturnEnabled() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOptions.DestinationMemberNamingConventionGet">
            <summary>设置 IMappingOptions.get_DestinationMemberNamingConvention() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOptions.DestinationMemberNamingConventionSetINamingConvention">
            <summary>设置 IMappingOptions.set_DestinationMemberNamingConvention(INamingConvention value) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOptions.DestinationPostfixesGet">
            <summary>设置 IMappingOptions.get_DestinationPostfixes() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOptions.DestinationPrefixesGet">
            <summary>设置 IMappingOptions.get_DestinationPrefixes() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOptions.PostfixesGet">
            <summary>设置 IMappingOptions.get_Postfixes() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOptions.PrefixesGet">
            <summary>设置 IMappingOptions.get_Prefixes() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOptions.SourceExtensionMethodsGet">
            <summary>设置 IMappingOptions.get_SourceExtensionMethods() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOptions.SourceMemberNamingConventionGet">
            <summary>设置 IMappingOptions.get_SourceMemberNamingConvention() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMappingOptions.SourceMemberNamingConventionSetINamingConvention">
            <summary>设置 IMappingOptions.set_SourceMemberNamingConvention(INamingConvention value) 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingOptions.am::AutoMapper#IMappingOptions#Aliases">
            <summary>设置 IMappingOptions.get_Aliases() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingOptions.am::AutoMapper#IMappingOptions#ConstructorMappingEnabled">
            <summary>设置 IMappingOptions.get_ConstructorMappingEnabled() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingOptions.am::AutoMapper#IMappingOptions#DataReaderMapperYieldReturnEnabled">
            <summary>设置 IMappingOptions.get_DataReaderMapperYieldReturnEnabled() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingOptions.am::AutoMapper#IMappingOptions#DestinationMemberNamingConvention">
            <summary>设置 IMappingOptions.get_DestinationMemberNamingConvention() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingOptions.am::AutoMapper#IMappingOptions#DestinationPostfixes">
            <summary>设置 IMappingOptions.get_DestinationPostfixes() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingOptions.am::AutoMapper#IMappingOptions#DestinationPrefixes">
            <summary>设置 IMappingOptions.get_DestinationPrefixes() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingOptions.am::AutoMapper#IMappingOptions#Postfixes">
            <summary>设置 IMappingOptions.get_Postfixes() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingOptions.am::AutoMapper#IMappingOptions#Prefixes">
            <summary>设置 IMappingOptions.get_Prefixes() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingOptions.am::AutoMapper#IMappingOptions#SourceExtensionMethods">
            <summary>设置 IMappingOptions.get_SourceExtensionMethods() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMappingOptions.am::AutoMapper#IMappingOptions#SourceMemberNamingConvention">
            <summary>设置 IMappingOptions.get_SourceMemberNamingConvention() 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIMemberAccessor">
            <summary>AutoMapper.IMemberAccessor 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberAccessor.#ctor">
            <summary>初始化 type StubIMemberAccessor 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberAccessor.am::AutoMapper#IMemberAccessor#SetValue(System.Object,System.Object)">
            <summary>设置 IMemberAccessor.SetValue(Object destination, Object value) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberAccessor.am::AutoMapper#IMemberGetter#GetValue(System.Object)">
            <summary>设置 IMemberGetter.GetValue(Object source) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberAccessor.am::AutoMapper#IValueResolver#Resolve(AutoMapper.ResolutionResult)">
            <summary>设置 IValueResolver.Resolve(ResolutionResult source) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberAccessor.GetValueObject">
            <summary>设置 IMemberGetter.GetValue(Object source) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberAccessor.MemberInfoGet">
            <summary>设置 IMemberGetter.get_MemberInfo() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberAccessor.MemberTypeGet">
            <summary>设置 IMemberResolver.get_MemberType() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberAccessor.NameGet">
            <summary>设置 IMemberGetter.get_Name() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberAccessor.ResolveResolutionResult">
            <summary>设置 IValueResolver.Resolve(ResolutionResult source) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberAccessor.SetValueObjectObject">
            <summary>设置 IMemberAccessor.SetValue(Object destination, Object value) 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMemberAccessor.am::AutoMapper#IMemberGetter#MemberInfo">
            <summary>设置 IMemberGetter.get_MemberInfo() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMemberAccessor.am::AutoMapper#IMemberResolver#MemberType">
            <summary>设置 IMemberResolver.get_MemberType() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMemberAccessor.am::AutoMapper#IMemberGetter#Name">
            <summary>设置 IMemberGetter.get_Name() 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIMemberConfigurationExpression">
            <summary>AutoMapper.IMemberConfigurationExpression 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression.#ctor">
            <summary>初始化 type StubIMemberConfigurationExpression 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression.am::AutoMapper#IMemberConfigurationExpression#Ignore">
            <summary>设置 IMemberConfigurationExpression.Ignore() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression.am::AutoMapper#IMemberConfigurationExpression#MapFrom(System.String)">
            <summary>设置 IMemberConfigurationExpression.MapFrom(String sourceMember) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression.am::AutoMapper#IMemberConfigurationExpression#ResolveUsing(AutoMapper.IValueResolver)">
            <summary>设置 IMemberConfigurationExpression.ResolveUsing(IValueResolver valueResolver) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression.am::AutoMapper#IMemberConfigurationExpression#ResolveUsing``1">
            <summary>设置 IMemberConfigurationExpression.ResolveUsing() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression.am::AutoMapper#IMemberConfigurationExpression#ResolveUsing(System.Type)">
            <summary>设置 IMemberConfigurationExpression.ResolveUsing(Type valueResolverType) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression.Ignore">
            <summary>设置 IMemberConfigurationExpression.Ignore() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression.MapFromString">
            <summary>设置 IMemberConfigurationExpression.MapFrom(String sourceMember) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression.ResolveUsingIValueResolver">
            <summary>设置 IMemberConfigurationExpression.ResolveUsing(IValueResolver valueResolver) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression.ResolveUsingOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IResolverConfigurationExpression})">
            <summary>设置 ResolveUsing() 的存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression.ResolveUsingType">
            <summary>设置 IMemberConfigurationExpression.ResolveUsing(Type valueResolverType) 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIMemberConfigurationExpression`1">
            <summary>AutoMapper.IMemberConfigurationExpression`1 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.#ctor">
            <summary>初始化 type StubIMemberConfigurationExpression 的新实例</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.AddFormatterIValueFormatter">
            <summary>设置 IMemberConfigurationExpression`1.AddFormatter(IValueFormatter formatter) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.AddFormatterOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IFormatterCtorExpression{``0}})">
            <summary>设置 AddFormatter() 的存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.AddFormatterType">
            <summary>设置 IMemberConfigurationExpression`1.AddFormatter(Type valueFormatterType) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#AddFormatter(System.Type)">
            <summary>设置 IMemberConfigurationExpression`1.AddFormatter(Type valueFormatterType) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#AddFormatter(AutoMapper.IValueFormatter)">
            <summary>设置 IMemberConfigurationExpression`1.AddFormatter(IValueFormatter formatter) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#AddFormatter``1">
            <summary>设置 IMemberConfigurationExpression`1.AddFormatter() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#Condition(System.Func{`0,System.Boolean})">
            <summary>设置 IMemberConfigurationExpression`1.Condition(Func`2&lt;!0,Boolean&gt; condition) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#Condition(System.Func{AutoMapper.ResolutionContext,System.Boolean})">
            <summary>设置 IMemberConfigurationExpression`1.Condition(Func`2&lt;ResolutionContext,Boolean&gt; condition) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#DoNotUseDestinationValue">
            <summary>设置 IMemberConfigurationExpression`1.DoNotUseDestinationValue() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#Ignore">
            <summary>设置 IMemberConfigurationExpression`1.Ignore() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#MapFrom``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>设置 IMemberConfigurationExpression`1.MapFrom(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; sourceMember) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#NullSubstitute(System.Object)">
            <summary>设置 IMemberConfigurationExpression`1.NullSubstitute(Object nullSubstitute) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#PreCondition(System.Func{AutoMapper.ResolutionContext,System.Boolean})">
            <summary>设置 IMemberConfigurationExpression`1.PreCondition(Func`2&lt;ResolutionContext,Boolean&gt; condition) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#PreCondition(System.Func{`0,System.Boolean})">
            <summary>设置 IMemberConfigurationExpression`1.PreCondition(Func`2&lt;!0,Boolean&gt; condition) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#ResolveUsing(System.Func{AutoMapper.ResolutionResult,System.Object})">
            <summary>设置 IMemberConfigurationExpression`1.ResolveUsing(Func`2&lt;ResolutionResult,Object&gt; resolver) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#ResolveUsing(System.Type)">
            <summary>设置 IMemberConfigurationExpression`1.ResolveUsing(Type valueResolverType) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#ResolveUsing(System.Func{`0,System.Object})">
            <summary>设置 IMemberConfigurationExpression`1.ResolveUsing(Func`2&lt;!0,Object&gt; resolver) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#ResolveUsing(AutoMapper.IValueResolver)">
            <summary>设置 IMemberConfigurationExpression`1.ResolveUsing(IValueResolver valueResolver) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#ResolveUsing``1">
            <summary>设置 IMemberConfigurationExpression`1.ResolveUsing() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#SetMappingOrder(System.Int32)">
            <summary>设置 IMemberConfigurationExpression`1.SetMappingOrder(Int32 mappingOrder) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#SkipFormatter``1">
            <summary>设置 IMemberConfigurationExpression`1.SkipFormatter() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#UseDestinationValue">
            <summary>设置 IMemberConfigurationExpression`1.UseDestinationValue() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#UseValue``1(``0)">
            <summary>设置 IMemberConfigurationExpression`1.UseValue(!!0 value) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.am::AutoMapper#IMemberConfigurationExpression{TSource}#UseValue(System.Object)">
            <summary>设置 IMemberConfigurationExpression`1.UseValue(Object value) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.ConditionFuncOfResolutionContextBoolean">
            <summary>设置 IMemberConfigurationExpression`1.Condition(Func`2&lt;ResolutionContext,Boolean&gt; condition) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.ConditionFuncOfT0Boolean">
            <summary>设置 IMemberConfigurationExpression`1.Condition(Func`2&lt;!0,Boolean&gt; condition) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.DoNotUseDestinationValue">
            <summary>设置 IMemberConfigurationExpression`1.DoNotUseDestinationValue() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.Ignore">
            <summary>设置 IMemberConfigurationExpression`1.Ignore() 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.MapFromOf1ExpressionOfFuncOfT0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Linq.Expressions.Expression{System.Func{`0,``0}}})">
            <summary>设置 MapFrom(Expression`1&lt;Func`2&lt;!0,!!0&gt;&gt; sourceMember) 的存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.NullSubstituteObject">
            <summary>设置 IMemberConfigurationExpression`1.NullSubstitute(Object nullSubstitute) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.PreConditionFuncOfResolutionContextBoolean">
            <summary>设置 IMemberConfigurationExpression`1.PreCondition(Func`2&lt;ResolutionContext,Boolean&gt; condition) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.PreConditionFuncOfT0Boolean">
            <summary>设置 IMemberConfigurationExpression`1.PreCondition(Func`2&lt;!0,Boolean&gt; condition) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.ResolveUsingFuncOfResolutionResultObject">
            <summary>设置 IMemberConfigurationExpression`1.ResolveUsing(Func`2&lt;ResolutionResult,Object&gt; resolver) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.ResolveUsingFuncOfT0Object">
            <summary>设置 IMemberConfigurationExpression`1.ResolveUsing(Func`2&lt;!0,Object&gt; resolver) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.ResolveUsingIValueResolver">
            <summary>设置 IMemberConfigurationExpression`1.ResolveUsing(IValueResolver valueResolver) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.ResolveUsingOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IResolverConfigurationExpression{`0,``0}})">
            <summary>设置 ResolveUsing() 的存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.ResolveUsingType">
            <summary>设置 IMemberConfigurationExpression`1.ResolveUsing(Type valueResolverType) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.SetMappingOrderInt32">
            <summary>设置 IMemberConfigurationExpression`1.SetMappingOrder(Int32 mappingOrder) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.SkipFormatterOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>设置 SkipFormatter() 的存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.UseDestinationValue">
            <summary>设置 IMemberConfigurationExpression`1.UseDestinationValue() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.UseValueObject">
            <summary>设置 IMemberConfigurationExpression`1.UseValue(Object value) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberConfigurationExpression`1.UseValueOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0})">
            <summary>设置 UseValue(!!0 value) 的存根</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIMemberGetter">
            <summary>AutoMapper.IMemberGetter 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberGetter.#ctor">
            <summary>初始化 type StubIMemberGetter 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberGetter.am::AutoMapper#IMemberGetter#GetValue(System.Object)">
            <summary>设置 IMemberGetter.GetValue(Object source) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberGetter.am::AutoMapper#IValueResolver#Resolve(AutoMapper.ResolutionResult)">
            <summary>设置 IValueResolver.Resolve(ResolutionResult source) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberGetter.GetValueObject">
            <summary>设置 IMemberGetter.GetValue(Object source) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberGetter.MemberInfoGet">
            <summary>设置 IMemberGetter.get_MemberInfo() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberGetter.MemberTypeGet">
            <summary>设置 IMemberResolver.get_MemberType() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberGetter.NameGet">
            <summary>设置 IMemberGetter.get_Name() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberGetter.ResolveResolutionResult">
            <summary>设置 IValueResolver.Resolve(ResolutionResult source) 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMemberGetter.am::AutoMapper#IMemberGetter#MemberInfo">
            <summary>设置 IMemberGetter.get_MemberInfo() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMemberGetter.am::AutoMapper#IMemberResolver#MemberType">
            <summary>设置 IMemberResolver.get_MemberType() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMemberGetter.am::AutoMapper#IMemberGetter#Name">
            <summary>设置 IMemberGetter.get_Name() 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIMemberResolver">
            <summary>AutoMapper.IMemberResolver 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberResolver.#ctor">
            <summary>初始化 type StubIMemberResolver 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIMemberResolver.am::AutoMapper#IValueResolver#Resolve(AutoMapper.ResolutionResult)">
            <summary>设置 IValueResolver.Resolve(ResolutionResult source) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberResolver.MemberTypeGet">
            <summary>设置 IMemberResolver.get_MemberType() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIMemberResolver.ResolveResolutionResult">
            <summary>设置 IValueResolver.Resolve(ResolutionResult source) 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIMemberResolver.am::AutoMapper#IMemberResolver#MemberType">
            <summary>设置 IMemberResolver.get_MemberType() 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubINamingConvention">
            <summary>AutoMapper.INamingConvention 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubINamingConvention.#ctor">
            <summary>初始化 type StubINamingConvention 的新实例</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubINamingConvention.SeparatorCharacterGet">
            <summary>设置 INamingConvention.get_SeparatorCharacter() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubINamingConvention.SplittingExpressionGet">
            <summary>设置 INamingConvention.get_SplittingExpression() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubINamingConvention.am::AutoMapper#INamingConvention#SeparatorCharacter">
            <summary>设置 INamingConvention.get_SeparatorCharacter() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubINamingConvention.am::AutoMapper#INamingConvention#SplittingExpression">
            <summary>设置 INamingConvention.get_SplittingExpression() 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIObjectMapper">
            <summary>AutoMapper.IObjectMapper 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIObjectMapper.#ctor">
            <summary>初始化 type StubIObjectMapper 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIObjectMapper.am::AutoMapper#IObjectMapper#IsMatch(AutoMapper.ResolutionContext)">
            <summary>设置 IObjectMapper.IsMatch(ResolutionContext context) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIObjectMapper.am::AutoMapper#IObjectMapper#Map(AutoMapper.ResolutionContext,AutoMapper.IMappingEngineRunner)">
            <summary>设置 IObjectMapper.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIObjectMapper.IsMatchResolutionContext">
            <summary>设置 IObjectMapper.IsMatch(ResolutionContext context) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIObjectMapper.MapResolutionContextIMappingEngineRunner">
            <summary>设置 IObjectMapper.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIProfileConfiguration">
            <summary>AutoMapper.IProfileConfiguration 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileConfiguration.#ctor">
            <summary>初始化 type StubIProfileConfiguration 的新实例</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileConfiguration.MapNullSourceCollectionsAsNullGet">
            <summary>设置 IProfileConfiguration.get_MapNullSourceCollectionsAsNull() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileConfiguration.MapNullSourceValuesAsNullGet">
            <summary>设置 IProfileConfiguration.get_MapNullSourceValuesAsNull() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIProfileConfiguration.am::AutoMapper#IProfileConfiguration#MapNullSourceCollectionsAsNull">
            <summary>设置 IProfileConfiguration.get_MapNullSourceCollectionsAsNull() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIProfileConfiguration.am::AutoMapper#IProfileConfiguration#MapNullSourceValuesAsNull">
            <summary>设置 IProfileConfiguration.get_MapNullSourceValuesAsNull() 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIProfileExpression">
            <summary>AutoMapper.IProfileExpression 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.#ctor">
            <summary>初始化 type StubIProfileExpression 的新实例</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.AddFormatExpressionFuncOfResolutionContextString">
            <summary>设置 IFormatterExpression.AddFormatExpression(Func`2&lt;ResolutionContext,String&gt; formatExpression) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.AddFormatterIValueFormatter">
            <summary>设置 IFormatterExpression.AddFormatter(IValueFormatter formatter) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.AddFormatterOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IFormatterCtorExpression{``0}})">
            <summary>设置 AddFormatter() 的存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.AddFormatterType">
            <summary>设置 IFormatterExpression.AddFormatter(Type valueFormatterType) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.AddGlobalIgnoreString">
            <summary>设置 IProfileExpression.AddGlobalIgnore(String propertyNameStartingWith) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.AliasesGet">
            <summary>设置 IMappingOptions.get_Aliases() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.AllowNullCollectionsGet">
            <summary>设置 IProfileExpression.get_AllowNullCollections() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.AllowNullCollectionsSetBoolean">
            <summary>设置 IProfileExpression.set_AllowNullCollections(Boolean value) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.AllowNullDestinationValuesGet">
            <summary>设置 IProfileExpression.get_AllowNullDestinationValues() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.AllowNullDestinationValuesSetBoolean">
            <summary>设置 IProfileExpression.set_AllowNullDestinationValues(Boolean value) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.AttachBackingFieldToAllowNullCollections">
            <summary>附加委托以将 StubIProfileExpression.AllowNullCollections 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.AttachBackingFieldToAllowNullDestinationValues">
            <summary>附加委托以将 StubIProfileExpression.AllowNullDestinationValues 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.AttachBackingFieldToDestinationMemberNamingConvention">
            <summary>附加委托以将 StubIProfileExpression.DestinationMemberNamingConvention 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.AttachBackingFieldToSourceMemberNamingConvention">
            <summary>附加委托以将 StubIProfileExpression.SourceMemberNamingConvention 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IFormatterExpression#AddFormatExpression(System.Func{AutoMapper.ResolutionContext,System.String})">
            <summary>设置 IFormatterExpression.AddFormatExpression(Func`2&lt;ResolutionContext,String&gt; formatExpression) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IFormatterExpression#AddFormatter(System.Type)">
            <summary>设置 IFormatterExpression.AddFormatter(Type valueFormatterType) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IFormatterExpression#AddFormatter(AutoMapper.IValueFormatter)">
            <summary>设置 IFormatterExpression.AddFormatter(IValueFormatter formatter) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IFormatterExpression#AddFormatter``1">
            <summary>设置 IFormatterExpression.AddFormatter() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IFormatterExpression#ForSourceType``1">
            <summary>设置 IFormatterExpression.ForSourceType() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IFormatterExpression#SkipFormatter``1">
            <summary>设置 IFormatterExpression.SkipFormatter() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IProfileExpression#AddGlobalIgnore(System.String)">
            <summary>设置 IProfileExpression.AddGlobalIgnore(String propertyNameStartingWith) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IProfileExpression#CreateMap(System.Type,System.Type)">
            <summary>设置 IProfileExpression.CreateMap(Type sourceType, Type destinationType) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IProfileExpression#CreateMap(System.Type,System.Type,AutoMapper.MemberList)">
            <summary>设置 IProfileExpression.CreateMap(Type sourceType, Type destinationType, MemberList memberList) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IProfileExpression#CreateMap``2">
            <summary>设置 IProfileExpression.CreateMap() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IProfileExpression#CreateMap``2(AutoMapper.MemberList)">
            <summary>设置 IProfileExpression.CreateMap(MemberList memberList) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IProfileExpression#IncludeSourceExtensionMethods(System.Reflection.Assembly)">
            <summary>设置 IProfileExpression.IncludeSourceExtensionMethods(Assembly assembly) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IProfileExpression#RecognizeAlias(System.String,System.String)">
            <summary>设置 IProfileExpression.RecognizeAlias(String original, String alias) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IProfileExpression#RecognizeDestinationPostfixes(System.String[])">
            <summary>设置 IProfileExpression.RecognizeDestinationPostfixes(String[] postfixes) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IProfileExpression#RecognizeDestinationPrefixes(System.String[])">
            <summary>设置 IProfileExpression.RecognizeDestinationPrefixes(String[] prefixes) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IProfileExpression#RecognizePostfixes(System.String[])">
            <summary>设置 IProfileExpression.RecognizePostfixes(String[] postfixes) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IProfileExpression#RecognizePrefixes(System.String[])">
            <summary>设置 IProfileExpression.RecognizePrefixes(String[] prefixes) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.ConstructorMappingEnabledGet">
            <summary>设置 IMappingOptions.get_ConstructorMappingEnabled() 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.CreateMapOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IMappingExpression{``0,``1}})">
            <summary>设置 CreateMap() 的存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.CreateMapOf2MemberList``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.MemberList,AutoMapper.IMappingExpression{``0,``1}})">
            <summary>设置 CreateMap(MemberList memberList) 的存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.CreateMapTypeType">
            <summary>设置 IProfileExpression.CreateMap(Type sourceType, Type destinationType) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.CreateMapTypeTypeMemberList">
            <summary>设置 IProfileExpression.CreateMap(Type sourceType, Type destinationType, MemberList memberList) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.DataReaderMapperYieldReturnEnabledGet">
            <summary>设置 IMappingOptions.get_DataReaderMapperYieldReturnEnabled() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.DestinationMemberNamingConventionGet">
            <summary>设置 IMappingOptions.get_DestinationMemberNamingConvention() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.DestinationMemberNamingConventionSetINamingConvention">
            <summary>设置 IMappingOptions.set_DestinationMemberNamingConvention(INamingConvention value) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.DestinationPostfixesGet">
            <summary>设置 IMappingOptions.get_DestinationPostfixes() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.DestinationPrefixesGet">
            <summary>设置 IMappingOptions.get_DestinationPrefixes() 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.ForSourceTypeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IFormatterExpression})">
            <summary>设置 ForSourceType() 的存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.IncludeSourceExtensionMethodsAssembly">
            <summary>设置 IProfileExpression.IncludeSourceExtensionMethods(Assembly assembly) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.PostfixesGet">
            <summary>设置 IMappingOptions.get_Postfixes() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.PrefixesGet">
            <summary>设置 IMappingOptions.get_Prefixes() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.RecognizeAliasStringString">
            <summary>设置 IProfileExpression.RecognizeAlias(String original, String alias) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.RecognizeDestinationPostfixesStringArray">
            <summary>设置 IProfileExpression.RecognizeDestinationPostfixes(String[] postfixes) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.RecognizeDestinationPrefixesStringArray">
            <summary>设置 IProfileExpression.RecognizeDestinationPrefixes(String[] prefixes) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.RecognizePostfixesStringArray">
            <summary>设置 IProfileExpression.RecognizePostfixes(String[] postfixes) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.RecognizePrefixesStringArray">
            <summary>设置 IProfileExpression.RecognizePrefixes(String[] prefixes) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIProfileExpression.SkipFormatterOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>设置 SkipFormatter() 的存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.SourceExtensionMethodsGet">
            <summary>设置 IMappingOptions.get_SourceExtensionMethods() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.SourceMemberNamingConventionGet">
            <summary>设置 IMappingOptions.get_SourceMemberNamingConvention() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIProfileExpression.SourceMemberNamingConventionSetINamingConvention">
            <summary>设置 IMappingOptions.set_SourceMemberNamingConvention(INamingConvention value) 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IMappingOptions#Aliases">
            <summary>设置 IMappingOptions.get_Aliases() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IProfileExpression#AllowNullCollections">
            <summary>设置 IProfileExpression.get_AllowNullCollections() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IProfileExpression#AllowNullDestinationValues">
            <summary>设置 IProfileExpression.get_AllowNullDestinationValues() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IMappingOptions#ConstructorMappingEnabled">
            <summary>设置 IMappingOptions.get_ConstructorMappingEnabled() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IMappingOptions#DataReaderMapperYieldReturnEnabled">
            <summary>设置 IMappingOptions.get_DataReaderMapperYieldReturnEnabled() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IMappingOptions#DestinationMemberNamingConvention">
            <summary>设置 IMappingOptions.get_DestinationMemberNamingConvention() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IMappingOptions#DestinationPostfixes">
            <summary>设置 IMappingOptions.get_DestinationPostfixes() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IMappingOptions#DestinationPrefixes">
            <summary>设置 IMappingOptions.get_DestinationPrefixes() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IMappingOptions#Postfixes">
            <summary>设置 IMappingOptions.get_Postfixes() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IMappingOptions#Prefixes">
            <summary>设置 IMappingOptions.get_Prefixes() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IMappingOptions#SourceExtensionMethods">
            <summary>设置 IMappingOptions.get_SourceExtensionMethods() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIProfileExpression.am::AutoMapper#IMappingOptions#SourceMemberNamingConvention">
            <summary>设置 IMappingOptions.get_SourceMemberNamingConvention() 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIResolutionExpression">
            <summary>AutoMapper.IResolutionExpression 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIResolutionExpression.#ctor">
            <summary>初始化 type StubIResolutionExpression 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIResolutionExpression.am::AutoMapper#IResolutionExpression#FromMember(System.String)">
            <summary>设置 IResolutionExpression.FromMember(String sourcePropertyName) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIResolutionExpression.FromMemberString">
            <summary>设置 IResolutionExpression.FromMember(String sourcePropertyName) 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIResolutionExpression`1">
            <summary>AutoMapper.IResolutionExpression`1 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIResolutionExpression`1.#ctor">
            <summary>初始化 type StubIResolutionExpression 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIResolutionExpression`1.am::AutoMapper#IResolutionExpression#FromMember(System.String)">
            <summary>设置 IResolutionExpression.FromMember(String sourcePropertyName) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIResolutionExpression`1.am::AutoMapper#IResolutionExpression{TSource}#FromMember(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>设置 IResolutionExpression`1.FromMember(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; sourceMember) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIResolutionExpression`1.FromMemberExpressionOfFuncOfT0Object">
            <summary>设置 IResolutionExpression`1.FromMember(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; sourceMember) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIResolutionExpression`1.FromMemberString">
            <summary>设置 IResolutionExpression.FromMember(String sourcePropertyName) 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIResolverConfigurationExpression">
            <summary>AutoMapper.IResolverConfigurationExpression 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIResolverConfigurationExpression.#ctor">
            <summary>初始化 type StubIResolverConfigurationExpression 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIResolverConfigurationExpression.am::AutoMapper#IResolutionExpression#FromMember(System.String)">
            <summary>设置 IResolutionExpression.FromMember(String sourcePropertyName) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIResolverConfigurationExpression.am::AutoMapper#IResolverConfigurationExpression#ConstructedBy(System.Func{AutoMapper.IValueResolver})">
            <summary>设置 IResolverConfigurationExpression.ConstructedBy(Func`1&lt;IValueResolver&gt; constructor) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIResolverConfigurationExpression.ConstructedByFuncOfIValueResolver">
            <summary>设置 IResolverConfigurationExpression.ConstructedBy(Func`1&lt;IValueResolver&gt; constructor) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIResolverConfigurationExpression.FromMemberString">
            <summary>设置 IResolutionExpression.FromMember(String sourcePropertyName) 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIResolverConfigurationExpression`1">
            <summary>AutoMapper.IResolverConfigurationExpression`1 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIResolverConfigurationExpression`1.#ctor">
            <summary>初始化 type StubIResolverConfigurationExpression 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIResolverConfigurationExpression`1.am::AutoMapper#IResolutionExpression#FromMember(System.String)">
            <summary>设置 IResolutionExpression.FromMember(String sourcePropertyName) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIResolverConfigurationExpression`1.am::AutoMapper#IResolutionExpression{TSource}#FromMember(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>设置 IResolutionExpression`1.FromMember(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; sourceMember) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIResolverConfigurationExpression`1.am::AutoMapper#IResolverConfigurationExpression{TSource}#ConstructedBy(System.Func{AutoMapper.IValueResolver})">
            <summary>设置 IResolverConfigurationExpression`1.ConstructedBy(Func`1&lt;IValueResolver&gt; constructor) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIResolverConfigurationExpression`1.ConstructedByFuncOfIValueResolver">
            <summary>设置 IResolverConfigurationExpression`1.ConstructedBy(Func`1&lt;IValueResolver&gt; constructor) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIResolverConfigurationExpression`1.FromMemberExpressionOfFuncOfT0Object">
            <summary>设置 IResolutionExpression`1.FromMember(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; sourceMember) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIResolverConfigurationExpression`1.FromMemberString">
            <summary>设置 IResolutionExpression.FromMember(String sourcePropertyName) 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIResolverConfigurationExpression`2">
            <summary>AutoMapper.IResolverConfigurationExpression`2 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIResolverConfigurationExpression`2.#ctor">
            <summary>初始化 type StubIResolverConfigurationExpression 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIResolverConfigurationExpression`2.am::AutoMapper#IResolverConfigurationExpression{TSource@TValueResolver}#ConstructedBy(System.Func{`1})">
            <summary>设置 IResolverConfigurationExpression`2.ConstructedBy(Func`1&lt;!1&gt; constructor) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIResolverConfigurationExpression`2.am::AutoMapper#IResolverConfigurationExpression{TSource@TValueResolver}#FromMember(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>设置 IResolverConfigurationExpression`2.FromMember(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; sourceMember) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIResolverConfigurationExpression`2.am::AutoMapper#IResolverConfigurationExpression{TSource@TValueResolver}#FromMember(System.String)">
            <summary>设置 IResolverConfigurationExpression`2.FromMember(String sourcePropertyName) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIResolverConfigurationExpression`2.ConstructedByFuncOfT1">
            <summary>设置 IResolverConfigurationExpression`2.ConstructedBy(Func`1&lt;!1&gt; constructor) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIResolverConfigurationExpression`2.FromMemberExpressionOfFuncOfT0Object">
            <summary>设置 IResolverConfigurationExpression`2.FromMember(Expression`1&lt;Func`2&lt;!0,Object&gt;&gt; sourceMember) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIResolverConfigurationExpression`2.FromMemberString">
            <summary>设置 IResolverConfigurationExpression`2.FromMember(String sourcePropertyName) 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubISourceMemberConfigurationExpression">
            <summary>AutoMapper.ISourceMemberConfigurationExpression 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubISourceMemberConfigurationExpression.#ctor">
            <summary>初始化 type StubISourceMemberConfigurationExpression 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubISourceMemberConfigurationExpression.am::AutoMapper#ISourceMemberConfigurationExpression#Ignore">
            <summary>设置 ISourceMemberConfigurationExpression.Ignore() 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubISourceMemberConfigurationExpression.Ignore">
            <summary>设置 ISourceMemberConfigurationExpression.Ignore() 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubISourceMemberConfigurationExpression`1">
            <summary>AutoMapper.ISourceMemberConfigurationExpression`1 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubISourceMemberConfigurationExpression`1.#ctor">
            <summary>初始化 type StubISourceMemberConfigurationExpression 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubISourceMemberConfigurationExpression`1.am::AutoMapper#ISourceMemberConfigurationExpression#Ignore">
            <summary>设置 ISourceMemberConfigurationExpression.Ignore() 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubISourceMemberConfigurationExpression`1.Ignore">
            <summary>设置 ISourceMemberConfigurationExpression.Ignore() 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubITypeConverter`2">
            <summary>AutoMapper.ITypeConverter`2 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubITypeConverter`2.#ctor">
            <summary>初始化 type StubITypeConverter 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubITypeConverter`2.am::AutoMapper#ITypeConverter{TSource@TDestination}#Convert(AutoMapper.ResolutionContext)">
            <summary>设置 ITypeConverter`2.Convert(ResolutionContext context) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubITypeConverter`2.ConvertResolutionContext">
            <summary>设置 ITypeConverter`2.Convert(ResolutionContext context) 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubITypeMapFactory">
            <summary>AutoMapper.ITypeMapFactory 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubITypeMapFactory.#ctor">
            <summary>初始化 type StubITypeMapFactory 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubITypeMapFactory.am::AutoMapper#ITypeMapFactory#CreateTypeMap(System.Type,System.Type,AutoMapper.IMappingOptions,AutoMapper.MemberList)">
            <summary>设置 ITypeMapFactory.CreateTypeMap(Type sourceType, Type destinationType, IMappingOptions mappingOptions, MemberList memberList) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubITypeMapFactory.CreateTypeMapTypeTypeIMappingOptionsMemberList">
            <summary>设置 ITypeMapFactory.CreateTypeMap(Type sourceType, Type destinationType, IMappingOptions mappingOptions, MemberList memberList) 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIValueResolver">
            <summary>AutoMapper.IValueResolver 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIValueResolver.#ctor">
            <summary>初始化 type StubIValueResolver 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIValueResolver.am::AutoMapper#IValueResolver#Resolve(AutoMapper.ResolutionResult)">
            <summary>设置 IValueResolver.Resolve(ResolutionResult source) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIValueResolver.ResolveResolutionResult">
            <summary>设置 IValueResolver.Resolve(ResolutionResult source) 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubIgnoreMapAttribute">
            <summary>AutoMapper.IgnoreMapAttribute 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIgnoreMapAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIgnoreMapAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIgnoreMapAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIgnoreMapAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIgnoreMapAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIgnoreMapAttribute.InitializeStub">
            <summary>初始化 type StubIgnoreMapAttribute 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIgnoreMapAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIgnoreMapAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubIgnoreMapAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIgnoreMapAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubIgnoreMapAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIgnoreMapAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIgnoreMapAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIgnoreMapAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubIgnoreMapAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubLowerUnderscoreNamingConvention">
            <summary>AutoMapper.LowerUnderscoreNamingConvention 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubLowerUnderscoreNamingConvention.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubLowerUnderscoreNamingConvention.InitializeStub">
            <summary>初始化 type StubLowerUnderscoreNamingConvention 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubLowerUnderscoreNamingConvention.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubLowerUnderscoreNamingConvention.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubLowerUnderscoreNamingConvention.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubMappingEngine">
            <summary>AutoMapper.MappingEngine 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubMappingEngine.#ctor(AutoMapper.IConfigurationProvider)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubMappingEngine.#ctor(AutoMapper.IConfigurationProvider,AutoMapper.Internal.IDictionary{AutoMapper.Impl.TypePair,AutoMapper.IObjectMapper},System.Func{System.Type,System.Object})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubMappingEngine.Dispose(System.Boolean)">
            <summary>设置 MappingEngine.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubMappingEngine.DisposeBoolean">
            <summary>设置 MappingEngine.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubMappingEngine.InitializeStub">
            <summary>初始化 type StubMappingEngine 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubMappingEngine.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubMappingEngine.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubMappingEngine.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubMappingExpression">
            <summary>AutoMapper.MappingExpression 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubMappingExpression.#ctor(AutoMapper.TypeMap,System.Func{System.Type,System.Object})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubMappingExpression.InitializeStub">
            <summary>初始化 type StubMappingExpression 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubMappingExpression.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubMappingExpression.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubMappingExpression.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubMappingExpression`2">
            <summary>AutoMapper.MappingExpression`2 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubMappingExpression`2.#ctor(AutoMapper.TypeMap,System.Func{System.Type,System.Object},AutoMapper.IProfileExpression)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubMappingExpression`2.InitializeStub">
            <summary>初始化 type StubMappingExpression 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubMappingExpression`2.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubMappingExpression`2.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubMappingExpression`2.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubMappingOperationOptions">
            <summary>AutoMapper.MappingOperationOptions 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubMappingOperationOptions.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubMappingOperationOptions.InitializeStub">
            <summary>初始化 type StubMappingOperationOptions 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubMappingOperationOptions.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubMappingOperationOptions.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubMappingOperationOptions.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubNullReferenceExceptionSwallowingResolver">
            <summary>AutoMapper.NullReferenceExceptionSwallowingResolver 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubNullReferenceExceptionSwallowingResolver.#ctor(AutoMapper.IMemberResolver)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubNullReferenceExceptionSwallowingResolver.InitializeStub">
            <summary>初始化 type StubNullReferenceExceptionSwallowingResolver 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubNullReferenceExceptionSwallowingResolver.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubNullReferenceExceptionSwallowingResolver.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubNullReferenceExceptionSwallowingResolver.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubNullReplacementMethod">
            <summary>AutoMapper.NullReplacementMethod 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubNullReplacementMethod.#ctor(System.Object)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubNullReplacementMethod.InitializeStub">
            <summary>初始化 type StubNullReplacementMethod 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubNullReplacementMethod.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubNullReplacementMethod.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubNullReplacementMethod.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubPascalCaseNamingConvention">
            <summary>AutoMapper.PascalCaseNamingConvention 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubPascalCaseNamingConvention.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubPascalCaseNamingConvention.InitializeStub">
            <summary>初始化 type StubPascalCaseNamingConvention 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubPascalCaseNamingConvention.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubPascalCaseNamingConvention.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubPascalCaseNamingConvention.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubProfile">
            <summary>AutoMapper.Profile 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubProfile.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubProfile.Configure">
            <summary>设置 Profile.Configure() 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubProfile.Configure01">
            <summary>设置 Profile.Configure() 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubProfile.InitializeStub">
            <summary>初始化 type StubProfile 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubProfile.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubProfile.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubProfile.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubPropertyMap">
            <summary>AutoMapper.PropertyMap 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubPropertyMap.#ctor(AutoMapper.IMemberAccessor)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubPropertyMap.#ctor(AutoMapper.PropertyMap)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubPropertyMap.Equals(System.Object)">
            <summary>设置 PropertyMap.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubPropertyMap.EqualsObject">
            <summary>设置 PropertyMap.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubPropertyMap.GetHashCode">
            <summary>设置 PropertyMap.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubPropertyMap.GetHashCode01">
            <summary>设置 PropertyMap.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubPropertyMap.InitializeStub">
            <summary>初始化 type StubPropertyMap 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubPropertyMap.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubPropertyMap.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubPropertyMap.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubPropertyNameResolver">
            <summary>AutoMapper.PropertyNameResolver 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubPropertyNameResolver.#ctor(System.Type,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubPropertyNameResolver.InitializeStub">
            <summary>初始化 type StubPropertyNameResolver 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubPropertyNameResolver.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubPropertyNameResolver.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubPropertyNameResolver.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubResolutionContext">
            <summary>AutoMapper.ResolutionContext 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubResolutionContext.#ctor(AutoMapper.TypeMap,System.Object,System.Type,System.Type,AutoMapper.MappingOperationOptions,AutoMapper.IMappingEngine)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubResolutionContext.#ctor(AutoMapper.TypeMap,System.Object,System.Object,System.Type,System.Type,AutoMapper.MappingOperationOptions,AutoMapper.IMappingEngine)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubResolutionContext.Equals(System.Object)">
            <summary>设置 ResolutionContext.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubResolutionContext.EqualsObject">
            <summary>设置 ResolutionContext.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubResolutionContext.GetHashCode">
            <summary>设置 ResolutionContext.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubResolutionContext.GetHashCode01">
            <summary>设置 ResolutionContext.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubResolutionContext.InitializeStub">
            <summary>初始化 type StubResolutionContext 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubResolutionContext.ToString">
            <summary>设置 ResolutionContext.ToString() 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubResolutionContext.ToString01">
            <summary>设置 ResolutionContext.ToString() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubResolutionContext.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubResolutionContext.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubResolutionContext.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubResolutionExpression">
            <summary>AutoMapper.ResolutionExpression 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubResolutionExpression.#ctor(System.Type,AutoMapper.PropertyMap)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubResolutionExpression.InitializeStub">
            <summary>初始化 type StubResolutionExpression 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubResolutionExpression.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubResolutionExpression.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubResolutionExpression.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubResolutionExpression`1">
            <summary>AutoMapper.ResolutionExpression`1 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubResolutionExpression`1.#ctor(AutoMapper.PropertyMap)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubResolutionExpression`1.#ctor(System.Type,AutoMapper.PropertyMap)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubResolutionExpression`1.InitializeStub">
            <summary>初始化 type StubResolutionExpression 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubResolutionExpression`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubResolutionExpression`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubResolutionExpression`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubResolutionExpression`2">
            <summary>AutoMapper.ResolutionExpression`2 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubResolutionExpression`2.#ctor(AutoMapper.PropertyMap)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubResolutionExpression`2.InitializeStub">
            <summary>初始化 type StubResolutionExpression 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubResolutionExpression`2.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubResolutionExpression`2.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubResolutionExpression`2.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubResolutionResult">
            <summary>AutoMapper.ResolutionResult 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubResolutionResult.#ctor(AutoMapper.ResolutionContext)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubResolutionResult.InitializeStub">
            <summary>初始化 type StubResolutionResult 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubResolutionResult.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubResolutionResult.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubResolutionResult.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubSourceMemberConfig">
            <summary>AutoMapper.SourceMemberConfig 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubSourceMemberConfig.#ctor(System.Reflection.MemberInfo)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubSourceMemberConfig.InitializeStub">
            <summary>初始化 type StubSourceMemberConfig 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubSourceMemberConfig.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubSourceMemberConfig.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubSourceMemberConfig.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubThreadSafeList`1">
            <summary>AutoMapper.ThreadSafeList`1 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubThreadSafeList`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubThreadSafeList`1.Dispose(System.Boolean)">
            <summary>设置 ThreadSafeList`1.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubThreadSafeList`1.DisposeBoolean">
            <summary>设置 ThreadSafeList`1.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubThreadSafeList`1.InitializeStub">
            <summary>初始化 type StubThreadSafeList 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubThreadSafeList`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubThreadSafeList`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubThreadSafeList`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubTypeConverter`2">
            <summary>AutoMapper.TypeConverter`2 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubTypeConverter`2.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubTypeConverter`2.ConvertCore(`0)">
            <summary>设置 TypeConverter`2.ConvertCore(!0 source) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubTypeConverter`2.ConvertCoreT0">
            <summary>设置 TypeConverter`2.ConvertCore(!0 source) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubTypeConverter`2.InitializeStub">
            <summary>初始化 type StubTypeConverter 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubTypeConverter`2.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubTypeConverter`2.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubTypeConverter`2.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubTypeInfo">
            <summary>AutoMapper.TypeInfo 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubTypeInfo.#ctor(System.Type)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubTypeInfo.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Reflection.MethodInfo})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubTypeInfo.InitializeStub">
            <summary>初始化 type StubTypeInfo 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubTypeInfo.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubTypeInfo.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubTypeInfo.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubTypeMap">
            <summary>AutoMapper.TypeMap 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubTypeMap.#ctor(AutoMapper.TypeInfo,AutoMapper.TypeInfo,AutoMapper.MemberList)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubTypeMap.Equals(System.Object)">
            <summary>设置 TypeMap.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubTypeMap.EqualsObject">
            <summary>设置 TypeMap.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubTypeMap.GetHashCode">
            <summary>设置 TypeMap.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubTypeMap.GetHashCode01">
            <summary>设置 TypeMap.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubTypeMap.InitializeStub">
            <summary>初始化 type StubTypeMap 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubTypeMap.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubTypeMap.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubTypeMap.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubTypeMapCreatedEventArgs">
            <summary>AutoMapper.TypeMapCreatedEventArgs 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubTypeMapCreatedEventArgs.#ctor(AutoMapper.TypeMap)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubTypeMapCreatedEventArgs.InitializeStub">
            <summary>初始化 type StubTypeMapCreatedEventArgs 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubTypeMapCreatedEventArgs.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubTypeMapCreatedEventArgs.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubTypeMapCreatedEventArgs.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubTypeMapFactory">
            <summary>AutoMapper.TypeMapFactory 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubTypeMapFactory.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubTypeMapFactory.InitializeStub">
            <summary>初始化 type StubTypeMapFactory 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubTypeMapFactory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubTypeMapFactory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubTypeMapFactory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubValueFormatter`1">
            <summary>AutoMapper.ValueFormatter`1 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubValueFormatter`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubValueFormatter`1.FormatValueCore(`0)">
            <summary>设置 ValueFormatter`1.FormatValueCore(!0 value) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubValueFormatter`1.FormatValueCoreT0">
            <summary>设置 ValueFormatter`1.FormatValueCore(!0 value) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubValueFormatter`1.InitializeStub">
            <summary>初始化 type StubValueFormatter 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubValueFormatter`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubValueFormatter`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubValueFormatter`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Fakes.StubValueResolver`2">
            <summary>AutoMapper.ValueResolver`2 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubValueResolver`2.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubValueResolver`2.InitializeStub">
            <summary>初始化 type StubValueResolver 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Fakes.StubValueResolver`2.ResolveCore(`0)">
            <summary>设置 ValueResolver`2.ResolveCore(!0 source) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Fakes.StubValueResolver`2.ResolveCoreT0">
            <summary>设置 ValueResolver`2.ResolveCore(!0 source) 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubValueResolver`2.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubValueResolver`2.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Fakes.StubValueResolver`2.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Impl.Fakes.ShimFieldAccessor">
            <summary>AutoMapper.Impl.FieldAccessor 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimFieldAccessor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimFieldAccessor.#ctor(AutoMapper.Impl.FieldAccessor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimFieldAccessor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimFieldAccessor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimFieldAccessor.Bind(AutoMapper.IMemberAccessor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimFieldAccessor.Bind(AutoMapper.IMemberGetter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimFieldAccessor.Bind(AutoMapper.IMemberResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimFieldAccessor.Bind(AutoMapper.IValueResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimFieldAccessor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimFieldAccessor.ConstructorFieldInfo">
            <summary>设置 FieldAccessor.FieldAccessor(FieldInfo fieldInfo) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimFieldAccessor.SetValueObjectObject">
            <summary>设置 FieldAccessor.SetValue(Object destination, Object value) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Impl.Fakes.ShimFieldAccessor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimFieldAccessor.AllInstances.SetValueObjectObject">
            <summary>设置 FieldAccessor.SetValue(Object destination, Object value) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Impl.Fakes.ShimFieldGetter">
            <summary>AutoMapper.Impl.FieldGetter 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimFieldGetter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimFieldGetter.#ctor(AutoMapper.Impl.FieldGetter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimFieldGetter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimFieldGetter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimFieldGetter.Bind(AutoMapper.IMemberGetter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimFieldGetter.Bind(AutoMapper.IMemberResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimFieldGetter.Bind(AutoMapper.IValueResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimFieldGetter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimFieldGetter.ConstructorFieldInfo">
            <summary>设置 FieldGetter.FieldGetter(FieldInfo fieldInfo) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimFieldGetter.EqualsFieldGetter">
            <summary>设置 FieldGetter.Equals(FieldGetter other) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimFieldGetter.EqualsObject">
            <summary>设置 FieldGetter.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimFieldGetter.GetCustomAttributesBoolean">
            <summary>设置 FieldGetter.GetCustomAttributes(Boolean inherit) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimFieldGetter.GetCustomAttributesTypeBoolean">
            <summary>设置 FieldGetter.GetCustomAttributes(Type attributeType, Boolean inherit) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimFieldGetter.GetHashCode">
            <summary>设置 FieldGetter.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimFieldGetter.GetValueObject">
            <summary>设置 FieldGetter.GetValue(Object source) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimFieldGetter.IsDefinedTypeBoolean">
            <summary>设置 FieldGetter.IsDefined(Type attributeType, Boolean inherit) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimFieldGetter.MemberInfoGet">
            <summary>设置 FieldGetter.get_MemberInfo() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimFieldGetter.MemberTypeGet">
            <summary>设置 FieldGetter.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimFieldGetter.NameGet">
            <summary>设置 FieldGetter.get_Name() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Impl.Fakes.ShimFieldGetter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimFieldGetter.AllInstances.EqualsFieldGetter">
            <summary>设置 FieldGetter.Equals(FieldGetter other) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimFieldGetter.AllInstances.EqualsObject">
            <summary>设置 FieldGetter.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimFieldGetter.AllInstances.GetCustomAttributesBoolean">
            <summary>设置 FieldGetter.GetCustomAttributes(Boolean inherit) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimFieldGetter.AllInstances.GetCustomAttributesTypeBoolean">
            <summary>设置 FieldGetter.GetCustomAttributes(Type attributeType, Boolean inherit) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimFieldGetter.AllInstances.GetHashCode01">
            <summary>设置 FieldGetter.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimFieldGetter.AllInstances.GetValueObject">
            <summary>设置 FieldGetter.GetValue(Object source) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimFieldGetter.AllInstances.IsDefinedTypeBoolean">
            <summary>设置 FieldGetter.IsDefined(Type attributeType, Boolean inherit) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimFieldGetter.AllInstances.MemberInfoGet">
            <summary>设置 FieldGetter.get_MemberInfo() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimFieldGetter.AllInstances.MemberTypeGet">
            <summary>设置 FieldGetter.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimFieldGetter.AllInstances.NameGet">
            <summary>设置 FieldGetter.get_Name() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Impl.Fakes.ShimMemberGetter">
            <summary>AutoMapper.Impl.MemberGetter 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimMemberGetter.#ctor(AutoMapper.Impl.MemberGetter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimMemberGetter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimMemberGetter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimMemberGetter.Bind(AutoMapper.IMemberGetter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimMemberGetter.Bind(AutoMapper.IMemberResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimMemberGetter.Bind(AutoMapper.IValueResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimMemberGetter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimMemberGetter.Constructor">
            <summary>设置 MemberGetter.MemberGetter() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimMemberGetter.ResolveResolutionResult">
            <summary>设置 MemberGetter.Resolve(ResolutionResult source) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimMemberGetter.StaticConstructor">
            <summary>设置 MemberGetter.MemberGetter() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Impl.Fakes.ShimMemberGetter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimMemberGetter.AllInstances.ResolveResolutionResult">
            <summary>设置 MemberGetter.Resolve(ResolutionResult source) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Impl.Fakes.ShimMethodGetter">
            <summary>AutoMapper.Impl.MethodGetter 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimMethodGetter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimMethodGetter.#ctor(AutoMapper.Impl.MethodGetter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimMethodGetter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimMethodGetter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimMethodGetter.Bind(AutoMapper.IMemberGetter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimMethodGetter.Bind(AutoMapper.IMemberResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimMethodGetter.Bind(AutoMapper.IValueResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimMethodGetter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimMethodGetter.ConstructorMethodInfo">
            <summary>设置 MethodGetter.MethodGetter(MethodInfo methodInfo) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimMethodGetter.EqualsMethodGetter">
            <summary>设置 MethodGetter.Equals(MethodGetter other) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimMethodGetter.EqualsObject">
            <summary>设置 MethodGetter.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimMethodGetter.GetCustomAttributesBoolean">
            <summary>设置 MethodGetter.GetCustomAttributes(Boolean inherit) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimMethodGetter.GetCustomAttributesTypeBoolean">
            <summary>设置 MethodGetter.GetCustomAttributes(Type attributeType, Boolean inherit) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimMethodGetter.GetHashCode">
            <summary>设置 MethodGetter.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimMethodGetter.GetValueObject">
            <summary>设置 MethodGetter.GetValue(Object source) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimMethodGetter.IsDefinedTypeBoolean">
            <summary>设置 MethodGetter.IsDefined(Type attributeType, Boolean inherit) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimMethodGetter.MemberInfoGet">
            <summary>设置 MethodGetter.get_MemberInfo() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimMethodGetter.MemberTypeGet">
            <summary>设置 MethodGetter.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimMethodGetter.NameGet">
            <summary>设置 MethodGetter.get_Name() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Impl.Fakes.ShimMethodGetter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimMethodGetter.AllInstances.EqualsMethodGetter">
            <summary>设置 MethodGetter.Equals(MethodGetter other) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimMethodGetter.AllInstances.EqualsObject">
            <summary>设置 MethodGetter.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimMethodGetter.AllInstances.GetCustomAttributesBoolean">
            <summary>设置 MethodGetter.GetCustomAttributes(Boolean inherit) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimMethodGetter.AllInstances.GetCustomAttributesTypeBoolean">
            <summary>设置 MethodGetter.GetCustomAttributes(Type attributeType, Boolean inherit) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimMethodGetter.AllInstances.GetHashCode01">
            <summary>设置 MethodGetter.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimMethodGetter.AllInstances.GetValueObject">
            <summary>设置 MethodGetter.GetValue(Object source) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimMethodGetter.AllInstances.IsDefinedTypeBoolean">
            <summary>设置 MethodGetter.IsDefined(Type attributeType, Boolean inherit) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimMethodGetter.AllInstances.MemberInfoGet">
            <summary>设置 MethodGetter.get_MemberInfo() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimMethodGetter.AllInstances.MemberTypeGet">
            <summary>设置 MethodGetter.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimMethodGetter.AllInstances.NameGet">
            <summary>设置 MethodGetter.get_Name() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Impl.Fakes.ShimPropertyAccessor">
            <summary>AutoMapper.Impl.PropertyAccessor 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimPropertyAccessor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimPropertyAccessor.#ctor(AutoMapper.Impl.PropertyAccessor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimPropertyAccessor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimPropertyAccessor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimPropertyAccessor.Bind(AutoMapper.IMemberAccessor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimPropertyAccessor.Bind(AutoMapper.IMemberGetter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimPropertyAccessor.Bind(AutoMapper.IMemberResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimPropertyAccessor.Bind(AutoMapper.IValueResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimPropertyAccessor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimPropertyAccessor.ConstructorPropertyInfo">
            <summary>设置 PropertyAccessor.PropertyAccessor(PropertyInfo propertyInfo) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimPropertyAccessor.HasSetterGet">
            <summary>设置 PropertyAccessor.get_HasSetter() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimPropertyAccessor.SetValueObjectObject">
            <summary>设置 PropertyAccessor.SetValue(Object destination, Object value) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Impl.Fakes.ShimPropertyAccessor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimPropertyAccessor.AllInstances.HasSetterGet">
            <summary>设置 PropertyAccessor.get_HasSetter() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimPropertyAccessor.AllInstances.SetValueObjectObject">
            <summary>设置 PropertyAccessor.SetValue(Object destination, Object value) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Impl.Fakes.ShimPropertyGetter">
            <summary>AutoMapper.Impl.PropertyGetter 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimPropertyGetter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimPropertyGetter.#ctor(AutoMapper.Impl.PropertyGetter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimPropertyGetter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimPropertyGetter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimPropertyGetter.Bind(AutoMapper.IMemberGetter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimPropertyGetter.Bind(AutoMapper.IMemberResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimPropertyGetter.Bind(AutoMapper.IValueResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimPropertyGetter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimPropertyGetter.ConstructorPropertyInfo">
            <summary>设置 PropertyGetter.PropertyGetter(PropertyInfo propertyInfo) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimPropertyGetter.EqualsObject">
            <summary>设置 PropertyGetter.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimPropertyGetter.EqualsPropertyGetter">
            <summary>设置 PropertyGetter.Equals(PropertyGetter other) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimPropertyGetter.GetCustomAttributesBoolean">
            <summary>设置 PropertyGetter.GetCustomAttributes(Boolean inherit) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimPropertyGetter.GetCustomAttributesTypeBoolean">
            <summary>设置 PropertyGetter.GetCustomAttributes(Type attributeType, Boolean inherit) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimPropertyGetter.GetHashCode">
            <summary>设置 PropertyGetter.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimPropertyGetter.GetValueObject">
            <summary>设置 PropertyGetter.GetValue(Object source) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimPropertyGetter.IsDefinedTypeBoolean">
            <summary>设置 PropertyGetter.IsDefined(Type attributeType, Boolean inherit) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimPropertyGetter.MemberInfoGet">
            <summary>设置 PropertyGetter.get_MemberInfo() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimPropertyGetter.MemberTypeGet">
            <summary>设置 PropertyGetter.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimPropertyGetter.NameGet">
            <summary>设置 PropertyGetter.get_Name() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimPropertyGetter._ctorb__0Object">
            <summary>设置 PropertyGetter.&lt;.ctor&gt;b__0(Object src) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Impl.Fakes.ShimPropertyGetter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimPropertyGetter.AllInstances.EqualsObject">
            <summary>设置 PropertyGetter.Equals(Object obj) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimPropertyGetter.AllInstances.EqualsPropertyGetter">
            <summary>设置 PropertyGetter.Equals(PropertyGetter other) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimPropertyGetter.AllInstances.GetCustomAttributesBoolean">
            <summary>设置 PropertyGetter.GetCustomAttributes(Boolean inherit) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimPropertyGetter.AllInstances.GetCustomAttributesTypeBoolean">
            <summary>设置 PropertyGetter.GetCustomAttributes(Type attributeType, Boolean inherit) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimPropertyGetter.AllInstances.GetHashCode01">
            <summary>设置 PropertyGetter.GetHashCode() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimPropertyGetter.AllInstances.GetValueObject">
            <summary>设置 PropertyGetter.GetValue(Object source) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimPropertyGetter.AllInstances.IsDefinedTypeBoolean">
            <summary>设置 PropertyGetter.IsDefined(Type attributeType, Boolean inherit) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimPropertyGetter.AllInstances.MemberInfoGet">
            <summary>设置 PropertyGetter.get_MemberInfo() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimPropertyGetter.AllInstances.MemberTypeGet">
            <summary>设置 PropertyGetter.get_MemberType() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimPropertyGetter.AllInstances.NameGet">
            <summary>设置 PropertyGetter.get_Name() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Impl.Fakes.ShimProxyBase">
            <summary>AutoMapper.Impl.ProxyBase 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimProxyBase.#ctor(AutoMapper.Impl.ProxyBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimProxyBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimProxyBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimProxyBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimProxyBase.Constructor">
            <summary>设置 ProxyBase.ProxyBase() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimProxyBase.NotifyPropertyChangedPropertyChangedEventHandlerString">
            <summary>设置 ProxyBase.NotifyPropertyChanged(PropertyChangedEventHandler handler, String method) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Impl.Fakes.ShimProxyBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimProxyBase.AllInstances.NotifyPropertyChangedPropertyChangedEventHandlerString">
            <summary>设置 ProxyBase.NotifyPropertyChanged(PropertyChangedEventHandler handler, String method) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Impl.Fakes.ShimReflectionHelper">
            <summary>AutoMapper.Impl.ReflectionHelper 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimReflectionHelper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimReflectionHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimReflectionHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimReflectionHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimReflectionHelper.FindPropertyLambdaExpression">
            <summary>设置 ReflectionHelper.FindProperty(LambdaExpression lambdaExpression) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimReflectionHelper.GetMemberTypeMemberInfo">
            <summary>设置 ReflectionHelper.GetMemberType(MemberInfo memberInfo) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimReflectionHelper.ToMemberAccessorMemberInfo">
            <summary>设置 ReflectionHelper.ToMemberAccessor(MemberInfo accessorCandidate) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimReflectionHelper.ToMemberGetterMemberInfo">
            <summary>设置 ReflectionHelper.ToMemberGetter(MemberInfo accessorCandidate) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Impl.Fakes.ShimTypePair">
            <summary>AutoMapper.Impl.TypePair 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimTypePair.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimTypePair.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimTypePair.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimTypePair.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:AutoMapper.Impl.Fakes.ShimTypePair.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:AutoMapper.Impl.Fakes.ShimValueTypeFieldAccessor">
            <summary>AutoMapper.Impl.ValueTypeFieldAccessor 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimValueTypeFieldAccessor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimValueTypeFieldAccessor.#ctor(AutoMapper.Impl.ValueTypeFieldAccessor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimValueTypeFieldAccessor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimValueTypeFieldAccessor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimValueTypeFieldAccessor.Bind(AutoMapper.IMemberAccessor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimValueTypeFieldAccessor.Bind(AutoMapper.IMemberGetter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimValueTypeFieldAccessor.Bind(AutoMapper.IMemberResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimValueTypeFieldAccessor.Bind(AutoMapper.IValueResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimValueTypeFieldAccessor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimValueTypeFieldAccessor.ConstructorFieldInfo">
            <summary>设置 ValueTypeFieldAccessor.ValueTypeFieldAccessor(FieldInfo fieldInfo) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimValueTypeFieldAccessor.SetValueObjectObject">
            <summary>设置 ValueTypeFieldAccessor.SetValue(Object destination, Object value) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Impl.Fakes.ShimValueTypeFieldAccessor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimValueTypeFieldAccessor.AllInstances.SetValueObjectObject">
            <summary>设置 ValueTypeFieldAccessor.SetValue(Object destination, Object value) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Impl.Fakes.ShimValueTypePropertyAccessor">
            <summary>AutoMapper.Impl.ValueTypePropertyAccessor 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimValueTypePropertyAccessor.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimValueTypePropertyAccessor.#ctor(AutoMapper.Impl.ValueTypePropertyAccessor)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimValueTypePropertyAccessor.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimValueTypePropertyAccessor.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimValueTypePropertyAccessor.Bind(AutoMapper.IMemberAccessor)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimValueTypePropertyAccessor.Bind(AutoMapper.IMemberGetter)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimValueTypePropertyAccessor.Bind(AutoMapper.IMemberResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.ShimValueTypePropertyAccessor.Bind(AutoMapper.IValueResolver)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimValueTypePropertyAccessor.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimValueTypePropertyAccessor.ConstructorPropertyInfo">
            <summary>设置 ValueTypePropertyAccessor.ValueTypePropertyAccessor(PropertyInfo propertyInfo) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimValueTypePropertyAccessor.HasSetterGet">
            <summary>设置 ValueTypePropertyAccessor.get_HasSetter() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimValueTypePropertyAccessor.SetValueObjectObject">
            <summary>设置 ValueTypePropertyAccessor.SetValue(Object destination, Object value) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Impl.Fakes.ShimValueTypePropertyAccessor.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimValueTypePropertyAccessor.AllInstances.HasSetterGet">
            <summary>设置 ValueTypePropertyAccessor.get_HasSetter() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.ShimValueTypePropertyAccessor.AllInstances.SetValueObjectObject">
            <summary>设置 ValueTypePropertyAccessor.SetValue(Object destination, Object value) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Impl.Fakes.StubFieldAccessor">
            <summary>AutoMapper.Impl.FieldAccessor 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubFieldAccessor.#ctor(System.Reflection.FieldInfo)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubFieldAccessor.Equals(System.Object)">
            <summary>设置 FieldGetter.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubFieldAccessor.EqualsObject">
            <summary>设置 FieldGetter.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubFieldAccessor.GetCustomAttributes(System.Boolean)">
            <summary>设置 FieldGetter.GetCustomAttributes(Boolean inherit) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubFieldAccessor.GetCustomAttributes(System.Type,System.Boolean)">
            <summary>设置 FieldGetter.GetCustomAttributes(Type attributeType, Boolean inherit) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubFieldAccessor.GetCustomAttributesBoolean">
            <summary>设置 FieldGetter.GetCustomAttributes(Boolean inherit) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubFieldAccessor.GetCustomAttributesTypeBoolean">
            <summary>设置 FieldGetter.GetCustomAttributes(Type attributeType, Boolean inherit) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubFieldAccessor.GetHashCode">
            <summary>设置 FieldGetter.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubFieldAccessor.GetHashCode01">
            <summary>设置 FieldGetter.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubFieldAccessor.GetValue(System.Object)">
            <summary>设置 FieldGetter.GetValue(Object source) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubFieldAccessor.GetValueObject">
            <summary>设置 FieldGetter.GetValue(Object source) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubFieldAccessor.InitializeStub">
            <summary>初始化 type StubFieldAccessor 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubFieldAccessor.IsDefined(System.Type,System.Boolean)">
            <summary>设置 FieldGetter.IsDefined(Type attributeType, Boolean inherit) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubFieldAccessor.IsDefinedTypeBoolean">
            <summary>设置 FieldGetter.IsDefined(Type attributeType, Boolean inherit) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubFieldAccessor.MemberInfoGet">
            <summary>设置 FieldGetter.get_MemberInfo() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubFieldAccessor.MemberTypeGet">
            <summary>设置 FieldGetter.get_MemberType() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubFieldAccessor.NameGet">
            <summary>设置 FieldGetter.get_Name() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubFieldAccessor.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubFieldAccessor.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubFieldAccessor.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubFieldAccessor.MemberInfo">
            <summary>设置 FieldGetter.get_MemberInfo() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubFieldAccessor.MemberType">
            <summary>设置 FieldGetter.get_MemberType() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubFieldAccessor.Name">
            <summary>设置 FieldGetter.get_Name() 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Impl.Fakes.StubFieldGetter">
            <summary>AutoMapper.Impl.FieldGetter 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubFieldGetter.#ctor(System.Reflection.FieldInfo)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubFieldGetter.Equals(System.Object)">
            <summary>设置 FieldGetter.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubFieldGetter.EqualsObject">
            <summary>设置 FieldGetter.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubFieldGetter.GetCustomAttributes(System.Boolean)">
            <summary>设置 FieldGetter.GetCustomAttributes(Boolean inherit) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubFieldGetter.GetCustomAttributes(System.Type,System.Boolean)">
            <summary>设置 FieldGetter.GetCustomAttributes(Type attributeType, Boolean inherit) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubFieldGetter.GetCustomAttributesBoolean">
            <summary>设置 FieldGetter.GetCustomAttributes(Boolean inherit) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubFieldGetter.GetCustomAttributesTypeBoolean">
            <summary>设置 FieldGetter.GetCustomAttributes(Type attributeType, Boolean inherit) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubFieldGetter.GetHashCode">
            <summary>设置 FieldGetter.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubFieldGetter.GetHashCode01">
            <summary>设置 FieldGetter.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubFieldGetter.GetValue(System.Object)">
            <summary>设置 FieldGetter.GetValue(Object source) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubFieldGetter.GetValueObject">
            <summary>设置 FieldGetter.GetValue(Object source) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubFieldGetter.InitializeStub">
            <summary>初始化 type StubFieldGetter 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubFieldGetter.IsDefined(System.Type,System.Boolean)">
            <summary>设置 FieldGetter.IsDefined(Type attributeType, Boolean inherit) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubFieldGetter.IsDefinedTypeBoolean">
            <summary>设置 FieldGetter.IsDefined(Type attributeType, Boolean inherit) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubFieldGetter.MemberInfoGet">
            <summary>设置 FieldGetter.get_MemberInfo() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubFieldGetter.MemberTypeGet">
            <summary>设置 FieldGetter.get_MemberType() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubFieldGetter.NameGet">
            <summary>设置 FieldGetter.get_Name() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubFieldGetter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubFieldGetter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubFieldGetter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubFieldGetter.MemberInfo">
            <summary>设置 FieldGetter.get_MemberInfo() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubFieldGetter.MemberType">
            <summary>设置 FieldGetter.get_MemberType() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubFieldGetter.Name">
            <summary>设置 FieldGetter.get_Name() 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Impl.Fakes.StubMemberGetter">
            <summary>AutoMapper.Impl.MemberGetter 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubMemberGetter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubMemberGetter.GetCustomAttributes(System.Boolean)">
            <summary>设置 MemberGetter.GetCustomAttributes(Boolean inherit) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubMemberGetter.GetCustomAttributes(System.Type,System.Boolean)">
            <summary>设置 MemberGetter.GetCustomAttributes(Type attributeType, Boolean inherit) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubMemberGetter.GetCustomAttributesBoolean">
            <summary>设置 MemberGetter.GetCustomAttributes(Boolean inherit) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubMemberGetter.GetCustomAttributesTypeBoolean">
            <summary>设置 MemberGetter.GetCustomAttributes(Type attributeType, Boolean inherit) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubMemberGetter.GetValue(System.Object)">
            <summary>设置 MemberGetter.GetValue(Object source) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubMemberGetter.GetValueObject">
            <summary>设置 MemberGetter.GetValue(Object source) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubMemberGetter.InitializeStub">
            <summary>初始化 type StubMemberGetter 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubMemberGetter.IsDefined(System.Type,System.Boolean)">
            <summary>设置 MemberGetter.IsDefined(Type attributeType, Boolean inherit) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubMemberGetter.IsDefinedTypeBoolean">
            <summary>设置 MemberGetter.IsDefined(Type attributeType, Boolean inherit) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubMemberGetter.MemberInfoGet">
            <summary>设置 MemberGetter.get_MemberInfo() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubMemberGetter.MemberTypeGet">
            <summary>设置 MemberGetter.get_MemberType() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubMemberGetter.NameGet">
            <summary>设置 MemberGetter.get_Name() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubMemberGetter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubMemberGetter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubMemberGetter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubMemberGetter.MemberInfo">
            <summary>设置 MemberGetter.get_MemberInfo() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubMemberGetter.MemberType">
            <summary>设置 MemberGetter.get_MemberType() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubMemberGetter.Name">
            <summary>设置 MemberGetter.get_Name() 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Impl.Fakes.StubMethodGetter">
            <summary>AutoMapper.Impl.MethodGetter 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubMethodGetter.#ctor(System.Reflection.MethodInfo)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubMethodGetter.Equals(System.Object)">
            <summary>设置 MethodGetter.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubMethodGetter.EqualsObject">
            <summary>设置 MethodGetter.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubMethodGetter.GetCustomAttributes(System.Boolean)">
            <summary>设置 MethodGetter.GetCustomAttributes(Boolean inherit) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubMethodGetter.GetCustomAttributes(System.Type,System.Boolean)">
            <summary>设置 MethodGetter.GetCustomAttributes(Type attributeType, Boolean inherit) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubMethodGetter.GetCustomAttributesBoolean">
            <summary>设置 MethodGetter.GetCustomAttributes(Boolean inherit) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubMethodGetter.GetCustomAttributesTypeBoolean">
            <summary>设置 MethodGetter.GetCustomAttributes(Type attributeType, Boolean inherit) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubMethodGetter.GetHashCode">
            <summary>设置 MethodGetter.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubMethodGetter.GetHashCode01">
            <summary>设置 MethodGetter.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubMethodGetter.GetValue(System.Object)">
            <summary>设置 MethodGetter.GetValue(Object source) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubMethodGetter.GetValueObject">
            <summary>设置 MethodGetter.GetValue(Object source) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubMethodGetter.InitializeStub">
            <summary>初始化 type StubMethodGetter 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubMethodGetter.IsDefined(System.Type,System.Boolean)">
            <summary>设置 MethodGetter.IsDefined(Type attributeType, Boolean inherit) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubMethodGetter.IsDefinedTypeBoolean">
            <summary>设置 MethodGetter.IsDefined(Type attributeType, Boolean inherit) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubMethodGetter.MemberInfoGet">
            <summary>设置 MethodGetter.get_MemberInfo() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubMethodGetter.MemberTypeGet">
            <summary>设置 MethodGetter.get_MemberType() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubMethodGetter.NameGet">
            <summary>设置 MethodGetter.get_Name() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubMethodGetter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubMethodGetter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubMethodGetter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubMethodGetter.MemberInfo">
            <summary>设置 MethodGetter.get_MemberInfo() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubMethodGetter.MemberType">
            <summary>设置 MethodGetter.get_MemberType() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubMethodGetter.Name">
            <summary>设置 MethodGetter.get_Name() 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Impl.Fakes.StubPropertyAccessor">
            <summary>AutoMapper.Impl.PropertyAccessor 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubPropertyAccessor.#ctor(System.Reflection.PropertyInfo)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubPropertyAccessor.Equals(System.Object)">
            <summary>设置 PropertyGetter.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubPropertyAccessor.EqualsObject">
            <summary>设置 PropertyGetter.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubPropertyAccessor.GetCustomAttributes(System.Boolean)">
            <summary>设置 PropertyGetter.GetCustomAttributes(Boolean inherit) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubPropertyAccessor.GetCustomAttributes(System.Type,System.Boolean)">
            <summary>设置 PropertyGetter.GetCustomAttributes(Type attributeType, Boolean inherit) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubPropertyAccessor.GetCustomAttributesBoolean">
            <summary>设置 PropertyGetter.GetCustomAttributes(Boolean inherit) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubPropertyAccessor.GetCustomAttributesTypeBoolean">
            <summary>设置 PropertyGetter.GetCustomAttributes(Type attributeType, Boolean inherit) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubPropertyAccessor.GetHashCode">
            <summary>设置 PropertyGetter.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubPropertyAccessor.GetHashCode01">
            <summary>设置 PropertyGetter.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubPropertyAccessor.GetValue(System.Object)">
            <summary>设置 PropertyGetter.GetValue(Object source) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubPropertyAccessor.GetValueObject">
            <summary>设置 PropertyGetter.GetValue(Object source) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubPropertyAccessor.InitializeStub">
            <summary>初始化 type StubPropertyAccessor 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubPropertyAccessor.IsDefined(System.Type,System.Boolean)">
            <summary>设置 PropertyGetter.IsDefined(Type attributeType, Boolean inherit) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubPropertyAccessor.IsDefinedTypeBoolean">
            <summary>设置 PropertyGetter.IsDefined(Type attributeType, Boolean inherit) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubPropertyAccessor.MemberInfoGet">
            <summary>设置 PropertyGetter.get_MemberInfo() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubPropertyAccessor.MemberTypeGet">
            <summary>设置 PropertyGetter.get_MemberType() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubPropertyAccessor.NameGet">
            <summary>设置 PropertyGetter.get_Name() 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubPropertyAccessor.SetValue(System.Object,System.Object)">
            <summary>设置 PropertyAccessor.SetValue(Object destination, Object value) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubPropertyAccessor.SetValueObjectObject">
            <summary>设置 PropertyAccessor.SetValue(Object destination, Object value) 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubPropertyAccessor.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubPropertyAccessor.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubPropertyAccessor.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubPropertyAccessor.MemberInfo">
            <summary>设置 PropertyGetter.get_MemberInfo() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubPropertyAccessor.MemberType">
            <summary>设置 PropertyGetter.get_MemberType() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubPropertyAccessor.Name">
            <summary>设置 PropertyGetter.get_Name() 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Impl.Fakes.StubPropertyGetter">
            <summary>AutoMapper.Impl.PropertyGetter 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubPropertyGetter.#ctor(System.Reflection.PropertyInfo)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubPropertyGetter.Equals(System.Object)">
            <summary>设置 PropertyGetter.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubPropertyGetter.EqualsObject">
            <summary>设置 PropertyGetter.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubPropertyGetter.GetCustomAttributes(System.Boolean)">
            <summary>设置 PropertyGetter.GetCustomAttributes(Boolean inherit) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubPropertyGetter.GetCustomAttributes(System.Type,System.Boolean)">
            <summary>设置 PropertyGetter.GetCustomAttributes(Type attributeType, Boolean inherit) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubPropertyGetter.GetCustomAttributesBoolean">
            <summary>设置 PropertyGetter.GetCustomAttributes(Boolean inherit) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubPropertyGetter.GetCustomAttributesTypeBoolean">
            <summary>设置 PropertyGetter.GetCustomAttributes(Type attributeType, Boolean inherit) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubPropertyGetter.GetHashCode">
            <summary>设置 PropertyGetter.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubPropertyGetter.GetHashCode01">
            <summary>设置 PropertyGetter.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubPropertyGetter.GetValue(System.Object)">
            <summary>设置 PropertyGetter.GetValue(Object source) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubPropertyGetter.GetValueObject">
            <summary>设置 PropertyGetter.GetValue(Object source) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubPropertyGetter.InitializeStub">
            <summary>初始化 type StubPropertyGetter 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubPropertyGetter.IsDefined(System.Type,System.Boolean)">
            <summary>设置 PropertyGetter.IsDefined(Type attributeType, Boolean inherit) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubPropertyGetter.IsDefinedTypeBoolean">
            <summary>设置 PropertyGetter.IsDefined(Type attributeType, Boolean inherit) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubPropertyGetter.MemberInfoGet">
            <summary>设置 PropertyGetter.get_MemberInfo() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubPropertyGetter.MemberTypeGet">
            <summary>设置 PropertyGetter.get_MemberType() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubPropertyGetter.NameGet">
            <summary>设置 PropertyGetter.get_Name() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubPropertyGetter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubPropertyGetter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubPropertyGetter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubPropertyGetter.MemberInfo">
            <summary>设置 PropertyGetter.get_MemberInfo() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubPropertyGetter.MemberType">
            <summary>设置 PropertyGetter.get_MemberType() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubPropertyGetter.Name">
            <summary>设置 PropertyGetter.get_Name() 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Impl.Fakes.StubProxyBase">
            <summary>AutoMapper.Impl.ProxyBase 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubProxyBase.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubProxyBase.InitializeStub">
            <summary>初始化 type StubProxyBase 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubProxyBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubProxyBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubProxyBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Impl.Fakes.StubValueTypeFieldAccessor">
            <summary>AutoMapper.Impl.ValueTypeFieldAccessor 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubValueTypeFieldAccessor.#ctor(System.Reflection.FieldInfo)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubValueTypeFieldAccessor.Equals(System.Object)">
            <summary>设置 FieldGetter.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubValueTypeFieldAccessor.EqualsObject">
            <summary>设置 FieldGetter.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubValueTypeFieldAccessor.GetCustomAttributes(System.Boolean)">
            <summary>设置 FieldGetter.GetCustomAttributes(Boolean inherit) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubValueTypeFieldAccessor.GetCustomAttributes(System.Type,System.Boolean)">
            <summary>设置 FieldGetter.GetCustomAttributes(Type attributeType, Boolean inherit) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubValueTypeFieldAccessor.GetCustomAttributesBoolean">
            <summary>设置 FieldGetter.GetCustomAttributes(Boolean inherit) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubValueTypeFieldAccessor.GetCustomAttributesTypeBoolean">
            <summary>设置 FieldGetter.GetCustomAttributes(Type attributeType, Boolean inherit) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubValueTypeFieldAccessor.GetHashCode">
            <summary>设置 FieldGetter.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubValueTypeFieldAccessor.GetHashCode01">
            <summary>设置 FieldGetter.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubValueTypeFieldAccessor.GetValue(System.Object)">
            <summary>设置 FieldGetter.GetValue(Object source) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubValueTypeFieldAccessor.GetValueObject">
            <summary>设置 FieldGetter.GetValue(Object source) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubValueTypeFieldAccessor.InitializeStub">
            <summary>初始化 type StubValueTypeFieldAccessor 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubValueTypeFieldAccessor.IsDefined(System.Type,System.Boolean)">
            <summary>设置 FieldGetter.IsDefined(Type attributeType, Boolean inherit) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubValueTypeFieldAccessor.IsDefinedTypeBoolean">
            <summary>设置 FieldGetter.IsDefined(Type attributeType, Boolean inherit) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubValueTypeFieldAccessor.MemberInfoGet">
            <summary>设置 FieldGetter.get_MemberInfo() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubValueTypeFieldAccessor.MemberTypeGet">
            <summary>设置 FieldGetter.get_MemberType() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubValueTypeFieldAccessor.NameGet">
            <summary>设置 FieldGetter.get_Name() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubValueTypeFieldAccessor.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubValueTypeFieldAccessor.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubValueTypeFieldAccessor.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubValueTypeFieldAccessor.MemberInfo">
            <summary>设置 FieldGetter.get_MemberInfo() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubValueTypeFieldAccessor.MemberType">
            <summary>设置 FieldGetter.get_MemberType() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubValueTypeFieldAccessor.Name">
            <summary>设置 FieldGetter.get_Name() 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Impl.Fakes.StubValueTypePropertyAccessor">
            <summary>AutoMapper.Impl.ValueTypePropertyAccessor 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubValueTypePropertyAccessor.#ctor(System.Reflection.PropertyInfo)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubValueTypePropertyAccessor.Equals(System.Object)">
            <summary>设置 PropertyGetter.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubValueTypePropertyAccessor.EqualsObject">
            <summary>设置 PropertyGetter.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubValueTypePropertyAccessor.GetCustomAttributes(System.Boolean)">
            <summary>设置 PropertyGetter.GetCustomAttributes(Boolean inherit) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubValueTypePropertyAccessor.GetCustomAttributes(System.Type,System.Boolean)">
            <summary>设置 PropertyGetter.GetCustomAttributes(Type attributeType, Boolean inherit) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubValueTypePropertyAccessor.GetCustomAttributesBoolean">
            <summary>设置 PropertyGetter.GetCustomAttributes(Boolean inherit) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubValueTypePropertyAccessor.GetCustomAttributesTypeBoolean">
            <summary>设置 PropertyGetter.GetCustomAttributes(Type attributeType, Boolean inherit) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubValueTypePropertyAccessor.GetHashCode">
            <summary>设置 PropertyGetter.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubValueTypePropertyAccessor.GetHashCode01">
            <summary>设置 PropertyGetter.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubValueTypePropertyAccessor.GetValue(System.Object)">
            <summary>设置 PropertyGetter.GetValue(Object source) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubValueTypePropertyAccessor.GetValueObject">
            <summary>设置 PropertyGetter.GetValue(Object source) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubValueTypePropertyAccessor.InitializeStub">
            <summary>初始化 type StubValueTypePropertyAccessor 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Impl.Fakes.StubValueTypePropertyAccessor.IsDefined(System.Type,System.Boolean)">
            <summary>设置 PropertyGetter.IsDefined(Type attributeType, Boolean inherit) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubValueTypePropertyAccessor.IsDefinedTypeBoolean">
            <summary>设置 PropertyGetter.IsDefined(Type attributeType, Boolean inherit) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubValueTypePropertyAccessor.MemberInfoGet">
            <summary>设置 PropertyGetter.get_MemberInfo() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubValueTypePropertyAccessor.MemberTypeGet">
            <summary>设置 PropertyGetter.get_MemberType() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Impl.Fakes.StubValueTypePropertyAccessor.NameGet">
            <summary>设置 PropertyGetter.get_Name() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubValueTypePropertyAccessor.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubValueTypePropertyAccessor.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubValueTypePropertyAccessor.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubValueTypePropertyAccessor.MemberInfo">
            <summary>设置 PropertyGetter.get_MemberInfo() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubValueTypePropertyAccessor.MemberType">
            <summary>设置 PropertyGetter.get_MemberType() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Impl.Fakes.StubValueTypePropertyAccessor.Name">
            <summary>设置 PropertyGetter.get_Name() 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimDictionaryFactory">
            <summary>AutoMapper.Internal.DictionaryFactory 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDictionaryFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDictionaryFactory.#ctor(AutoMapper.Internal.DictionaryFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDictionaryFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDictionaryFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDictionaryFactory.Bind(AutoMapper.Internal.IDictionaryFactory)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDictionaryFactory.CreateDictionaryOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.Internal.IDictionary{``0,``1}})">
            <summary>设置 DictionaryFactory.CreateDictionary() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDictionaryFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimDictionaryFactory.Constructor">
            <summary>设置 DictionaryFactory.DictionaryFactory() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimDictionaryFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimDictionaryFactory.AllInstances.CreateDictionaryOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.Internal.DictionaryFactory,AutoMapper.Internal.IDictionary{``0,``1}})">
            <summary>设置 DictionaryFactory.CreateDictionary() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimEnumNameValueMapperFactory">
            <summary>AutoMapper.Internal.EnumNameValueMapperFactory 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimEnumNameValueMapperFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimEnumNameValueMapperFactory.#ctor(AutoMapper.Internal.EnumNameValueMapperFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimEnumNameValueMapperFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimEnumNameValueMapperFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimEnumNameValueMapperFactory.Bind(AutoMapper.Internal.IEnumNameValueMapperFactory)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimEnumNameValueMapperFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimEnumNameValueMapperFactory.Constructor">
            <summary>设置 EnumNameValueMapperFactory.EnumNameValueMapperFactory() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimEnumNameValueMapperFactory.Create">
            <summary>设置 EnumNameValueMapperFactory.Create() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimEnumNameValueMapperFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimEnumNameValueMapperFactory.AllInstances.Create">
            <summary>设置 EnumNameValueMapperFactory.Create() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimFeatureDetector">
            <summary>AutoMapper.Internal.FeatureDetector 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimFeatureDetector.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimFeatureDetector.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimFeatureDetector.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFeatureDetector.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFeatureDetector.IsEnumGetNamesSupportedGet">
            <summary>设置 FeatureDetector.get_IsEnumGetNamesSupported() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFeatureDetector.ResolveIsEnumGetNamesSupported">
            <summary>设置 FeatureDetector.ResolveIsEnumGetNamesSupported() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFeatureDetector.StaticConstructor">
            <summary>设置 FeatureDetector.FeatureDetector() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimFeatureDetector._cctorb__0Type">
            <summary>设置 FeatureDetector.&lt;.cctor&gt;b__0(Type t) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimLazyFactory">
            <summary>AutoMapper.Internal.LazyFactory 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimLazyFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimLazyFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimLazyFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimLazyFactory.CreateOf1FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{``0},AutoMapper.Internal.ILazy{``0}})">
            <summary>设置 LazyFactory.Create(Func`1&lt;!!0&gt; valueFactory) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimLazyFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimNullableConverterFactory">
            <summary>AutoMapper.Internal.NullableConverterFactory 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimNullableConverterFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimNullableConverterFactory.#ctor(AutoMapper.Internal.NullableConverterFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimNullableConverterFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimNullableConverterFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimNullableConverterFactory.Bind(AutoMapper.Internal.INullableConverterFactory)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimNullableConverterFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimNullableConverterFactory.Constructor">
            <summary>设置 NullableConverterFactory.NullableConverterFactory() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimNullableConverterFactory.CreateType">
            <summary>设置 NullableConverterFactory.Create(Type nullableType) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimNullableConverterFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimNullableConverterFactory.AllInstances.CreateType">
            <summary>设置 NullableConverterFactory.Create(Type nullableType) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimPlatformAdapter">
            <summary>AutoMapper.Internal.PlatformAdapter 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPlatformAdapter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPlatformAdapter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPlatformAdapter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPlatformAdapter.ResolveOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,``0})">
            <summary>设置 PlatformAdapter.Resolve(Boolean throwIfNotFound) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPlatformAdapter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPlatformAdapter.StaticConstructor">
            <summary>设置 PlatformAdapter.PlatformAdapter() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions">
            <summary>AutoMapper.Internal.PrimitiveExtensions 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions.GetDictionaryTypeType">
            <summary>设置 PrimitiveExtensions.GetDictionaryType(Type type) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions.GetTypeOfNullableType">
            <summary>设置 PrimitiveExtensions.GetTypeOfNullable(Type type) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions.IsCollectionTypeType">
            <summary>设置 PrimitiveExtensions.IsCollectionType(Type type) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions.IsDictionaryTypeType">
            <summary>设置 PrimitiveExtensions.IsDictionaryType(Type type) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions.IsEnumerableTypeType">
            <summary>设置 PrimitiveExtensions.IsEnumerableType(Type type) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions.IsListOrDictionaryTypeType">
            <summary>设置 PrimitiveExtensions.IsListOrDictionaryType(Type type) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions.IsListTypeType">
            <summary>设置 PrimitiveExtensions.IsListType(Type type) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions.IsNullableTypeType">
            <summary>设置 PrimitiveExtensions.IsNullableType(Type type) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions.ToNullSafeStringObject">
            <summary>设置 PrimitiveExtensions.ToNullSafeString(Object value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions._GetDictionaryTypeb__cType">
            <summary>设置 PrimitiveExtensions.&lt;GetDictionaryType&gt;b__c(Type t) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions._IsCollectionTypeb__0Type">
            <summary>设置 PrimitiveExtensions.&lt;IsCollectionType&gt;b__0(Type t) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions._IsCollectionTypeb__1Type">
            <summary>设置 PrimitiveExtensions.&lt;IsCollectionType&gt;b__1(Type t) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions._IsCollectionTypeb__2Type">
            <summary>设置 PrimitiveExtensions.&lt;IsCollectionType&gt;b__2(Type t) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions._IsDictionaryTypeb__6Type">
            <summary>设置 PrimitiveExtensions.&lt;IsDictionaryType&gt;b__6(Type t) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions._IsDictionaryTypeb__7Type">
            <summary>设置 PrimitiveExtensions.&lt;IsDictionaryType&gt;b__7(Type t) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimPrimitiveExtensions._IsDictionaryTypeb__8Type">
            <summary>设置 PrimitiveExtensions.&lt;IsDictionaryType&gt;b__8(Type t) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory">
            <summary>AutoMapper.Internal.ProxyGeneratorFactory 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.#ctor(AutoMapper.Internal.ProxyGeneratorFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.Bind(AutoMapper.Internal.IProxyGeneratorFactory)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.Constructor">
            <summary>设置 ProxyGeneratorFactory.ProxyGeneratorFactory() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.Create">
            <summary>设置 ProxyGeneratorFactory.Create() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.AllInstances.Create">
            <summary>设置 ProxyGeneratorFactory.Create() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.ShimNotSupportedProxyGenerator">
            <summary>AutoMapper.Internal.ProxyGeneratorFactory+NotSupportedProxyGenerator 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.ShimNotSupportedProxyGenerator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.ShimNotSupportedProxyGenerator.#ctor(AutoMapper.Internal.ProxyGeneratorFactory.NotSupportedProxyGenerator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.ShimNotSupportedProxyGenerator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.ShimNotSupportedProxyGenerator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.ShimNotSupportedProxyGenerator.Bind(AutoMapper.Internal.IProxyGenerator)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.ShimNotSupportedProxyGenerator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.ShimNotSupportedProxyGenerator.Constructor">
            <summary>设置 NotSupportedProxyGenerator.NotSupportedProxyGenerator() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.ShimNotSupportedProxyGenerator.GetProxyTypeType">
            <summary>设置 NotSupportedProxyGenerator.GetProxyType(Type interfaceType) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.ShimNotSupportedProxyGenerator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimProxyGeneratorFactory.ShimNotSupportedProxyGenerator.AllInstances.GetProxyTypeType">
            <summary>设置 NotSupportedProxyGenerator.GetProxyType(Type interfaceType) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory">
            <summary>AutoMapper.Internal.ReaderWriterLockSlimFactory 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.#ctor(AutoMapper.Internal.ReaderWriterLockSlimFactory)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.Bind(AutoMapper.Internal.IReaderWriterLockSlimFactory)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.Constructor">
            <summary>设置 ReaderWriterLockSlimFactory.ReaderWriterLockSlimFactory() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.Create">
            <summary>设置 ReaderWriterLockSlimFactory.Create() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.AllInstances.Create">
            <summary>设置 ReaderWriterLockSlimFactory.Create() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock">
            <summary>AutoMapper.Internal.ReaderWriterLockSlimFactory+NoOpReaderWriterLock 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.#ctor(AutoMapper.Internal.ReaderWriterLockSlimFactory.NoOpReaderWriterLock)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.Bind(AutoMapper.Internal.IReaderWriterLockSlim)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.Constructor">
            <summary>设置 NoOpReaderWriterLock.NoOpReaderWriterLock() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.Dispose">
            <summary>设置 NoOpReaderWriterLock.Dispose() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.EnterReadLock">
            <summary>设置 NoOpReaderWriterLock.EnterReadLock() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.EnterUpgradeableReadLock">
            <summary>设置 NoOpReaderWriterLock.EnterUpgradeableReadLock() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.EnterWriteLock">
            <summary>设置 NoOpReaderWriterLock.EnterWriteLock() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.ExitReadLock">
            <summary>设置 NoOpReaderWriterLock.ExitReadLock() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.ExitUpgradeableReadLock">
            <summary>设置 NoOpReaderWriterLock.ExitUpgradeableReadLock() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.ExitWriteLock">
            <summary>设置 NoOpReaderWriterLock.ExitWriteLock() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.AllInstances.Dispose">
            <summary>设置 NoOpReaderWriterLock.Dispose() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.AllInstances.EnterReadLock">
            <summary>设置 NoOpReaderWriterLock.EnterReadLock() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.AllInstances.EnterUpgradeableReadLock">
            <summary>设置 NoOpReaderWriterLock.EnterUpgradeableReadLock() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.AllInstances.EnterWriteLock">
            <summary>设置 NoOpReaderWriterLock.EnterWriteLock() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.AllInstances.ExitReadLock">
            <summary>设置 NoOpReaderWriterLock.ExitReadLock() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.AllInstances.ExitUpgradeableReadLock">
            <summary>设置 NoOpReaderWriterLock.ExitUpgradeableReadLock() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.ShimReaderWriterLockSlimFactory.ShimNoOpReaderWriterLock.AllInstances.ExitWriteLock">
            <summary>设置 NoOpReaderWriterLock.ExitWriteLock() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubDictionaryFactory">
            <summary>AutoMapper.Internal.DictionaryFactory 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubDictionaryFactory.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubDictionaryFactory.InitializeStub">
            <summary>初始化 type StubDictionaryFactory 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubDictionaryFactory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubDictionaryFactory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubDictionaryFactory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubEnumNameValueMapperFactory">
            <summary>AutoMapper.Internal.EnumNameValueMapperFactory 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubEnumNameValueMapperFactory.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubEnumNameValueMapperFactory.InitializeStub">
            <summary>初始化 type StubEnumNameValueMapperFactory 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubEnumNameValueMapperFactory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubEnumNameValueMapperFactory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubEnumNameValueMapperFactory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubIDictionary`2">
            <summary>AutoMapper.Internal.IDictionary`2 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIDictionary`2.#ctor">
            <summary>初始化 type StubIDictionary 的新实例</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIDictionary`2.AddOrUpdateT0T1FuncOfT0T1T1">
            <summary>设置 IDictionary`2.AddOrUpdate(!0 key, !1 addValue, Func`3&lt;!0,!1,!1&gt; updateValueFactory) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIDictionary`2.am::AutoMapper#Internal#IDictionary{TKey@TValue}#AddOrUpdate(`0,`1,System.Func{`0,`1,`1})">
            <summary>设置 IDictionary`2.AddOrUpdate(!0 key, !1 addValue, Func`3&lt;!0,!1,!1&gt; updateValueFactory) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIDictionary`2.am::AutoMapper#Internal#IDictionary{TKey@TValue}#GetOrAdd(`0,System.Func{`0,`1})">
            <summary>设置 IDictionary`2.GetOrAdd(!0 key, Func`2&lt;!0,!1&gt; valueFactory) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIDictionary`2.am::AutoMapper#Internal#IDictionary{TKey@TValue}#TryGetValue(`0,`1@)">
            <summary>设置 IDictionary`2.TryGetValue(!0 key, !1&amp; value) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIDictionary`2.am::AutoMapper#Internal#IDictionary{TKey@TValue}#TryRemove(`0,`1@)">
            <summary>设置 IDictionary`2.TryRemove(!0 key, !1&amp; value) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIDictionary`2.GetOrAddT0FuncOfT0T1">
            <summary>设置 IDictionary`2.GetOrAdd(!0 key, Func`2&lt;!0,!1&gt; valueFactory) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIDictionary`2.ItemGetT0">
            <summary>设置 IDictionary`2.get_Item(!0 key) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIDictionary`2.ItemSetT0T1">
            <summary>设置 IDictionary`2.set_Item(!0 key, !1 value) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIDictionary`2.TryGetValueT0T1Out">
            <summary>设置 IDictionary`2.TryGetValue(!0 key, !1&amp; value) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIDictionary`2.TryRemoveT0T1Out">
            <summary>设置 IDictionary`2.TryRemove(!0 key, !1&amp; value) 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubIDictionary`2.AutoMapper#Internal#IDictionary{TKey@TValue}#Item(`0)">
            <summary>设置 IDictionary`2.get_Item(!0 key) 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubIDictionaryFactory">
            <summary>AutoMapper.Internal.IDictionaryFactory 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIDictionaryFactory.#ctor">
            <summary>初始化 type StubIDictionaryFactory 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIDictionaryFactory.am::AutoMapper#Internal#IDictionaryFactory#CreateDictionary``2">
            <summary>设置 IDictionaryFactory.CreateDictionary() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIDictionaryFactory.CreateDictionaryOf2``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.Internal.IDictionary{``0,``1}})">
            <summary>设置 CreateDictionary() 的存根</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubIEnumNameValueMapper">
            <summary>AutoMapper.Internal.IEnumNameValueMapper 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIEnumNameValueMapper.#ctor">
            <summary>初始化 type StubIEnumNameValueMapper 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIEnumNameValueMapper.am::AutoMapper#Internal#IEnumNameValueMapper#Convert(System.Type,System.Type,AutoMapper.ResolutionContext)">
            <summary>设置 IEnumNameValueMapper.Convert(Type enumSourceType, Type enumDestinationType, ResolutionContext context) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIEnumNameValueMapper.am::AutoMapper#Internal#IEnumNameValueMapper#IsMatch(System.Type,System.String)">
            <summary>设置 IEnumNameValueMapper.IsMatch(Type enumDestinationType, String sourceValue) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIEnumNameValueMapper.ConvertTypeTypeResolutionContext">
            <summary>设置 IEnumNameValueMapper.Convert(Type enumSourceType, Type enumDestinationType, ResolutionContext context) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIEnumNameValueMapper.IsMatchTypeString">
            <summary>设置 IEnumNameValueMapper.IsMatch(Type enumDestinationType, String sourceValue) 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubIEnumNameValueMapperFactory">
            <summary>AutoMapper.Internal.IEnumNameValueMapperFactory 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIEnumNameValueMapperFactory.#ctor">
            <summary>初始化 type StubIEnumNameValueMapperFactory 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIEnumNameValueMapperFactory.am::AutoMapper#Internal#IEnumNameValueMapperFactory#Create">
            <summary>设置 IEnumNameValueMapperFactory.Create() 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIEnumNameValueMapperFactory.Create">
            <summary>设置 IEnumNameValueMapperFactory.Create() 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubILazy`1">
            <summary>AutoMapper.Internal.ILazy`1 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubILazy`1.#ctor">
            <summary>初始化 type StubILazy 的新实例</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubILazy`1.ValueGet">
            <summary>设置 ILazy`1.get_Value() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubILazy`1.am::AutoMapper#Internal#ILazy{T}#Value">
            <summary>设置 ILazy`1.get_Value() 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubINullableConverter">
            <summary>AutoMapper.Internal.INullableConverter 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubINullableConverter.#ctor">
            <summary>初始化 type StubINullableConverter 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubINullableConverter.am::AutoMapper#Internal#INullableConverter#ConvertFrom(System.Object)">
            <summary>设置 INullableConverter.ConvertFrom(Object value) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubINullableConverter.ConvertFromObject">
            <summary>设置 INullableConverter.ConvertFrom(Object value) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubINullableConverter.UnderlyingTypeGet">
            <summary>设置 INullableConverter.get_UnderlyingType() 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubINullableConverter.am::AutoMapper#Internal#INullableConverter#UnderlyingType">
            <summary>设置 INullableConverter.get_UnderlyingType() 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubINullableConverterFactory">
            <summary>AutoMapper.Internal.INullableConverterFactory 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubINullableConverterFactory.#ctor">
            <summary>初始化 type StubINullableConverterFactory 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubINullableConverterFactory.am::AutoMapper#Internal#INullableConverterFactory#Create(System.Type)">
            <summary>设置 INullableConverterFactory.Create(Type nullableType) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubINullableConverterFactory.CreateType">
            <summary>设置 INullableConverterFactory.Create(Type nullableType) 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubIProxyGenerator">
            <summary>AutoMapper.Internal.IProxyGenerator 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIProxyGenerator.#ctor">
            <summary>初始化 type StubIProxyGenerator 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIProxyGenerator.am::AutoMapper#Internal#IProxyGenerator#GetProxyType(System.Type)">
            <summary>设置 IProxyGenerator.GetProxyType(Type interfaceType) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIProxyGenerator.GetProxyTypeType">
            <summary>设置 IProxyGenerator.GetProxyType(Type interfaceType) 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubIProxyGeneratorFactory">
            <summary>AutoMapper.Internal.IProxyGeneratorFactory 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIProxyGeneratorFactory.#ctor">
            <summary>初始化 type StubIProxyGeneratorFactory 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIProxyGeneratorFactory.am::AutoMapper#Internal#IProxyGeneratorFactory#Create">
            <summary>设置 IProxyGeneratorFactory.Create() 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIProxyGeneratorFactory.Create">
            <summary>设置 IProxyGeneratorFactory.Create() 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlim">
            <summary>AutoMapper.Internal.IReaderWriterLockSlim 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlim.#ctor">
            <summary>初始化 type StubIReaderWriterLockSlim 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlim.am::AutoMapper#Internal#IReaderWriterLockSlim#EnterReadLock">
            <summary>设置 IReaderWriterLockSlim.EnterReadLock() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlim.am::AutoMapper#Internal#IReaderWriterLockSlim#EnterUpgradeableReadLock">
            <summary>设置 IReaderWriterLockSlim.EnterUpgradeableReadLock() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlim.am::AutoMapper#Internal#IReaderWriterLockSlim#EnterWriteLock">
            <summary>设置 IReaderWriterLockSlim.EnterWriteLock() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlim.am::AutoMapper#Internal#IReaderWriterLockSlim#ExitReadLock">
            <summary>设置 IReaderWriterLockSlim.ExitReadLock() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlim.am::AutoMapper#Internal#IReaderWriterLockSlim#ExitUpgradeableReadLock">
            <summary>设置 IReaderWriterLockSlim.ExitUpgradeableReadLock() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlim.am::AutoMapper#Internal#IReaderWriterLockSlim#ExitWriteLock">
            <summary>设置 IReaderWriterLockSlim.ExitWriteLock() 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlim.Dispose">
            <summary>设置 IDisposable.Dispose() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlim.EnterReadLock">
            <summary>设置 IReaderWriterLockSlim.EnterReadLock() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlim.EnterUpgradeableReadLock">
            <summary>设置 IReaderWriterLockSlim.EnterUpgradeableReadLock() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlim.EnterWriteLock">
            <summary>设置 IReaderWriterLockSlim.EnterWriteLock() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlim.ExitReadLock">
            <summary>设置 IReaderWriterLockSlim.ExitReadLock() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlim.ExitUpgradeableReadLock">
            <summary>设置 IReaderWriterLockSlim.ExitUpgradeableReadLock() 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlim.ExitWriteLock">
            <summary>设置 IReaderWriterLockSlim.ExitWriteLock() 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlim.global::System#IDisposable#Dispose">
            <summary>设置 IDisposable.Dispose() 的 存根</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlimFactory">
            <summary>AutoMapper.Internal.IReaderWriterLockSlimFactory 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlimFactory.#ctor">
            <summary>初始化 type StubIReaderWriterLockSlimFactory 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlimFactory.am::AutoMapper#Internal#IReaderWriterLockSlimFactory#Create">
            <summary>设置 IReaderWriterLockSlimFactory.Create() 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Internal.Fakes.StubIReaderWriterLockSlimFactory.Create">
            <summary>设置 IReaderWriterLockSlimFactory.Create() 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubNullableConverterFactory">
            <summary>AutoMapper.Internal.NullableConverterFactory 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubNullableConverterFactory.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubNullableConverterFactory.InitializeStub">
            <summary>初始化 type StubNullableConverterFactory 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubNullableConverterFactory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubNullableConverterFactory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubNullableConverterFactory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubProxyGeneratorFactory">
            <summary>AutoMapper.Internal.ProxyGeneratorFactory 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubProxyGeneratorFactory.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubProxyGeneratorFactory.InitializeStub">
            <summary>初始化 type StubProxyGeneratorFactory 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubProxyGeneratorFactory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubProxyGeneratorFactory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubProxyGeneratorFactory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Internal.Fakes.StubReaderWriterLockSlimFactory">
            <summary>AutoMapper.Internal.ReaderWriterLockSlimFactory 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubReaderWriterLockSlimFactory.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Internal.Fakes.StubReaderWriterLockSlimFactory.InitializeStub">
            <summary>初始化 type StubReaderWriterLockSlimFactory 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubReaderWriterLockSlimFactory.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubReaderWriterLockSlimFactory.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Internal.Fakes.StubReaderWriterLockSlimFactory.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimArrayMapper">
            <summary>AutoMapper.Mappers.ArrayMapper 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimArrayMapper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimArrayMapper.#ctor(AutoMapper.Mappers.ArrayMapper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimArrayMapper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimArrayMapper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimArrayMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimArrayMapper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimArrayMapper.ClearEnumerableArray">
            <summary>设置 ArrayMapper.ClearEnumerable(Array enumerable) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimArrayMapper.Constructor">
            <summary>设置 ArrayMapper.ArrayMapper() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimArrayMapper.CreateDestinationObjectBaseTypeInt32">
            <summary>设置 ArrayMapper.CreateDestinationObjectBase(Type destElementType, Int32 sourceLength) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimArrayMapper.GetOrCreateDestinationObjectResolutionContextIMappingEngineRunnerTypeInt32">
            <summary>设置 ArrayMapper.GetOrCreateDestinationObject(ResolutionContext context, IMappingEngineRunner mapper, Type destElementType, Int32 sourceLength) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimArrayMapper.IsMatchResolutionContext">
            <summary>设置 ArrayMapper.IsMatch(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimArrayMapper.SetElementValueArrayObjectInt32">
            <summary>设置 ArrayMapper.SetElementValue(Array destination, Object mappedValue, Int32 index) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimArrayMapper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimArrayMapper.AllInstances.ClearEnumerableArray">
            <summary>设置 ArrayMapper.ClearEnumerable(Array enumerable) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimArrayMapper.AllInstances.CreateDestinationObjectBaseTypeInt32">
            <summary>设置 ArrayMapper.CreateDestinationObjectBase(Type destElementType, Int32 sourceLength) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimArrayMapper.AllInstances.GetOrCreateDestinationObjectResolutionContextIMappingEngineRunnerTypeInt32">
            <summary>设置 ArrayMapper.GetOrCreateDestinationObject(ResolutionContext context, IMappingEngineRunner mapper, Type destElementType, Int32 sourceLength) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimArrayMapper.AllInstances.IsMatchResolutionContext">
            <summary>设置 ArrayMapper.IsMatch(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimArrayMapper.AllInstances.SetElementValueArrayObjectInt32">
            <summary>设置 ArrayMapper.SetElementValue(Array destination, Object mappedValue, Int32 index) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimAssignableArrayMapper">
            <summary>AutoMapper.Mappers.AssignableArrayMapper 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimAssignableArrayMapper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimAssignableArrayMapper.#ctor(AutoMapper.Mappers.AssignableArrayMapper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimAssignableArrayMapper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimAssignableArrayMapper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimAssignableArrayMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimAssignableArrayMapper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimAssignableArrayMapper.Constructor">
            <summary>设置 AssignableArrayMapper.AssignableArrayMapper() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimAssignableArrayMapper.IsMatchResolutionContext">
            <summary>设置 AssignableArrayMapper.IsMatch(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimAssignableArrayMapper.MapResolutionContextIMappingEngineRunner">
            <summary>设置 AssignableArrayMapper.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimAssignableArrayMapper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimAssignableArrayMapper.AllInstances.IsMatchResolutionContext">
            <summary>设置 AssignableArrayMapper.IsMatch(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimAssignableArrayMapper.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>设置 AssignableArrayMapper.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimAssignableMapper">
            <summary>AutoMapper.Mappers.AssignableMapper 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimAssignableMapper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimAssignableMapper.#ctor(AutoMapper.Mappers.AssignableMapper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimAssignableMapper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimAssignableMapper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimAssignableMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimAssignableMapper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimAssignableMapper.Constructor">
            <summary>设置 AssignableMapper.AssignableMapper() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimAssignableMapper.IsMatchResolutionContext">
            <summary>设置 AssignableMapper.IsMatch(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimAssignableMapper.MapResolutionContextIMappingEngineRunner">
            <summary>设置 AssignableMapper.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimAssignableMapper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimAssignableMapper.AllInstances.IsMatchResolutionContext">
            <summary>设置 AssignableMapper.IsMatch(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimAssignableMapper.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>设置 AssignableMapper.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimCollectionMapper">
            <summary>AutoMapper.Mappers.CollectionMapper 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimCollectionMapper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimCollectionMapper.#ctor(AutoMapper.Mappers.CollectionMapper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimCollectionMapper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimCollectionMapper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimCollectionMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimCollectionMapper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimCollectionMapper.Constructor">
            <summary>设置 CollectionMapper.CollectionMapper() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimCollectionMapper.IsMatchResolutionContext">
            <summary>设置 CollectionMapper.IsMatch(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimCollectionMapper.MapResolutionContextIMappingEngineRunner">
            <summary>设置 CollectionMapper.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimCollectionMapper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimCollectionMapper.AllInstances.IsMatchResolutionContext">
            <summary>设置 CollectionMapper.IsMatch(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimCollectionMapper.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>设置 CollectionMapper.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimDictionaryMapper">
            <summary>AutoMapper.Mappers.DictionaryMapper 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimDictionaryMapper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimDictionaryMapper.#ctor(AutoMapper.Mappers.DictionaryMapper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimDictionaryMapper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimDictionaryMapper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimDictionaryMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimDictionaryMapper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimDictionaryMapper.Constructor">
            <summary>设置 DictionaryMapper.DictionaryMapper() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimDictionaryMapper.IsMatchResolutionContext">
            <summary>设置 DictionaryMapper.IsMatch(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimDictionaryMapper.MapResolutionContextIMappingEngineRunner">
            <summary>设置 DictionaryMapper.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimDictionaryMapper.StaticConstructor">
            <summary>设置 DictionaryMapper.DictionaryMapper() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimDictionaryMapper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimDictionaryMapper.AllInstances.IsMatchResolutionContext">
            <summary>设置 DictionaryMapper.IsMatch(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimDictionaryMapper.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>设置 DictionaryMapper.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimEnumMapper">
            <summary>AutoMapper.Mappers.EnumMapper 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumMapper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumMapper.#ctor(AutoMapper.Mappers.EnumMapper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumMapper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumMapper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumMapper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumMapper.Constructor">
            <summary>设置 EnumMapper.EnumMapper() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumMapper.ConvertEnumToNullableTypeResolutionContext">
            <summary>设置 EnumMapper.ConvertEnumToNullableType(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumMapper.EnumToEnumMappingResolutionContext">
            <summary>设置 EnumMapper.EnumToEnumMapping(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumMapper.EnumToNullableTypeMappingResolutionContext">
            <summary>设置 EnumMapper.EnumToNullableTypeMapping(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumMapper.EnumToStringMappingResolutionContextBooleanRef">
            <summary>设置 EnumMapper.EnumToStringMapping(ResolutionContext context, Boolean&amp; toEnum) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumMapper.EnumToUnderlyingTypeMappingResolutionContextBooleanRef">
            <summary>设置 EnumMapper.EnumToUnderlyingTypeMapping(ResolutionContext context, Boolean&amp; toEnum) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumMapper.IsMatchResolutionContext">
            <summary>设置 EnumMapper.IsMatch(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumMapper.MapResolutionContextIMappingEngineRunner">
            <summary>设置 EnumMapper.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumMapper.StaticConstructor">
            <summary>设置 EnumMapper.EnumMapper() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimEnumMapper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumMapper.AllInstances.IsMatchResolutionContext">
            <summary>设置 EnumMapper.IsMatch(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumMapper.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>设置 EnumMapper.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimEnumerableMapper">
            <summary>AutoMapper.Mappers.EnumerableMapper 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumerableMapper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumerableMapper.#ctor(AutoMapper.Mappers.EnumerableMapper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumerableMapper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumerableMapper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumerableMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapper.ClearEnumerableIList">
            <summary>设置 EnumerableMapper.ClearEnumerable(IList enumerable) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapper.Constructor">
            <summary>设置 EnumerableMapper.EnumerableMapper() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapper.CreateDestinationObjectBaseTypeInt32">
            <summary>设置 EnumerableMapper.CreateDestinationObjectBase(Type destElementType, Int32 sourceLength) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapper.IsMatchResolutionContext">
            <summary>设置 EnumerableMapper.IsMatch(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapper.SetElementValueIListObjectInt32">
            <summary>设置 EnumerableMapper.SetElementValue(IList destination, Object mappedValue, Int32 index) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimEnumerableMapper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapper.AllInstances.ClearEnumerableIList">
            <summary>设置 EnumerableMapper.ClearEnumerable(IList enumerable) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapper.AllInstances.CreateDestinationObjectBaseTypeInt32">
            <summary>设置 EnumerableMapper.CreateDestinationObjectBase(Type destElementType, Int32 sourceLength) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapper.AllInstances.IsMatchResolutionContext">
            <summary>设置 EnumerableMapper.IsMatch(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapper.AllInstances.SetElementValueIListObjectInt32">
            <summary>设置 EnumerableMapper.SetElementValue(IList destination, Object mappedValue, Int32 index) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1">
            <summary>AutoMapper.Mappers.EnumerableMapperBase`1 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1.#ctor(AutoMapper.Mappers.EnumerableMapperBase{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1.Bind(AutoMapper.IObjectMapper)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1.ClearEnumerableT0">
            <summary>设置 EnumerableMapperBase`1.ClearEnumerable(!0 enumerable) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1.Constructor">
            <summary>设置 EnumerableMapperBase`1.EnumerableMapperBase`1() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1.CreateDestinationObjectResolutionContextTypeInt32IMappingEngineRunner">
            <summary>设置 EnumerableMapperBase`1.CreateDestinationObject(ResolutionContext context, Type destinationElementType, Int32 count, IMappingEngineRunner mapper) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1.GetEnumerableForObject">
            <summary>设置 EnumerableMapperBase`1.GetEnumerableFor(Object destination) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1.GetOrCreateDestinationObjectResolutionContextIMappingEngineRunnerTypeInt32">
            <summary>设置 EnumerableMapperBase`1.GetOrCreateDestinationObject(ResolutionContext context, IMappingEngineRunner mapper, Type destElementType, Int32 sourceLength) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1.MapResolutionContextIMappingEngineRunner">
            <summary>设置 EnumerableMapperBase`1.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1.AllInstances.ClearEnumerableT0">
            <summary>设置 EnumerableMapperBase`1.ClearEnumerable(!0 enumerable) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1.AllInstances.CreateDestinationObjectResolutionContextTypeInt32IMappingEngineRunner">
            <summary>设置 EnumerableMapperBase`1.CreateDestinationObject(ResolutionContext context, Type destinationElementType, Int32 count, IMappingEngineRunner mapper) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1.AllInstances.GetEnumerableForObject">
            <summary>设置 EnumerableMapperBase`1.GetEnumerableFor(Object destination) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1.AllInstances.GetOrCreateDestinationObjectResolutionContextIMappingEngineRunnerTypeInt32">
            <summary>设置 EnumerableMapperBase`1.GetOrCreateDestinationObject(ResolutionContext context, IMappingEngineRunner mapper, Type destElementType, Int32 sourceLength) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableMapperBase`1.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>设置 EnumerableMapperBase`1.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimEnumerableToDictionaryMapper">
            <summary>AutoMapper.Mappers.EnumerableToDictionaryMapper 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumerableToDictionaryMapper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumerableToDictionaryMapper.#ctor(AutoMapper.Mappers.EnumerableToDictionaryMapper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumerableToDictionaryMapper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumerableToDictionaryMapper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimEnumerableToDictionaryMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableToDictionaryMapper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableToDictionaryMapper.Constructor">
            <summary>设置 EnumerableToDictionaryMapper.EnumerableToDictionaryMapper() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableToDictionaryMapper.IsMatchResolutionContext">
            <summary>设置 EnumerableToDictionaryMapper.IsMatch(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableToDictionaryMapper.MapResolutionContextIMappingEngineRunner">
            <summary>设置 EnumerableToDictionaryMapper.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableToDictionaryMapper.StaticConstructor">
            <summary>设置 EnumerableToDictionaryMapper.EnumerableToDictionaryMapper() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimEnumerableToDictionaryMapper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableToDictionaryMapper.AllInstances.IsMatchResolutionContext">
            <summary>设置 EnumerableToDictionaryMapper.IsMatch(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimEnumerableToDictionaryMapper.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>设置 EnumerableToDictionaryMapper.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimExplicitConversionOperatorMapper">
            <summary>AutoMapper.Mappers.ExplicitConversionOperatorMapper 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimExplicitConversionOperatorMapper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimExplicitConversionOperatorMapper.#ctor(AutoMapper.Mappers.ExplicitConversionOperatorMapper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimExplicitConversionOperatorMapper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimExplicitConversionOperatorMapper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimExplicitConversionOperatorMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimExplicitConversionOperatorMapper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimExplicitConversionOperatorMapper.Constructor">
            <summary>设置 ExplicitConversionOperatorMapper.ExplicitConversionOperatorMapper() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimExplicitConversionOperatorMapper.GetExplicitConversionOperatorResolutionContext">
            <summary>设置 ExplicitConversionOperatorMapper.GetExplicitConversionOperator(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimExplicitConversionOperatorMapper.IsMatchResolutionContext">
            <summary>设置 ExplicitConversionOperatorMapper.IsMatch(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimExplicitConversionOperatorMapper.MapResolutionContextIMappingEngineRunner">
            <summary>设置 ExplicitConversionOperatorMapper.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimExplicitConversionOperatorMapper._GetExplicitConversionOperatorb__0MethodInfo">
            <summary>设置 ExplicitConversionOperatorMapper.&lt;GetExplicitConversionOperator&gt;b__0(MethodInfo mi) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimExplicitConversionOperatorMapper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimExplicitConversionOperatorMapper.AllInstances.IsMatchResolutionContext">
            <summary>设置 ExplicitConversionOperatorMapper.IsMatch(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimExplicitConversionOperatorMapper.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>设置 ExplicitConversionOperatorMapper.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimFlagsEnumMapper">
            <summary>AutoMapper.Mappers.FlagsEnumMapper 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimFlagsEnumMapper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimFlagsEnumMapper.#ctor(AutoMapper.Mappers.FlagsEnumMapper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimFlagsEnumMapper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimFlagsEnumMapper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimFlagsEnumMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimFlagsEnumMapper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimFlagsEnumMapper.Constructor">
            <summary>设置 FlagsEnumMapper.FlagsEnumMapper() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimFlagsEnumMapper.IsMatchResolutionContext">
            <summary>设置 FlagsEnumMapper.IsMatch(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimFlagsEnumMapper.MapResolutionContextIMappingEngineRunner">
            <summary>设置 FlagsEnumMapper.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimFlagsEnumMapper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimFlagsEnumMapper.AllInstances.IsMatchResolutionContext">
            <summary>设置 FlagsEnumMapper.IsMatch(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimFlagsEnumMapper.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>设置 FlagsEnumMapper.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimImplicitConversionOperatorMapper">
            <summary>AutoMapper.Mappers.ImplicitConversionOperatorMapper 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimImplicitConversionOperatorMapper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimImplicitConversionOperatorMapper.#ctor(AutoMapper.Mappers.ImplicitConversionOperatorMapper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimImplicitConversionOperatorMapper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimImplicitConversionOperatorMapper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimImplicitConversionOperatorMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimImplicitConversionOperatorMapper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimImplicitConversionOperatorMapper.Constructor">
            <summary>设置 ImplicitConversionOperatorMapper.ImplicitConversionOperatorMapper() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimImplicitConversionOperatorMapper.GetImplicitConversionOperatorResolutionContext">
            <summary>设置 ImplicitConversionOperatorMapper.GetImplicitConversionOperator(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimImplicitConversionOperatorMapper.IsMatchResolutionContext">
            <summary>设置 ImplicitConversionOperatorMapper.IsMatch(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimImplicitConversionOperatorMapper.MapResolutionContextIMappingEngineRunner">
            <summary>设置 ImplicitConversionOperatorMapper.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimImplicitConversionOperatorMapper._GetImplicitConversionOperatorb__0MethodInfo">
            <summary>设置 ImplicitConversionOperatorMapper.&lt;GetImplicitConversionOperator&gt;b__0(MethodInfo mi) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimImplicitConversionOperatorMapper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimImplicitConversionOperatorMapper.AllInstances.IsMatchResolutionContext">
            <summary>设置 ImplicitConversionOperatorMapper.IsMatch(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimImplicitConversionOperatorMapper.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>设置 ImplicitConversionOperatorMapper.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimMapperRegistry">
            <summary>AutoMapper.Mappers.MapperRegistry 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimMapperRegistry.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimMapperRegistry.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimMapperRegistry.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimMapperRegistry.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimMapperRegistry.MappersGet">
            <summary>设置 MapperRegistry.get_Mappers() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimMapperRegistry.Reset">
            <summary>设置 MapperRegistry.Reset() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimMapperRegistry.StaticConstructor">
            <summary>设置 MapperRegistry.MapperRegistry() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimNullableMapper">
            <summary>AutoMapper.Mappers.NullableMapper 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimNullableMapper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimNullableMapper.#ctor(AutoMapper.Mappers.NullableMapper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimNullableMapper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimNullableMapper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimNullableMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimNullableMapper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimNullableMapper.Constructor">
            <summary>设置 NullableMapper.NullableMapper() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimNullableMapper.IsMatchResolutionContext">
            <summary>设置 NullableMapper.IsMatch(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimNullableMapper.MapResolutionContextIMappingEngineRunner">
            <summary>设置 NullableMapper.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimNullableMapper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimNullableMapper.AllInstances.IsMatchResolutionContext">
            <summary>设置 NullableMapper.IsMatch(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimNullableMapper.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>设置 NullableMapper.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimNullableSourceMapper">
            <summary>AutoMapper.Mappers.NullableSourceMapper 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimNullableSourceMapper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimNullableSourceMapper.#ctor(AutoMapper.Mappers.NullableSourceMapper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimNullableSourceMapper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimNullableSourceMapper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimNullableSourceMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimNullableSourceMapper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimNullableSourceMapper.Constructor">
            <summary>设置 NullableSourceMapper.NullableSourceMapper() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimNullableSourceMapper.IsMatchResolutionContext">
            <summary>设置 NullableSourceMapper.IsMatch(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimNullableSourceMapper.MapResolutionContextIMappingEngineRunner">
            <summary>设置 NullableSourceMapper.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimNullableSourceMapper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimNullableSourceMapper.AllInstances.IsMatchResolutionContext">
            <summary>设置 NullableSourceMapper.IsMatch(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimNullableSourceMapper.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>设置 NullableSourceMapper.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimObjectCreator">
            <summary>AutoMapper.Mappers.ObjectCreator 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimObjectCreator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimObjectCreator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimObjectCreator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimObjectCreator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimObjectCreator.CreateArrayTypeInt32">
            <summary>设置 ObjectCreator.CreateArray(Type elementType, Int32 length) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimObjectCreator.CreateDefaultValueType">
            <summary>设置 ObjectCreator.CreateDefaultValue(Type type) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimObjectCreator.CreateDictionaryTypeTypeType">
            <summary>设置 ObjectCreator.CreateDictionary(Type dictionaryType, Type keyType, Type valueType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimObjectCreator.CreateListType">
            <summary>设置 ObjectCreator.CreateList(Type elementType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimObjectCreator.CreateNonNullValueType">
            <summary>设置 ObjectCreator.CreateNonNullValue(Type type) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimObjectCreator.CreateObjectType">
            <summary>设置 ObjectCreator.CreateObject(Type type) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimObjectCreator.StaticConstructor">
            <summary>设置 ObjectCreator.ObjectCreator() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimPlatformSpecificMapperRegistry">
            <summary>AutoMapper.Mappers.PlatformSpecificMapperRegistry 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimPlatformSpecificMapperRegistry.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimPlatformSpecificMapperRegistry.#ctor(AutoMapper.Mappers.PlatformSpecificMapperRegistry)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimPlatformSpecificMapperRegistry.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimPlatformSpecificMapperRegistry.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimPlatformSpecificMapperRegistry.Bind(AutoMapper.Mappers.IPlatformSpecificMapperRegistry)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimPlatformSpecificMapperRegistry.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimPlatformSpecificMapperRegistry.Constructor">
            <summary>设置 PlatformSpecificMapperRegistry.PlatformSpecificMapperRegistry() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimPlatformSpecificMapperRegistry.Initialize">
            <summary>设置 PlatformSpecificMapperRegistry.Initialize() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimPlatformSpecificMapperRegistry.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimPlatformSpecificMapperRegistry.AllInstances.Initialize">
            <summary>设置 PlatformSpecificMapperRegistry.Initialize() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimPrimitiveArrayMapper">
            <summary>AutoMapper.Mappers.PrimitiveArrayMapper 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimPrimitiveArrayMapper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimPrimitiveArrayMapper.#ctor(AutoMapper.Mappers.PrimitiveArrayMapper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimPrimitiveArrayMapper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimPrimitiveArrayMapper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimPrimitiveArrayMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimPrimitiveArrayMapper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimPrimitiveArrayMapper.Constructor">
            <summary>设置 PrimitiveArrayMapper.PrimitiveArrayMapper() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimPrimitiveArrayMapper.IsMatchResolutionContext">
            <summary>设置 PrimitiveArrayMapper.IsMatch(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimPrimitiveArrayMapper.IsPrimitiveArrayTypeType">
            <summary>设置 PrimitiveArrayMapper.IsPrimitiveArrayType(Type type) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimPrimitiveArrayMapper.MapResolutionContextIMappingEngineRunner">
            <summary>设置 PrimitiveArrayMapper.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimPrimitiveArrayMapper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimPrimitiveArrayMapper.AllInstances.IsMatchResolutionContext">
            <summary>设置 PrimitiveArrayMapper.IsMatch(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimPrimitiveArrayMapper.AllInstances.IsPrimitiveArrayTypeType">
            <summary>设置 PrimitiveArrayMapper.IsPrimitiveArrayType(Type type) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimPrimitiveArrayMapper.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>设置 PrimitiveArrayMapper.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimReadOnlyCollectionMapper">
            <summary>AutoMapper.Mappers.ReadOnlyCollectionMapper 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimReadOnlyCollectionMapper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimReadOnlyCollectionMapper.#ctor(AutoMapper.Mappers.ReadOnlyCollectionMapper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimReadOnlyCollectionMapper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimReadOnlyCollectionMapper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimReadOnlyCollectionMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimReadOnlyCollectionMapper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimReadOnlyCollectionMapper.Constructor">
            <summary>设置 ReadOnlyCollectionMapper.ReadOnlyCollectionMapper() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimReadOnlyCollectionMapper.IsMatchResolutionContext">
            <summary>设置 ReadOnlyCollectionMapper.IsMatch(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimReadOnlyCollectionMapper.MapResolutionContextIMappingEngineRunner">
            <summary>设置 ReadOnlyCollectionMapper.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimReadOnlyCollectionMapper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimReadOnlyCollectionMapper.AllInstances.IsMatchResolutionContext">
            <summary>设置 ReadOnlyCollectionMapper.IsMatch(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimReadOnlyCollectionMapper.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>设置 ReadOnlyCollectionMapper.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimStringMapper">
            <summary>AutoMapper.Mappers.StringMapper 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimStringMapper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimStringMapper.#ctor(AutoMapper.Mappers.StringMapper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimStringMapper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimStringMapper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimStringMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimStringMapper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimStringMapper.Constructor">
            <summary>设置 StringMapper.StringMapper() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimStringMapper.IsMatchResolutionContext">
            <summary>设置 StringMapper.IsMatch(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimStringMapper.MapResolutionContextIMappingEngineRunner">
            <summary>设置 StringMapper.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimStringMapper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimStringMapper.AllInstances.IsMatchResolutionContext">
            <summary>设置 StringMapper.IsMatch(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimStringMapper.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>设置 StringMapper.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimTypeHelper">
            <summary>AutoMapper.Mappers.TypeHelper 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimTypeHelper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimTypeHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimTypeHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimTypeHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimTypeHelper.GetElementTypeType">
            <summary>设置 TypeHelper.GetElementType(Type enumerableType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimTypeHelper.GetElementTypeTypeIEnumerable">
            <summary>设置 TypeHelper.GetElementType(Type enumerableType, IEnumerable enumerable) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimTypeHelper.GetEnumerationTypeType">
            <summary>设置 TypeHelper.GetEnumerationType(Type enumType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimTypeHelper.GetIEnumerableTypeType">
            <summary>设置 TypeHelper.GetIEnumerableType(Type enumerableType) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimTypeHelper._GetIEnumerableTypeb__0Type">
            <summary>设置 TypeHelper.&lt;GetIEnumerableType&gt;b__0(Type t) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimTypeMapMapper">
            <summary>AutoMapper.Mappers.TypeMapMapper 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimTypeMapMapper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimTypeMapMapper.#ctor(AutoMapper.Mappers.TypeMapMapper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimTypeMapMapper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimTypeMapMapper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimTypeMapMapper.Bind(AutoMapper.IObjectMapper)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimTypeMapMapper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimTypeMapMapper.ConstructorIEnumerableOfITypeMapObjectMapper">
            <summary>设置 TypeMapMapper.TypeMapMapper(IEnumerable`1&lt;ITypeMapObjectMapper&gt; mappers) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimTypeMapMapper.IsMatchResolutionContext">
            <summary>设置 TypeMapMapper.IsMatch(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimTypeMapMapper.MapResolutionContextIMappingEngineRunner">
            <summary>设置 TypeMapMapper.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimTypeMapMapper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimTypeMapMapper.AllInstances.IsMatchResolutionContext">
            <summary>设置 TypeMapMapper.IsMatch(ResolutionContext context) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimTypeMapMapper.AllInstances.MapResolutionContextIMappingEngineRunner">
            <summary>设置 TypeMapMapper.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.ShimTypeMapObjectMapperRegistry">
            <summary>AutoMapper.Mappers.TypeMapObjectMapperRegistry 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimTypeMapObjectMapperRegistry.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimTypeMapObjectMapperRegistry.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.ShimTypeMapObjectMapperRegistry.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimTypeMapObjectMapperRegistry.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimTypeMapObjectMapperRegistry.MappersGet">
            <summary>设置 TypeMapObjectMapperRegistry.get_Mappers() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.ShimTypeMapObjectMapperRegistry.StaticConstructor">
            <summary>设置 TypeMapObjectMapperRegistry.TypeMapObjectMapperRegistry() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubArrayMapper">
            <summary>AutoMapper.Mappers.ArrayMapper 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubArrayMapper.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubArrayMapper.ClearEnumerable(System.Array)">
            <summary>设置 ArrayMapper.ClearEnumerable(Array enumerable) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubArrayMapper.ClearEnumerableArray">
            <summary>设置 ArrayMapper.ClearEnumerable(Array enumerable) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubArrayMapper.CreateDestinationObject(AutoMapper.ResolutionContext,System.Type,System.Int32,AutoMapper.IMappingEngineRunner)">
            <summary>设置 EnumerableMapperBase`1.CreateDestinationObject(ResolutionContext context, Type destinationElementType, Int32 count, IMappingEngineRunner mapper) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubArrayMapper.CreateDestinationObjectBase(System.Type,System.Int32)">
            <summary>设置 ArrayMapper.CreateDestinationObjectBase(Type destElementType, Int32 sourceLength) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubArrayMapper.CreateDestinationObjectBaseTypeInt32">
            <summary>设置 ArrayMapper.CreateDestinationObjectBase(Type destElementType, Int32 sourceLength) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubArrayMapper.CreateDestinationObjectResolutionContextTypeInt32IMappingEngineRunner">
            <summary>设置 EnumerableMapperBase`1.CreateDestinationObject(ResolutionContext context, Type destinationElementType, Int32 count, IMappingEngineRunner mapper) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubArrayMapper.GetEnumerableFor(System.Object)">
            <summary>设置 EnumerableMapperBase`1.GetEnumerableFor(Object destination) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubArrayMapper.GetEnumerableForObject">
            <summary>设置 EnumerableMapperBase`1.GetEnumerableFor(Object destination) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubArrayMapper.GetOrCreateDestinationObject(AutoMapper.ResolutionContext,AutoMapper.IMappingEngineRunner,System.Type,System.Int32)">
            <summary>设置 ArrayMapper.GetOrCreateDestinationObject(ResolutionContext context, IMappingEngineRunner mapper, Type destElementType, Int32 sourceLength) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubArrayMapper.GetOrCreateDestinationObjectResolutionContextIMappingEngineRunnerTypeInt32">
            <summary>设置 ArrayMapper.GetOrCreateDestinationObject(ResolutionContext context, IMappingEngineRunner mapper, Type destElementType, Int32 sourceLength) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubArrayMapper.InitializeStub">
            <summary>初始化 type StubArrayMapper 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubArrayMapper.IsMatch(AutoMapper.ResolutionContext)">
            <summary>设置 ArrayMapper.IsMatch(ResolutionContext context) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubArrayMapper.IsMatchResolutionContext">
            <summary>设置 ArrayMapper.IsMatch(ResolutionContext context) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubArrayMapper.SetElementValue(System.Array,System.Object,System.Int32)">
            <summary>设置 ArrayMapper.SetElementValue(Array destination, Object mappedValue, Int32 index) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubArrayMapper.SetElementValueArrayObjectInt32">
            <summary>设置 ArrayMapper.SetElementValue(Array destination, Object mappedValue, Int32 index) 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubArrayMapper.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubArrayMapper.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubArrayMapper.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubAssignableArrayMapper">
            <summary>AutoMapper.Mappers.AssignableArrayMapper 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubAssignableArrayMapper.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubAssignableArrayMapper.InitializeStub">
            <summary>初始化 type StubAssignableArrayMapper 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubAssignableArrayMapper.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubAssignableArrayMapper.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubAssignableArrayMapper.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubAssignableMapper">
            <summary>AutoMapper.Mappers.AssignableMapper 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubAssignableMapper.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubAssignableMapper.InitializeStub">
            <summary>初始化 type StubAssignableMapper 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubAssignableMapper.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubAssignableMapper.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubAssignableMapper.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubCollectionMapper">
            <summary>AutoMapper.Mappers.CollectionMapper 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubCollectionMapper.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubCollectionMapper.InitializeStub">
            <summary>初始化 type StubCollectionMapper 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubCollectionMapper.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubCollectionMapper.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubCollectionMapper.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubDictionaryMapper">
            <summary>AutoMapper.Mappers.DictionaryMapper 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubDictionaryMapper.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubDictionaryMapper.InitializeStub">
            <summary>初始化 type StubDictionaryMapper 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubDictionaryMapper.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubDictionaryMapper.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubDictionaryMapper.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubEnumMapper">
            <summary>AutoMapper.Mappers.EnumMapper 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumMapper.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumMapper.InitializeStub">
            <summary>初始化 type StubEnumMapper 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubEnumMapper.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubEnumMapper.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubEnumMapper.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubEnumerableMapper">
            <summary>AutoMapper.Mappers.EnumerableMapper 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapper.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapper.ClearEnumerable(System.Collections.IList)">
            <summary>设置 EnumerableMapper.ClearEnumerable(IList enumerable) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubEnumerableMapper.ClearEnumerableIList">
            <summary>设置 EnumerableMapper.ClearEnumerable(IList enumerable) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapper.CreateDestinationObject(AutoMapper.ResolutionContext,System.Type,System.Int32,AutoMapper.IMappingEngineRunner)">
            <summary>设置 EnumerableMapperBase`1.CreateDestinationObject(ResolutionContext context, Type destinationElementType, Int32 count, IMappingEngineRunner mapper) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapper.CreateDestinationObjectBase(System.Type,System.Int32)">
            <summary>设置 EnumerableMapper.CreateDestinationObjectBase(Type destElementType, Int32 sourceLength) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubEnumerableMapper.CreateDestinationObjectBaseTypeInt32">
            <summary>设置 EnumerableMapper.CreateDestinationObjectBase(Type destElementType, Int32 sourceLength) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubEnumerableMapper.CreateDestinationObjectResolutionContextTypeInt32IMappingEngineRunner">
            <summary>设置 EnumerableMapperBase`1.CreateDestinationObject(ResolutionContext context, Type destinationElementType, Int32 count, IMappingEngineRunner mapper) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapper.GetEnumerableFor(System.Object)">
            <summary>设置 EnumerableMapperBase`1.GetEnumerableFor(Object destination) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubEnumerableMapper.GetEnumerableForObject">
            <summary>设置 EnumerableMapperBase`1.GetEnumerableFor(Object destination) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapper.GetOrCreateDestinationObject(AutoMapper.ResolutionContext,AutoMapper.IMappingEngineRunner,System.Type,System.Int32)">
            <summary>设置 EnumerableMapperBase`1.GetOrCreateDestinationObject(ResolutionContext context, IMappingEngineRunner mapper, Type destElementType, Int32 sourceLength) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubEnumerableMapper.GetOrCreateDestinationObjectResolutionContextIMappingEngineRunnerTypeInt32">
            <summary>设置 EnumerableMapperBase`1.GetOrCreateDestinationObject(ResolutionContext context, IMappingEngineRunner mapper, Type destElementType, Int32 sourceLength) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapper.InitializeStub">
            <summary>初始化 type StubEnumerableMapper 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapper.IsMatch(AutoMapper.ResolutionContext)">
            <summary>设置 EnumerableMapper.IsMatch(ResolutionContext context) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubEnumerableMapper.IsMatchResolutionContext">
            <summary>设置 EnumerableMapper.IsMatch(ResolutionContext context) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapper.SetElementValue(System.Collections.IList,System.Object,System.Int32)">
            <summary>设置 EnumerableMapper.SetElementValue(IList destination, Object mappedValue, Int32 index) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubEnumerableMapper.SetElementValueIListObjectInt32">
            <summary>设置 EnumerableMapper.SetElementValue(IList destination, Object mappedValue, Int32 index) 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubEnumerableMapper.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubEnumerableMapper.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubEnumerableMapper.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1">
            <summary>AutoMapper.Mappers.EnumerableMapperBase`1 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.ClearEnumerable(`0)">
            <summary>设置 EnumerableMapperBase`1.ClearEnumerable(!0 enumerable) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.ClearEnumerableT0">
            <summary>设置 EnumerableMapperBase`1.ClearEnumerable(!0 enumerable) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.CreateDestinationObject(AutoMapper.ResolutionContext,System.Type,System.Int32,AutoMapper.IMappingEngineRunner)">
            <summary>设置 EnumerableMapperBase`1.CreateDestinationObject(ResolutionContext context, Type destinationElementType, Int32 count, IMappingEngineRunner mapper) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.CreateDestinationObjectBase(System.Type,System.Int32)">
            <summary>设置 EnumerableMapperBase`1.CreateDestinationObjectBase(Type destElementType, Int32 sourceLength) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.CreateDestinationObjectBaseTypeInt32">
            <summary>设置 EnumerableMapperBase`1.CreateDestinationObjectBase(Type destElementType, Int32 sourceLength) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.CreateDestinationObjectResolutionContextTypeInt32IMappingEngineRunner">
            <summary>设置 EnumerableMapperBase`1.CreateDestinationObject(ResolutionContext context, Type destinationElementType, Int32 count, IMappingEngineRunner mapper) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.GetEnumerableFor(System.Object)">
            <summary>设置 EnumerableMapperBase`1.GetEnumerableFor(Object destination) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.GetEnumerableForObject">
            <summary>设置 EnumerableMapperBase`1.GetEnumerableFor(Object destination) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.GetOrCreateDestinationObject(AutoMapper.ResolutionContext,AutoMapper.IMappingEngineRunner,System.Type,System.Int32)">
            <summary>设置 EnumerableMapperBase`1.GetOrCreateDestinationObject(ResolutionContext context, IMappingEngineRunner mapper, Type destElementType, Int32 sourceLength) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.GetOrCreateDestinationObjectResolutionContextIMappingEngineRunnerTypeInt32">
            <summary>设置 EnumerableMapperBase`1.GetOrCreateDestinationObject(ResolutionContext context, IMappingEngineRunner mapper, Type destElementType, Int32 sourceLength) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.InitializeStub">
            <summary>初始化 type StubEnumerableMapperBase 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.IsMatch(AutoMapper.ResolutionContext)">
            <summary>设置 EnumerableMapperBase`1.IsMatch(ResolutionContext context) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.IsMatchResolutionContext">
            <summary>设置 EnumerableMapperBase`1.IsMatch(ResolutionContext context) 的 stub</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.SetElementValue(`0,System.Object,System.Int32)">
            <summary>设置 EnumerableMapperBase`1.SetElementValue(!0 destination, Object mappedValue, Int32 index) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.SetElementValueT0ObjectInt32">
            <summary>设置 EnumerableMapperBase`1.SetElementValue(!0 destination, Object mappedValue, Int32 index) 的 stub</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubEnumerableMapperBase`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubEnumerableToDictionaryMapper">
            <summary>AutoMapper.Mappers.EnumerableToDictionaryMapper 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableToDictionaryMapper.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubEnumerableToDictionaryMapper.InitializeStub">
            <summary>初始化 type StubEnumerableToDictionaryMapper 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubEnumerableToDictionaryMapper.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubEnumerableToDictionaryMapper.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubEnumerableToDictionaryMapper.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubExplicitConversionOperatorMapper">
            <summary>AutoMapper.Mappers.ExplicitConversionOperatorMapper 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubExplicitConversionOperatorMapper.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubExplicitConversionOperatorMapper.InitializeStub">
            <summary>初始化 type StubExplicitConversionOperatorMapper 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubExplicitConversionOperatorMapper.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubExplicitConversionOperatorMapper.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubExplicitConversionOperatorMapper.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubFlagsEnumMapper">
            <summary>AutoMapper.Mappers.FlagsEnumMapper 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubFlagsEnumMapper.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubFlagsEnumMapper.InitializeStub">
            <summary>初始化 type StubFlagsEnumMapper 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubFlagsEnumMapper.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubFlagsEnumMapper.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubFlagsEnumMapper.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubIPlatformSpecificMapperRegistry">
            <summary>AutoMapper.Mappers.IPlatformSpecificMapperRegistry 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubIPlatformSpecificMapperRegistry.#ctor">
            <summary>初始化 type StubIPlatformSpecificMapperRegistry 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubIPlatformSpecificMapperRegistry.am::AutoMapper#Mappers#IPlatformSpecificMapperRegistry#Initialize">
            <summary>设置 IPlatformSpecificMapperRegistry.Initialize() 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubIPlatformSpecificMapperRegistry.Initialize">
            <summary>设置 IPlatformSpecificMapperRegistry.Initialize() 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubITypeMapObjectMapper">
            <summary>AutoMapper.Mappers.ITypeMapObjectMapper 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubITypeMapObjectMapper.#ctor">
            <summary>初始化 type StubITypeMapObjectMapper 的新实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubITypeMapObjectMapper.am::AutoMapper#Mappers#ITypeMapObjectMapper#IsMatch(AutoMapper.ResolutionContext,AutoMapper.IMappingEngineRunner)">
            <summary>设置 ITypeMapObjectMapper.IsMatch(ResolutionContext context, IMappingEngineRunner mapper) 的 存根</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubITypeMapObjectMapper.am::AutoMapper#Mappers#ITypeMapObjectMapper#Map(AutoMapper.ResolutionContext,AutoMapper.IMappingEngineRunner)">
            <summary>设置 ITypeMapObjectMapper.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 存根</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubITypeMapObjectMapper.IsMatchResolutionContextIMappingEngineRunner">
            <summary>设置 ITypeMapObjectMapper.IsMatch(ResolutionContext context, IMappingEngineRunner mapper) 的 stub</summary>
        </member>
        <member name="F:AutoMapper.Mappers.Fakes.StubITypeMapObjectMapper.MapResolutionContextIMappingEngineRunner">
            <summary>设置 ITypeMapObjectMapper.Map(ResolutionContext context, IMappingEngineRunner mapper) 的 stub</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubImplicitConversionOperatorMapper">
            <summary>AutoMapper.Mappers.ImplicitConversionOperatorMapper 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubImplicitConversionOperatorMapper.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubImplicitConversionOperatorMapper.InitializeStub">
            <summary>初始化 type StubImplicitConversionOperatorMapper 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubImplicitConversionOperatorMapper.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubImplicitConversionOperatorMapper.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubImplicitConversionOperatorMapper.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubNullableMapper">
            <summary>AutoMapper.Mappers.NullableMapper 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubNullableMapper.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubNullableMapper.InitializeStub">
            <summary>初始化 type StubNullableMapper 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubNullableMapper.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubNullableMapper.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubNullableMapper.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubNullableSourceMapper">
            <summary>AutoMapper.Mappers.NullableSourceMapper 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubNullableSourceMapper.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubNullableSourceMapper.InitializeStub">
            <summary>初始化 type StubNullableSourceMapper 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubNullableSourceMapper.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubNullableSourceMapper.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubNullableSourceMapper.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubPlatformSpecificMapperRegistry">
            <summary>AutoMapper.Mappers.PlatformSpecificMapperRegistry 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubPlatformSpecificMapperRegistry.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubPlatformSpecificMapperRegistry.InitializeStub">
            <summary>初始化 type StubPlatformSpecificMapperRegistry 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubPlatformSpecificMapperRegistry.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubPlatformSpecificMapperRegistry.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubPlatformSpecificMapperRegistry.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubPrimitiveArrayMapper">
            <summary>AutoMapper.Mappers.PrimitiveArrayMapper 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubPrimitiveArrayMapper.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubPrimitiveArrayMapper.InitializeStub">
            <summary>初始化 type StubPrimitiveArrayMapper 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubPrimitiveArrayMapper.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubPrimitiveArrayMapper.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubPrimitiveArrayMapper.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubReadOnlyCollectionMapper">
            <summary>AutoMapper.Mappers.ReadOnlyCollectionMapper 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubReadOnlyCollectionMapper.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubReadOnlyCollectionMapper.InitializeStub">
            <summary>初始化 type StubReadOnlyCollectionMapper 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubReadOnlyCollectionMapper.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubReadOnlyCollectionMapper.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubReadOnlyCollectionMapper.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubStringMapper">
            <summary>AutoMapper.Mappers.StringMapper 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubStringMapper.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubStringMapper.InitializeStub">
            <summary>初始化 type StubStringMapper 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubStringMapper.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubStringMapper.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubStringMapper.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.Mappers.Fakes.StubTypeMapMapper">
            <summary>AutoMapper.Mappers.TypeMapMapper 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubTypeMapMapper.#ctor(System.Collections.Generic.IEnumerable{AutoMapper.Mappers.ITypeMapObjectMapper})">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.Mappers.Fakes.StubTypeMapMapper.InitializeStub">
            <summary>初始化 type StubTypeMapMapper 的新实例</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubTypeMapMapper.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubTypeMapMapper.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.Mappers.Fakes.StubTypeMapMapper.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Fakes.ShimExtensions">
            <summary>AutoMapper.QueryableExtensions.Extensions 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.CreateMapExpressionOf2IMappingEngine``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.IMappingEngine,System.Linq.Expressions.Expression{System.Func{``0,``1}}})">
            <summary>设置 Extensions.CreateMapExpression(IMappingEngine mappingEngine) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.ProjectOf1IQueryableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},AutoMapper.QueryableExtensions.IProjectionExpression})">
            <summary>设置 Extensions.Project(IQueryable`1&lt;!!0&gt; source) 的 填充码</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.ProjectOf1IQueryableOfM0IMappingEngine``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0},AutoMapper.IMappingEngine,AutoMapper.QueryableExtensions.IProjectionExpression})">
            <summary>设置 Extensions.Project(IQueryable`1&lt;!!0&gt; source, IMappingEngine mappingEngine) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.BindAssignableExpressionMemberInfoExtensionsExpressionResolutionResult">
            <summary>设置 Extensions.BindAssignableExpression(MemberInfo destinationMember, ExpressionResolutionResult result) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.BindEnumerableExpressionIMappingEnginePropertyMapExtensionsExpressionResolutionResultMemberInfoIDictionaryOfTypePairInt32">
            <summary>设置 Extensions.BindEnumerableExpression(IMappingEngine mappingEngine, PropertyMap propertyMap, ExpressionResolutionResult result, MemberInfo destinationMember, IDictionary`2&lt;TypePair,Int32&gt; typePairCount) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.BindMappedTypeExpressionIMappingEnginePropertyMapExtensionsExpressionResolutionResultMemberInfoIDictionaryOfTypePairInt32">
            <summary>设置 Extensions.BindMappedTypeExpression(IMappingEngine mappingEngine, PropertyMap propertyMap, ExpressionResolutionResult result, MemberInfo destinationMember, IDictionary`2&lt;TypePair,Int32&gt; typePairCount) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.BindNullableExpressionPropertyMapExtensionsExpressionResolutionResultMemberInfo">
            <summary>设置 Extensions.BindNullableExpression(PropertyMap propertyMap, ExpressionResolutionResult result, MemberInfo destinationMember) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.CreateMapExpressionIMappingEngineTypePairExpressionIDictionaryOfTypePairInt32">
            <summary>设置 Extensions.CreateMapExpression(IMappingEngine mappingEngine, TypePair typePair, Expression instanceParameter, IDictionary`2&lt;TypePair,Int32&gt; typePairCount) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.CreateMapExpressionIMappingEngineTypePairIDictionaryOfTypePairInt32">
            <summary>设置 Extensions.CreateMapExpression(IMappingEngine mappingEngine, TypePair typePair, IDictionary`2&lt;TypePair,Int32&gt; typePairCount) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.CreateMemberBindingsIMappingEngineTypePairTypeMapExpressionIDictionaryOfTypePairInt32">
            <summary>设置 Extensions.CreateMemberBindings(IMappingEngine mappingEngine, TypePair typePair, TypeMap typeMap, Expression instanceParameter, IDictionary`2&lt;TypePair,Int32&gt; typePairCount) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.GetDestinationListTypeForPropertyMap">
            <summary>设置 Extensions.GetDestinationListTypeFor(PropertyMap propertyMap) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.GetToListCallExpressionPropertyMapTypeExpression">
            <summary>设置 Extensions.GetToListCallExpression(PropertyMap propertyMap, Type destinationListType, Expression selectExpression) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.ResolveExpressionPropertyMapTypeExpression">
            <summary>设置 Extensions.ResolveExpression(PropertyMap propertyMap, Type currentType, Expression instanceParameter) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.StaticConstructor">
            <summary>设置 Extensions.Extensions() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExtensions._CreateMemberBindingsb__3TypePairInt32">
            <summary>设置 Extensions.&lt;CreateMemberBindings&gt;b__3(TypePair tp, Int32 i) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExtensions._CreateMemberBindingsb__4PropertyMap">
            <summary>设置 Extensions.&lt;CreateMemberBindings&gt;b__4(PropertyMap pm) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExtensions._CreateMemberBindingsb__5Type">
            <summary>设置 Extensions.&lt;CreateMemberBindings&gt;b__5(Type t) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.ShimExpressionResolutionResult">
            <summary>AutoMapper.QueryableExtensions.Extensions+ExpressionResolutionResult 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.ShimExpressionResolutionResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.ShimExpressionResolutionResult.#ctor(AutoMapper.QueryableExtensions.Extensions.ExpressionResolutionResult)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.ShimExpressionResolutionResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.ShimExpressionResolutionResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.ShimExpressionResolutionResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.ShimExpressionResolutionResult.ConstructorExpressionType">
            <summary>设置 ExpressionResolutionResult.ExpressionResolutionResult(Expression resolutionExpression, Type type) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.ShimExpressionResolutionResult.ResolutionExpressionGet">
            <summary>设置 ExpressionResolutionResult.get_ResolutionExpression() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.ShimExpressionResolutionResult.ResolutionExpressionSetExpression">
            <summary>设置 ExpressionResolutionResult.set_ResolutionExpression(Expression value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.ShimExpressionResolutionResult.TypeGet">
            <summary>设置 ExpressionResolutionResult.get_Type() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.ShimExpressionResolutionResult.TypeSetType">
            <summary>设置 ExpressionResolutionResult.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.ShimExpressionResolutionResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.ShimExpressionResolutionResult.AllInstances.ResolutionExpressionGet">
            <summary>设置 ExpressionResolutionResult.get_ResolutionExpression() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.ShimExpressionResolutionResult.AllInstances.ResolutionExpressionSetExpression">
            <summary>设置 ExpressionResolutionResult.set_ResolutionExpression(Expression value) 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.ShimExpressionResolutionResult.AllInstances.TypeGet">
            <summary>设置 ExpressionResolutionResult.get_Type() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimExtensions.ShimExpressionResolutionResult.AllInstances.TypeSetType">
            <summary>设置 ExpressionResolutionResult.set_Type(Type value) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression`1">
            <summary>AutoMapper.QueryableExtensions.ProjectionExpression`1 的填充码类型</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression`1.#ctor(AutoMapper.QueryableExtensions.ProjectionExpression{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression`1.Bind(AutoMapper.QueryableExtensions.IProjectionExpression)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression`1.ToOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0}})">
            <summary>设置 ProjectionExpression`1.To() 的 填充码</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression`1.ConstructorIQueryableOfT0IMappingEngine">
            <summary>设置 ProjectionExpression`1.ProjectionExpression`1(IQueryable`1&lt;!0&gt; source, IMappingEngine mappingEngine) 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.ShimProjectionExpression`1.AllInstances.ToOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AutoMapper.QueryableExtensions.ProjectionExpression{`0},System.Linq.IQueryable{``0}})">
            <summary>设置 ProjectionExpression`1.To() 的 填充码</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Fakes.StubIProjectionExpression">
            <summary>AutoMapper.QueryableExtensions.IProjectionExpression 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.StubIProjectionExpression.#ctor">
            <summary>初始化 type StubIProjectionExpression 的新实例</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.StubIProjectionExpression.am::AutoMapper#QueryableExtensions#IProjectionExpression#To``1">
            <summary>设置 IProjectionExpression.To() 的 存根</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.StubIProjectionExpression.ToOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.IQueryable{``0}})">
            <summary>设置 To() 的存根</summary>
        </member>
        <member name="T:AutoMapper.QueryableExtensions.Fakes.StubProjectionExpression`1">
            <summary>AutoMapper.QueryableExtensions.ProjectionExpression`1 的存根类型</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.StubProjectionExpression`1.#ctor(System.Linq.IQueryable{`0},AutoMapper.IMappingEngine)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:AutoMapper.QueryableExtensions.Fakes.StubProjectionExpression`1.InitializeStub">
            <summary>初始化 type StubProjectionExpression 的新实例</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.StubProjectionExpression`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.StubProjectionExpression`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:AutoMapper.QueryableExtensions.Fakes.StubProjectionExpression`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
    </members>
</doc>
